{
  "documentation": "<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the AWS Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>",
  "metadata": {
    "apiVersion": "2018-04-01",
    "endpointPrefix": "quicksight",
    "jsonVersion": "1.0",
    "protocol": "rest-json",
    "serviceFullName": "Amazon QuickSight",
    "serviceId": "QuickSight",
    "signatureVersion": "v4",
    "uid": "quicksight-2018-04-01"
  },
  "operations": {
    "CancelIngestion": {
      "documentation": "<p>Cancels an ongoing ingestion of data into SPICE.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "CancelIngestionRequest"
      },
      "name": "CancelIngestion",
      "output": {
        "shape": "CancelIngestionResponse"
      }
    },
    "CreateDashboard": {
      "documentation": "<p>Creates a dashboard from a template. To first create a template, see the CreateTemplate API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>, and <code>ListDashboardsByUser</code> API operations act on the dashboard entity. If you have the correct permissions, you can create a dashboard from a template that exists in a different AWS account.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "CreateDashboardRequest"
      },
      "name": "CreateDashboard",
      "output": {
        "shape": "CreateDashboardResponse"
      }
    },
    "CreateDataSet": {
      "documentation": "<p>Creates a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sets"
      },
      "input": {
        "shape": "CreateDataSetRequest"
      },
      "name": "CreateDataSet",
      "output": {
        "shape": "CreateDataSetResponse"
      }
    },
    "CreateDataSource": {
      "documentation": "<p>Creates a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sources"
      },
      "input": {
        "shape": "CreateDataSourceRequest"
      },
      "name": "CreateDataSource",
      "output": {
        "shape": "CreateDataSourceResponse"
      }
    },
    "CreateGroup": {
      "documentation": "<p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups"
      },
      "input": {
        "shape": "CreateGroupRequest"
      },
      "name": "CreateGroup",
      "output": {
        "shape": "CreateGroupResponse"
      }
    },
    "CreateGroupMembership": {
      "documentation": "<p>Adds an Amazon QuickSight user to an Amazon QuickSight group. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}"
      },
      "input": {
        "shape": "CreateGroupMembershipRequest"
      },
      "name": "CreateGroupMembership",
      "output": {
        "shape": "CreateGroupMembershipResponse"
      }
    },
    "CreateIAMPolicyAssignment": {
      "documentation": "<p>Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight. The users and groups need to be in the same namespace. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/"
      },
      "input": {
        "shape": "CreateIAMPolicyAssignmentRequest"
      },
      "name": "CreateIAMPolicyAssignment",
      "output": {
        "shape": "CreateIAMPolicyAssignmentResponse"
      }
    },
    "CreateIngestion": {
      "documentation": "<p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href=\"https://aws.example.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/\">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "CreateIngestionRequest"
      },
      "name": "CreateIngestion",
      "output": {
        "shape": "CreateIngestionResponse"
      }
    },
    "CreateTemplate": {
      "documentation": "<p>Creates a template from an existing QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "CreateTemplateRequest"
      },
      "name": "CreateTemplate",
      "output": {
        "shape": "CreateTemplateResponse"
      }
    },
    "CreateTemplateAlias": {
      "documentation": "<p>Creates a template alias for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "CreateTemplateAliasRequest"
      },
      "name": "CreateTemplateAlias",
      "output": {
        "shape": "CreateTemplateAliasResponse"
      }
    },
    "DeleteDashboard": {
      "documentation": "<p>Deletes a dashboard.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "DeleteDashboardRequest"
      },
      "name": "DeleteDashboard",
      "output": {
        "shape": "DeleteDashboardResponse"
      }
    },
    "DeleteDataSet": {
      "documentation": "<p>Deletes a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "DeleteDataSetRequest"
      },
      "name": "DeleteDataSet",
      "output": {
        "shape": "DeleteDataSetResponse"
      }
    },
    "DeleteDataSource": {
      "documentation": "<p>Deletes the data source permanently. This action breaks all the datasets that reference the deleted data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "DeleteDataSourceRequest"
      },
      "name": "DeleteDataSource",
      "output": {
        "shape": "DeleteDataSourceResponse"
      }
    },
    "DeleteGroup": {
      "documentation": "<p>Removes a user group from Amazon QuickSight. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "DeleteGroupRequest"
      },
      "name": "DeleteGroup",
      "output": {
        "shape": "DeleteGroupResponse"
      }
    },
    "DeleteGroupMembership": {
      "documentation": "<p>Removes a user from a group so that the user is no longer a member of the group.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}"
      },
      "input": {
        "shape": "DeleteGroupMembershipRequest"
      },
      "name": "DeleteGroupMembership",
      "output": {
        "shape": "DeleteGroupMembershipResponse"
      }
    },
    "DeleteIAMPolicyAssignment": {
      "documentation": "<p>Deletes an existing IAM policy assignment.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "DeleteIAMPolicyAssignmentRequest"
      },
      "name": "DeleteIAMPolicyAssignment",
      "output": {
        "shape": "DeleteIAMPolicyAssignmentResponse"
      }
    },
    "DeleteTemplate": {
      "documentation": "<p>Deletes a template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "DeleteTemplateRequest"
      },
      "name": "DeleteTemplate",
      "output": {
        "shape": "DeleteTemplateResponse"
      }
    },
    "DeleteTemplateAlias": {
      "documentation": "<p>Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DeleteTemplateAliasRequest"
      },
      "name": "DeleteTemplateAlias",
      "output": {
        "shape": "DeleteTemplateAliasResponse"
      }
    },
    "DeleteUser": {
      "documentation": "<p>Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "DeleteUserRequest"
      },
      "name": "DeleteUser",
      "output": {
        "shape": "DeleteUserResponse"
      }
    },
    "DeleteUserByPrincipalId": {
      "documentation": "<p>Deletes a user identified by its principal ID. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}"
      },
      "input": {
        "shape": "DeleteUserByPrincipalIdRequest"
      },
      "name": "DeleteUserByPrincipalId",
      "output": {
        "shape": "DeleteUserByPrincipalIdResponse"
      }
    },
    "DescribeDashboard": {
      "documentation": "<p>Provides a summary for a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "DescribeDashboardRequest"
      },
      "name": "DescribeDashboard",
      "output": {
        "shape": "DescribeDashboardResponse"
      }
    },
    "DescribeDashboardPermissions": {
      "documentation": "<p>Describes read and write permissions for a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions"
      },
      "input": {
        "shape": "DescribeDashboardPermissionsRequest"
      },
      "name": "DescribeDashboardPermissions",
      "output": {
        "shape": "DescribeDashboardPermissionsResponse"
      }
    },
    "DescribeDataSet": {
      "documentation": "<p>Describes a dataset. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "DescribeDataSetRequest"
      },
      "name": "DescribeDataSet",
      "output": {
        "shape": "DescribeDataSetResponse"
      }
    },
    "DescribeDataSetPermissions": {
      "documentation": "<p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions"
      },
      "input": {
        "shape": "DescribeDataSetPermissionsRequest"
      },
      "name": "DescribeDataSetPermissions",
      "output": {
        "shape": "DescribeDataSetPermissionsResponse"
      }
    },
    "DescribeDataSource": {
      "documentation": "<p>Describes a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "DescribeDataSourceRequest"
      },
      "name": "DescribeDataSource",
      "output": {
        "shape": "DescribeDataSourceResponse"
      }
    },
    "DescribeDataSourcePermissions": {
      "documentation": "<p>Describes the resource permissions for a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions"
      },
      "input": {
        "shape": "DescribeDataSourcePermissionsRequest"
      },
      "name": "DescribeDataSourcePermissions",
      "output": {
        "shape": "DescribeDataSourcePermissionsResponse"
      }
    },
    "DescribeGroup": {
      "documentation": "<p>Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "DescribeGroupRequest"
      },
      "name": "DescribeGroup",
      "output": {
        "shape": "DescribeGroupResponse"
      }
    },
    "DescribeIAMPolicyAssignment": {
      "documentation": "<p>Describes an existing IAM policy assignment, as specified by the assignment name.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "DescribeIAMPolicyAssignmentRequest"
      },
      "name": "DescribeIAMPolicyAssignment",
      "output": {
        "shape": "DescribeIAMPolicyAssignmentResponse"
      }
    },
    "DescribeIngestion": {
      "documentation": "<p>Describes a SPICE ingestion.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "DescribeIngestionRequest"
      },
      "name": "DescribeIngestion",
      "output": {
        "shape": "DescribeIngestionResponse"
      }
    },
    "DescribeTemplate": {
      "documentation": "<p>Describes a template's metadata.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "DescribeTemplateRequest"
      },
      "name": "DescribeTemplate",
      "output": {
        "shape": "DescribeTemplateResponse"
      }
    },
    "DescribeTemplateAlias": {
      "documentation": "<p>Describes the template alias for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DescribeTemplateAliasRequest"
      },
      "name": "DescribeTemplateAlias",
      "output": {
        "shape": "DescribeTemplateAliasResponse"
      }
    },
    "DescribeTemplatePermissions": {
      "documentation": "<p>Describes read and write permissions on a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions"
      },
      "input": {
        "shape": "DescribeTemplatePermissionsRequest"
      },
      "name": "DescribeTemplatePermissions",
      "output": {
        "shape": "DescribeTemplatePermissionsResponse"
      }
    },
    "DescribeUser": {
      "documentation": "<p>Returns information about a user, given the user name. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "DescribeUserRequest"
      },
      "name": "DescribeUser",
      "output": {
        "shape": "DescribeUserResponse"
      }
    },
    "GetDashboardEmbedUrl": {
      "documentation": "<p>Generates a server-side embeddable URL and authorization code. For this process to work properly, first configure the dashboards and user permissions. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html\">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html\">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user\u2019s browser.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "DomainNotWhitelistedException"
        },
        {
          "shape": "QuickSightUserNotFoundException"
        },
        {
          "shape": "IdentityTypeNotSupportedException"
        },
        {
          "shape": "SessionLifetimeInMinutesInvalidException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url"
      },
      "input": {
        "shape": "GetDashboardEmbedUrlRequest"
      },
      "name": "GetDashboardEmbedUrl",
      "output": {
        "shape": "GetDashboardEmbedUrlResponse"
      }
    },
    "ListDashboardVersions": {
      "documentation": "<p>Lists all the versions of the dashboards in the QuickSight subscription.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions"
      },
      "input": {
        "shape": "ListDashboardVersionsRequest"
      },
      "name": "ListDashboardVersions",
      "output": {
        "shape": "ListDashboardVersionsResponse"
      }
    },
    "ListDashboards": {
      "documentation": "<p>Lists dashboards in an AWS account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards"
      },
      "input": {
        "shape": "ListDashboardsRequest"
      },
      "name": "ListDashboards",
      "output": {
        "shape": "ListDashboardsResponse"
      }
    },
    "ListDataSets": {
      "documentation": "<p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets"
      },
      "input": {
        "shape": "ListDataSetsRequest"
      },
      "name": "ListDataSets",
      "output": {
        "shape": "ListDataSetsResponse"
      }
    },
    "ListDataSources": {
      "documentation": "<p>Lists data sources in current AWS Region that belong to this AWS account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources"
      },
      "input": {
        "shape": "ListDataSourcesRequest"
      },
      "name": "ListDataSources",
      "output": {
        "shape": "ListDataSourcesResponse"
      }
    },
    "ListGroupMemberships": {
      "documentation": "<p>Lists member users in a group.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members"
      },
      "input": {
        "shape": "ListGroupMembershipsRequest"
      },
      "name": "ListGroupMemberships",
      "output": {
        "shape": "ListGroupMembershipsResponse"
      }
    },
    "ListGroups": {
      "documentation": "<p>Lists all user groups in Amazon QuickSight. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups"
      },
      "input": {
        "shape": "ListGroupsRequest"
      },
      "name": "ListGroups",
      "output": {
        "shape": "ListGroupsResponse"
      }
    },
    "ListIAMPolicyAssignments": {
      "documentation": "<p>Lists IAM policy assignments in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments"
      },
      "input": {
        "shape": "ListIAMPolicyAssignmentsRequest"
      },
      "name": "ListIAMPolicyAssignments",
      "output": {
        "shape": "ListIAMPolicyAssignmentsResponse"
      }
    },
    "ListIAMPolicyAssignmentsForUser": {
      "documentation": "<p>Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments"
      },
      "input": {
        "shape": "ListIAMPolicyAssignmentsForUserRequest"
      },
      "name": "ListIAMPolicyAssignmentsForUser",
      "output": {
        "shape": "ListIAMPolicyAssignmentsForUserResponse"
      }
    },
    "ListIngestions": {
      "documentation": "<p>Lists the history of SPICE ingestions for a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions"
      },
      "input": {
        "shape": "ListIngestionsRequest"
      },
      "name": "ListIngestions",
      "output": {
        "shape": "ListIngestionsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags assigned to a resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTemplateAliases": {
      "documentation": "<p>Lists all the aliases of a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases"
      },
      "input": {
        "shape": "ListTemplateAliasesRequest"
      },
      "name": "ListTemplateAliases",
      "output": {
        "shape": "ListTemplateAliasesResponse"
      }
    },
    "ListTemplateVersions": {
      "documentation": "<p>Lists all the versions of the templates in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/versions"
      },
      "input": {
        "shape": "ListTemplateVersionsRequest"
      },
      "name": "ListTemplateVersions",
      "output": {
        "shape": "ListTemplateVersionsResponse"
      }
    },
    "ListTemplates": {
      "documentation": "<p>Lists all the templates in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates"
      },
      "input": {
        "shape": "ListTemplatesRequest"
      },
      "name": "ListTemplates",
      "output": {
        "shape": "ListTemplatesResponse"
      }
    },
    "ListUserGroups": {
      "documentation": "<p>Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups"
      },
      "input": {
        "shape": "ListUserGroupsRequest"
      },
      "name": "ListUserGroups",
      "output": {
        "shape": "ListUserGroupsResponse"
      }
    },
    "ListUsers": {
      "documentation": "<p>Returns a list of all of the Amazon QuickSight users belonging to this account. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users"
      },
      "input": {
        "shape": "ListUsersRequest"
      },
      "name": "ListUsers",
      "output": {
        "shape": "ListUsersResponse"
      }
    },
    "RegisterUser": {
      "documentation": "<p>Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users"
      },
      "input": {
        "shape": "RegisterUserRequest"
      },
      "name": "RegisterUser",
      "output": {
        "shape": "RegisterUserResponse"
      }
    },
    "SearchDashboards": {
      "documentation": "<p>Searchs for dashboards that belong to a user. </p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/search/dashboards"
      },
      "input": {
        "shape": "SearchDashboardsRequest"
      },
      "name": "SearchDashboards",
      "output": {
        "shape": "SearchDashboardsResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can't use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren't taggable resources.</p> </li> <li> <p>QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.</p> </li> </ul>",
      "errors": [
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes a tag or tags from a resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDashboard": {
      "documentation": "<p>Updates a dashboard in an AWS account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "UpdateDashboardRequest"
      },
      "name": "UpdateDashboard",
      "output": {
        "shape": "UpdateDashboardResponse"
      }
    },
    "UpdateDashboardPermissions": {
      "documentation": "<p>Updates read and write permissions on a dashboard.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions"
      },
      "input": {
        "shape": "UpdateDashboardPermissionsRequest"
      },
      "name": "UpdateDashboardPermissions",
      "output": {
        "shape": "UpdateDashboardPermissionsResponse"
      }
    },
    "UpdateDashboardPublishedVersion": {
      "documentation": "<p>Updates the published version of a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}"
      },
      "input": {
        "shape": "UpdateDashboardPublishedVersionRequest"
      },
      "name": "UpdateDashboardPublishedVersion",
      "output": {
        "shape": "UpdateDashboardPublishedVersionResponse"
      }
    },
    "UpdateDataSet": {
      "documentation": "<p>Updates a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "UpdateDataSetRequest"
      },
      "name": "UpdateDataSet",
      "output": {
        "shape": "UpdateDataSetResponse"
      }
    },
    "UpdateDataSetPermissions": {
      "documentation": "<p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions"
      },
      "input": {
        "shape": "UpdateDataSetPermissionsRequest"
      },
      "name": "UpdateDataSetPermissions",
      "output": {
        "shape": "UpdateDataSetPermissionsResponse"
      }
    },
    "UpdateDataSource": {
      "documentation": "<p>Updates a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "UpdateDataSourceRequest"
      },
      "name": "UpdateDataSource",
      "output": {
        "shape": "UpdateDataSourceResponse"
      }
    },
    "UpdateDataSourcePermissions": {
      "documentation": "<p>Updates the permissions to a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions"
      },
      "input": {
        "shape": "UpdateDataSourcePermissionsRequest"
      },
      "name": "UpdateDataSourcePermissions",
      "output": {
        "shape": "UpdateDataSourcePermissionsResponse"
      }
    },
    "UpdateGroup": {
      "documentation": "<p>Changes a group description. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "UpdateGroupRequest"
      },
      "name": "UpdateGroup",
      "output": {
        "shape": "UpdateGroupResponse"
      }
    },
    "UpdateIAMPolicyAssignment": {
      "documentation": "<p>Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "UpdateIAMPolicyAssignmentRequest"
      },
      "name": "UpdateIAMPolicyAssignment",
      "output": {
        "shape": "UpdateIAMPolicyAssignmentResponse"
      }
    },
    "UpdateTemplate": {
      "documentation": "<p>Updates a template from an existing Amazon QuickSight analysis or another template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "UpdateTemplateRequest"
      },
      "name": "UpdateTemplate",
      "output": {
        "shape": "UpdateTemplateResponse"
      }
    },
    "UpdateTemplateAlias": {
      "documentation": "<p>Updates the template alias of a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "UpdateTemplateAliasRequest"
      },
      "name": "UpdateTemplateAlias",
      "output": {
        "shape": "UpdateTemplateAliasResponse"
      }
    },
    "UpdateTemplatePermissions": {
      "documentation": "<p>Updates the resource permissions for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions"
      },
      "input": {
        "shape": "UpdateTemplatePermissionsRequest"
      },
      "name": "UpdateTemplatePermissions",
      "output": {
        "shape": "UpdateTemplatePermissionsResponse"
      }
    },
    "UpdateUser": {
      "documentation": "<p>Updates an Amazon QuickSight user.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "UpdateUserRequest"
      },
      "name": "UpdateUser",
      "output": {
        "shape": "UpdateUserResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You don't have access to this item. The provided credentials couldn't be validated. You might not be authorized to carry out the request. Make sure that your account is authorized to use the Amazon QuickSight service, that your policies have the correct permissions, and that you are using the correct access keys.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ActionList": {
      "max": 16,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "ActiveIAMPolicyAssignment": {
      "documentation": "<p>The active AWS Identity and Access Management (IAM) policy assignment.</p>",
      "members": {
        "AssignmentName": {
          "documentation": "<p>A name for the IAM policy assignment.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "PolicyArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ActiveIAMPolicyAssignmentList": {
      "member": {
        "shape": "ActiveIAMPolicyAssignment"
      },
      "type": "list"
    },
    "AdHocFilteringOption": {
      "documentation": "<p>Ad hoc (one-time) filtering option.</p>",
      "members": {
        "AvailabilityStatus": {
          "documentation": "<p>Availability status.</p>",
          "shape": "DashboardBehavior"
        }
      },
      "type": "structure"
    },
    "AliasName": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)",
      "type": "string"
    },
    "AmazonElasticsearchParameters": {
      "documentation": "<p>Amazon Elasticsearch Service parameters.</p>",
      "members": {
        "Domain": {
          "documentation": "<p>The Amazon Elasticsearch Service domain.</p>",
          "shape": "Domain"
        }
      },
      "required": [
        "Domain"
      ],
      "type": "structure"
    },
    "Arn": {
      "type": "string"
    },
    "AssignmentStatus": {
      "enum": [
        "ENABLED",
        "DRAFT",
        "DISABLED"
      ],
      "type": "string"
    },
    "AthenaParameters": {
      "documentation": "<p>Amazon Athena parameters.</p>",
      "members": {
        "WorkGroup": {
          "documentation": "<p>The workgroup that Amazon Athena uses.</p>",
          "shape": "WorkGroup"
        }
      },
      "type": "structure"
    },
    "AuroraParameters": {
      "documentation": "<p>Amazon Aurora parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "AuroraPostgreSqlParameters": {
      "documentation": "<p>Amazon Aurora with PostgreSQL compatibility parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "AwsAccountId": {
      "max": 12,
      "min": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AwsIotAnalyticsParameters": {
      "documentation": "<p>AWS IoT Analytics parameters.</p>",
      "members": {
        "DataSetName": {
          "documentation": "<p>Dataset name.</p>",
          "shape": "DataSetName"
        }
      },
      "required": [
        "DataSetName"
      ],
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CalculatedColumn": {
      "documentation": "<p>A calculated column for a dataset.</p>",
      "members": {
        "ColumnId": {
          "documentation": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.</p>",
          "shape": "ColumnId"
        },
        "ColumnName": {
          "documentation": "<p>Column name.</p>",
          "shape": "ColumnName"
        },
        "Expression": {
          "documentation": "<p>An expression that defines the calculated column.</p>",
          "shape": "Expression"
        }
      },
      "required": [
        "ColumnName",
        "ColumnId",
        "Expression"
      ],
      "type": "structure"
    },
    "CalculatedColumnList": {
      "max": 128,
      "member": {
        "shape": "CalculatedColumn"
      },
      "min": 1,
      "type": "list"
    },
    "CancelIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "string"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "IngestionId"
      ],
      "type": "structure"
    },
    "CancelIngestionResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data ingestion.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "shape": "IngestionId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "string"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CastColumnTypeOperation": {
      "documentation": "<p>A transform operation that casts a column to a different type.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>Column name.</p>",
          "shape": "ColumnName"
        },
        "Format": {
          "documentation": "<p>When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.</p>",
          "shape": "TypeCastFormat"
        },
        "NewColumnType": {
          "documentation": "<p>New column data type.</p>",
          "shape": "ColumnDataType"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnType"
      ],
      "type": "structure"
    },
    "Catalog": {
      "max": 128,
      "type": "string"
    },
    "ClusterId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME"
      ],
      "type": "string"
    },
    "ColumnGroup": {
      "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "GeoSpatialColumnGroup": {
          "documentation": "<p>Geospatial column group that denotes a hierarchy.</p>",
          "shape": "GeoSpatialColumnGroup"
        }
      },
      "type": "structure"
    },
    "ColumnGroupColumnSchema": {
      "documentation": "<p>A structure describing the name, data type, and geographic role of the columns.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the column group's column schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnGroupColumnSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnGroupColumnSchema"
      },
      "type": "list"
    },
    "ColumnGroupList": {
      "max": 8,
      "member": {
        "shape": "ColumnGroup"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnGroupName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColumnGroupSchema": {
      "documentation": "<p>The column group schema.</p>",
      "members": {
        "ColumnGroupColumnSchemaList": {
          "documentation": "<p>A structure containing the list of schemas for column group columns.</p>",
          "shape": "ColumnGroupColumnSchemaList"
        },
        "Name": {
          "documentation": "<p>The name of the column group schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnGroupSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnGroupSchema"
      },
      "type": "list"
    },
    "ColumnId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColumnList": {
      "max": 16,
      "member": {
        "shape": "ColumnName"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "ColumnSchema": {
      "documentation": "<p>The column schema.</p>",
      "members": {
        "DataType": {
          "documentation": "<p>The data type of the column schema.</p>",
          "shape": "String"
        },
        "GeographicRole": {
          "documentation": "<p>The geographic role of the column schema.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>The name of the column schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnSchema"
      },
      "type": "list"
    },
    "ColumnTag": {
      "documentation": "<p>A tag for a column in a <code>TagColumnOperation</code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "ColumnGeographicRole": {
          "documentation": "<p>A geospatial role for a column.</p>",
          "shape": "GeoSpatialDataRole"
        }
      },
      "type": "structure"
    },
    "ColumnTagList": {
      "max": 16,
      "member": {
        "shape": "ColumnTag"
      },
      "min": 1,
      "type": "list"
    },
    "ConcurrentUpdatingException": {
      "documentation": "<p>A resource is already in a state that indicates an action is happening that must complete before a new update can be applied.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>Updating or deleting a resource can cause an inconsistent state.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateColumnsOperation": {
      "documentation": "<p>A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>Calculated columns to create.</p>",
          "shape": "CalculatedColumnList"
        }
      },
      "required": [
        "Columns"
      ],
      "type": "structure"
    },
    "CreateDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account where you want to create the dashboard.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the IAM policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "DashboardPublishOptions": {
          "documentation": "<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .csv format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. The sheet controls pane is collapsed by default when set to true. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>",
          "shape": "DashboardPublishOptions"
        },
        "Name": {
          "documentation": "<p>The display name of the dashboard.</p>",
          "shape": "DashboardName"
        },
        "Parameters": {
          "documentation": "<p>A structure that contains the parameters of the dashboard. These are parameter overrides for a dashboard. A dashboard can have any type of parameters, and some parameters might accept multiple values. You can use the dashboard permissions structure described following to override two string parameters that accept multiple values. </p>",
          "shape": "Parameters"
        },
        "Permissions": {
          "documentation": "<p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions with principal and action information.</p>",
          "shape": "ResourcePermissionList"
        },
        "SourceEntity": {
          "documentation": "<p>The source entity from which the dashboard is created. The source entity accepts the Amazon Resource Name (ARN) of the source template or analysis and also references the replacement datasets for the placeholders set when creating the template. The replacement datasets need to follow the same schema as the datasets for which placeholders were created when creating the template. </p> <p>If you are creating a dashboard from a source entity in a different AWS account, use the ARN of the source template.</p>",
          "shape": "DashboardSourceEntity"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.</p>",
          "shape": "TagList"
        },
        "VersionDescription": {
          "documentation": "<p>A description for the first version of the dashboard being created.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "CreateDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The status of the dashboard creation request.</p>",
          "shape": "ResourceStatus"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "VersionArn": {
          "documentation": "<p>The ARN of the dashboard, including the version number of the first version that is created.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CreateDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "DataSetId": {
          "documentation": "<p>An ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>The display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the data that you want to create.</p>",
          "shape": "RowLevelPermissionDataSet"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "Name",
        "PhysicalTableMap",
        "ImportMode"
      ],
      "type": "structure"
    },
    "CreateDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "IngestionArn": {
          "documentation": "<p>The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Credentials": {
          "documentation": "<p>The credentials QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.</p>",
          "shape": "DataSourceCredentials"
        },
        "DataSourceId": {
          "documentation": "<p>An ID for the data source. This ID is unique per AWS Region for each AWS account. </p>",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that QuickSight uses to connect to your underlying source.</p>",
          "shape": "DataSourceParameters"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>",
          "shape": "TagList"
        },
        "Type": {
          "documentation": "<p>The type of the data source. Currently, the supported types for this operation are: <code>ATHENA, AURORA, AURORA_POSTGRESQL, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code> to return a list of all data sources.</p>",
          "shape": "DataSourceType"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId",
        "Name",
        "Type"
      ],
      "type": "structure"
    },
    "CreateDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The status of creating the data source.</p>",
          "shape": "ResourceStatus"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateGroupMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to add the user to.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MemberName": {
          "documentation": "<p>The name of the user that you want to add to the group membership.</p>",
          "location": "uri",
          "locationName": "MemberName",
          "shape": "GroupMemberName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "MemberName",
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateGroupMembershipResponse": {
      "members": {
        "GroupMember": {
          "documentation": "<p>The group member.</p>",
          "shape": "GroupMember"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateGroupRequest": {
      "documentation": "<p>The request object for this operation. </p>",
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Description": {
          "documentation": "<p>A description for the group that you want to create.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>A name for the group that you want to create.</p>",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateGroupResponse": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. It must be unique within an AWS account.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account where you want to assign an IAM policy to QuickSight users or groups.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>The QuickSight users, groups, or both that you want to assign the policy to.</p>",
          "shape": "IdentityMap"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "AssignmentStatus",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentId": {
          "documentation": "<p>The ID for the assignment.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. This name must be unique within the AWS account.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "Identities": {
          "documentation": "<p>The QuickSight users, groups, or both that the IAM policy is assigned to.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy that is applied to the QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "string"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        }
      },
      "required": [
        "DataSetId",
        "IngestionId",
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "CreateIngestionResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data ingestion.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "shape": "IngestionId"
        },
        "IngestionStatus": {
          "documentation": "<p>The ingestion status.</p>",
          "shape": "IngestionStatus"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "string"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name that you want to give to the template alias that you're creating. Don't start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by QuickSight. </p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template that you creating an alias for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName",
        "TemplateVersionNumber"
      ],
      "type": "structure"
    },
    "CreateTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>Information about the template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "CreateTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>A display name for the template.</p>",
          "shape": "TemplateName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template. </p>",
          "shape": "ResourcePermissionList"
        },
        "SourceEntity": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the source entity from which this template is being created. Currently, you can create a template from an analysis or another template. If the ARN is for an analysis, include its dataset references. </p>",
          "shape": "TemplateSourceEntity"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template that you want to create. This template is unique per AWS Region in each AWS account.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "CreateTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN for the template.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The template creation status.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>The ID of the template.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The ARN for the template, including the version information of the first version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CredentialPair": {
      "documentation": "<p>The combination of user name and password that are used as credentials.</p>",
      "members": {
        "Password": {
          "documentation": "<p>Password.</p>",
          "shape": "Password"
        },
        "Username": {
          "documentation": "<p>User name.</p>",
          "shape": "Username"
        }
      },
      "required": [
        "Username",
        "Password"
      ],
      "type": "structure"
    },
    "CustomSql": {
      "documentation": "<p>A physical table type built from the results of the custom SQL query.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>The column schema from the SQL query result set.</p>",
          "shape": "InputColumnList"
        },
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "Name": {
          "documentation": "<p>A display name for the SQL query result.</p>",
          "shape": "CustomSqlName"
        },
        "SqlQuery": {
          "documentation": "<p>The SQL query.</p>",
          "shape": "SqlQuery"
        }
      },
      "required": [
        "DataSourceArn",
        "Name",
        "SqlQuery"
      ],
      "type": "structure"
    },
    "CustomSqlName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "Dashboard": {
      "documentation": "<p>Dashboard.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DashboardId": {
          "documentation": "<p>Dashboard ID.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LastPublishedTime": {
          "documentation": "<p>The last time that this dataset was published.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "DashboardName"
        },
        "Version": {
          "documentation": "<p>Version.</p>",
          "shape": "DashboardVersion"
        }
      },
      "type": "structure"
    },
    "DashboardBehavior": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "DashboardError": {
      "documentation": "<p>Dashboard error.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Message.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>Type.</p>",
          "shape": "DashboardErrorType"
        }
      },
      "type": "structure"
    },
    "DashboardErrorList": {
      "member": {
        "shape": "DashboardError"
      },
      "min": 1,
      "type": "list"
    },
    "DashboardErrorType": {
      "enum": [
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "PARAMETER_VALUE_INCOMPATIBLE",
        "PARAMETER_TYPE_INVALID",
        "PARAMETER_NOT_FOUND",
        "COLUMN_TYPE_MISMATCH",
        "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
        "COLUMN_REPLACEMENT_MISSING"
      ],
      "type": "string"
    },
    "DashboardFilterAttribute": {
      "enum": [
        "QUICKSIGHT_USER"
      ],
      "type": "string"
    },
    "DashboardName": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "DashboardPublishOptions": {
      "documentation": "<p>Dashboard publish options.</p>",
      "members": {
        "AdHocFilteringOption": {
          "documentation": "<p>Ad hoc (one-time) filtering option.</p>",
          "shape": "AdHocFilteringOption"
        },
        "ExportToCSVOption": {
          "documentation": "<p>Export to .csv option.</p>",
          "shape": "ExportToCSVOption"
        },
        "SheetControlsOption": {
          "documentation": "<p>Sheet controls option.</p>",
          "shape": "SheetControlsOption"
        }
      },
      "type": "structure"
    },
    "DashboardSearchFilter": {
      "documentation": "<p>A filter that you apply when searching for dashboards. </p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the value that you want to use as a filter. For example, <code>\"Name\": \"QUICKSIGHT_USER\"</code>. </p>",
          "shape": "DashboardFilterAttribute"
        },
        "Operator": {
          "documentation": "<p>The comparison operator that you want to use as a filter. For example, <code>\"Operator\": \"StringEquals\"</code>.</p>",
          "shape": "FilterOperator"
        },
        "Value": {
          "documentation": "<p>The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter. For example, <code>\"Value\": \"arn:aws:quicksight:us-east-1:1:user/default/UserName1\"</code>. </p>",
          "shape": "String"
        }
      },
      "required": [
        "Operator"
      ],
      "type": "structure"
    },
    "DashboardSearchFilterList": {
      "max": 1,
      "member": {
        "shape": "DashboardSearchFilter"
      },
      "type": "list"
    },
    "DashboardSourceEntity": {
      "documentation": "<p>Dashboard source entity.</p>",
      "members": {
        "SourceTemplate": {
          "documentation": "<p>Source template.</p>",
          "shape": "DashboardSourceTemplate"
        }
      },
      "type": "structure"
    },
    "DashboardSourceTemplate": {
      "documentation": "<p>Dashboard source template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "DataSetReferences": {
          "documentation": "<p>Dataset references.</p>",
          "shape": "DataSetReferenceList"
        }
      },
      "required": [
        "DataSetReferences",
        "Arn"
      ],
      "type": "structure"
    },
    "DashboardSummary": {
      "documentation": "<p>Dashboard summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard was created.</p>",
          "shape": "Timestamp"
        },
        "DashboardId": {
          "documentation": "<p>Dashboard ID.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LastPublishedTime": {
          "documentation": "<p>The last time that this dashboard was published.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dashboard was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dashboard.</p>",
          "shape": "DashboardName"
        },
        "PublishedVersionNumber": {
          "documentation": "<p>Published version number.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardSummaryList": {
      "max": 100,
      "member": {
        "shape": "DashboardSummary"
      },
      "type": "list"
    },
    "DashboardUIState": {
      "enum": [
        "EXPANDED",
        "COLLAPSED"
      ],
      "type": "string"
    },
    "DashboardVersion": {
      "documentation": "<p>Dashboard version.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>Description.</p>",
          "shape": "VersionDescription"
        },
        "Errors": {
          "documentation": "<p>Errors.</p>",
          "shape": "DashboardErrorList"
        },
        "SourceEntityArn": {
          "documentation": "<p>Source entity ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>Version number.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardVersionSummary": {
      "documentation": "<p>Dashboard version summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>Description.</p>",
          "shape": "VersionDescription"
        },
        "SourceEntityArn": {
          "documentation": "<p>Source entity ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>Version number.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardVersionSummaryList": {
      "max": 100,
      "member": {
        "shape": "DashboardVersionSummary"
      },
      "type": "list"
    },
    "DataSet": {
      "documentation": "<p>Dataset.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "ConsumedSpiceCapacityInBytes": {
          "documentation": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't imported into SPICE.</p>",
          "shape": "Long"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset.</p>",
          "shape": "ResourceId"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "OutputColumns": {
          "documentation": "<p>The list of columns after all transforms. These columns are available in templates, analyses, and dashboards.</p>",
          "shape": "OutputColumnList"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the dataset.</p>",
          "shape": "RowLevelPermissionDataSet"
        }
      },
      "type": "structure"
    },
    "DataSetConfiguration": {
      "documentation": "<p>Dataset configuration.</p>",
      "members": {
        "ColumnGroupSchemaList": {
          "documentation": "<p>A structure containing the list of column group schemas.</p>",
          "shape": "ColumnGroupSchemaList"
        },
        "DataSetSchema": {
          "documentation": "<p>Dataset schema.</p>",
          "shape": "DataSetSchema"
        },
        "Placeholder": {
          "documentation": "<p>Placeholder.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DataSetConfigurationList": {
      "max": 30,
      "member": {
        "shape": "DataSetConfiguration"
      },
      "type": "list"
    },
    "DataSetImportMode": {
      "enum": [
        "SPICE",
        "DIRECT_QUERY"
      ],
      "type": "string"
    },
    "DataSetName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DataSetReference": {
      "documentation": "<p>Dataset reference.</p>",
      "members": {
        "DataSetArn": {
          "documentation": "<p>Dataset Amazon Resource Name (ARN).</p>",
          "shape": "Arn"
        },
        "DataSetPlaceholder": {
          "documentation": "<p>Dataset placeholder.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "DataSetPlaceholder",
        "DataSetArn"
      ],
      "type": "structure"
    },
    "DataSetReferenceList": {
      "member": {
        "shape": "DataSetReference"
      },
      "min": 1,
      "type": "list"
    },
    "DataSetSchema": {
      "documentation": "<p>Dataset schema.</p>",
      "members": {
        "ColumnSchemaList": {
          "documentation": "<p>A structure containing the list of column schemas.</p>",
          "shape": "ColumnSchemaList"
        }
      },
      "type": "structure"
    },
    "DataSetSummary": {
      "documentation": "<p>Dataset summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset.</p>",
          "shape": "ResourceId"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the dataset.</p>",
          "shape": "RowLevelPermissionDataSet"
        }
      },
      "type": "structure"
    },
    "DataSetSummaryList": {
      "member": {
        "shape": "DataSetSummary"
      },
      "type": "list"
    },
    "DataSource": {
      "documentation": "<p>The structure of a data source.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this data source was created.</p>",
          "shape": "Timestamp"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
          "shape": "DataSourceParameters"
        },
        "ErrorInfo": {
          "documentation": "<p>Error information from the last update or the creation of the data source.</p>",
          "shape": "DataSourceErrorInfo"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this data source was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "Type": {
          "documentation": "<p>The type of the data source. This type indicates which database engine the data source connects to.</p>",
          "shape": "DataSourceType"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>The VPC connection information. You need to use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "type": "structure"
    },
    "DataSourceCredentials": {
      "documentation": "<p>Data source credentials.</p>",
      "members": {
        "CredentialPair": {
          "documentation": "<p>Credential pair.</p>",
          "shape": "CredentialPair"
        }
      },
      "sensitive": true,
      "type": "structure"
    },
    "DataSourceErrorInfo": {
      "documentation": "<p>Error information for the data source creation or update.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Error message.</p>",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>Error type.</p>",
          "shape": "DataSourceErrorInfoType"
        }
      },
      "type": "structure"
    },
    "DataSourceErrorInfoType": {
      "enum": [
        "TIMEOUT",
        "ENGINE_VERSION_NOT_SUPPORTED",
        "UNKNOWN_HOST",
        "GENERIC_SQL_FAILURE",
        "CONFLICT",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "DataSourceList": {
      "member": {
        "shape": "DataSource"
      },
      "type": "list"
    },
    "DataSourceParameters": {
      "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "AmazonElasticsearchParameters": {
          "documentation": "<p>Amazon Elasticsearch Service parameters.</p>",
          "shape": "AmazonElasticsearchParameters"
        },
        "AthenaParameters": {
          "documentation": "<p>Amazon Athena parameters.</p>",
          "shape": "AthenaParameters"
        },
        "AuroraParameters": {
          "documentation": "<p>Amazon Aurora MySQL parameters.</p>",
          "shape": "AuroraParameters"
        },
        "AuroraPostgreSqlParameters": {
          "documentation": "<p>Aurora PostgreSQL parameters.</p>",
          "shape": "AuroraPostgreSqlParameters"
        },
        "AwsIotAnalyticsParameters": {
          "documentation": "<p>AWS IoT Analytics parameters.</p>",
          "shape": "AwsIotAnalyticsParameters"
        },
        "JiraParameters": {
          "documentation": "<p>Jira parameters.</p>",
          "shape": "JiraParameters"
        },
        "MariaDbParameters": {
          "documentation": "<p>MariaDB parameters.</p>",
          "shape": "MariaDbParameters"
        },
        "MySqlParameters": {
          "documentation": "<p>MySQL parameters.</p>",
          "shape": "MySqlParameters"
        },
        "PostgreSqlParameters": {
          "documentation": "<p>PostgreSQL parameters.</p>",
          "shape": "PostgreSqlParameters"
        },
        "PrestoParameters": {
          "documentation": "<p>Presto parameters.</p>",
          "shape": "PrestoParameters"
        },
        "RdsParameters": {
          "documentation": "<p>Amazon RDS parameters.</p>",
          "shape": "RdsParameters"
        },
        "RedshiftParameters": {
          "documentation": "<p>Amazon Redshift parameters.</p>",
          "shape": "RedshiftParameters"
        },
        "S3Parameters": {
          "documentation": "<p>S3 parameters.</p>",
          "shape": "S3Parameters"
        },
        "ServiceNowParameters": {
          "documentation": "<p>ServiceNow parameters.</p>",
          "shape": "ServiceNowParameters"
        },
        "SnowflakeParameters": {
          "documentation": "<p>Snowflake parameters.</p>",
          "shape": "SnowflakeParameters"
        },
        "SparkParameters": {
          "documentation": "<p>Spark parameters.</p>",
          "shape": "SparkParameters"
        },
        "SqlServerParameters": {
          "documentation": "<p>SQL Server parameters.</p>",
          "shape": "SqlServerParameters"
        },
        "TeradataParameters": {
          "documentation": "<p>Teradata parameters.</p>",
          "shape": "TeradataParameters"
        },
        "TwitterParameters": {
          "documentation": "<p>Twitter parameters.</p>",
          "shape": "TwitterParameters"
        }
      },
      "type": "structure"
    },
    "DataSourceType": {
      "enum": [
        "ADOBE_ANALYTICS",
        "AMAZON_ELASTICSEARCH",
        "ATHENA",
        "AURORA",
        "AURORA_POSTGRESQL",
        "AWS_IOT_ANALYTICS",
        "GITHUB",
        "JIRA",
        "MARIADB",
        "MYSQL",
        "POSTGRESQL",
        "PRESTO",
        "REDSHIFT",
        "S3",
        "SALESFORCE",
        "SERVICENOW",
        "SNOWFLAKE",
        "SPARK",
        "SQLSERVER",
        "TERADATA",
        "TWITTER"
      ],
      "type": "string"
    },
    "Database": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DateTimeParameter": {
      "documentation": "<p>Date time parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>Values.</p>",
          "shape": "TimestampList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "DateTimeParameterList": {
      "max": 100,
      "member": {
        "shape": "DateTimeParameter"
      },
      "type": "list"
    },
    "DecimalParameter": {
      "documentation": "<p>Decimal parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>Values.</p>",
          "shape": "DoubleList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "DecimalParameterList": {
      "max": 100,
      "member": {
        "shape": "DecimalParameter"
      },
      "type": "list"
    },
    "DeleteDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're deleting.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DeleteDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Secure Socket Layer (SSL) properties that apply for the resource.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID of the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DeleteDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DeleteDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source that you deleted.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteGroupMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to delete the user from.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MemberName": {
          "documentation": "<p>The name of the user that you want to delete from the group membership.</p>",
          "location": "uri",
          "locationName": "MemberName",
          "shape": "GroupMemberName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "MemberName",
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteGroupMembershipResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to delete.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteGroupResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID where you want to delete the IAM policy assignment.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name for the template alias. If you name a specific alias, you delete the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. </p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the item to delete.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template that the specified alias is for.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DeleteTemplateAliasResponse": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name for the template alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template associated with the deletion.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template that you're deleting.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template you want to delete.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. </p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DeleteTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteUserByPrincipalIdRequest": {
      "documentation": "<p/>",
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the user.</p>",
          "location": "uri",
          "locationName": "PrincipalId",
          "shape": "String"
        }
      },
      "required": [
        "PrincipalId",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteUserByPrincipalIdResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "UserName": {
          "documentation": "<p>The name of the user that you want to delete.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "Delimiter": {
      "max": 1,
      "min": 1,
      "type": "string"
    },
    "DescribeDashboardPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're describing permissions for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the IAM policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DescribeDashboardPermissionsResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>A structure that contains the permissions for the dashboard.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDashboardRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "alias-name",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. </p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DescribeDashboardResponse": {
      "members": {
        "Dashboard": {
          "documentation": "<p>Information about the dashboard.</p>",
          "shape": "Dashboard"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of this request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSetPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DescribeDataSetPermissionsResponse": {
      "members": {
        "DataSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DescribeDataSetResponse": {
      "members": {
        "DataSet": {
          "documentation": "<p>Information on the dataset.</p>",
          "shape": "DataSet"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSourcePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DescribeDataSourcePermissionsResponse": {
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DescribeDataSourceResponse": {
      "members": {
        "DataSource": {
          "documentation": "<p>The information on the data source.</p>",
          "shape": "DataSource"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to describe.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeGroupResponse": {
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the assignment that you want to describe.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeIAMPolicyAssignmentResponse": {
      "members": {
        "IAMPolicyAssignment": {
          "documentation": "<p>Information describing the IAM policy assignment.</p>",
          "shape": "IAMPolicyAssignment"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "string"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "IngestionId"
      ],
      "type": "structure"
    },
    "DescribeIngestionResponse": {
      "members": {
        "Ingestion": {
          "documentation": "<p>Information about the ingestion.</p>",
          "shape": "Ingestion"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "string"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template alias that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DescribeTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>Information about the template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "DescribeTemplatePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DescribeTemplatePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template. </p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DescribeTemplateRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "querystring",
          "locationName": "alias-name",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>(Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the template is described.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DescribeTemplateResponse": {
      "members": {
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "Template": {
          "documentation": "<p>The template structure for the object you want to describe.</p>",
          "shape": "Template"
        }
      },
      "type": "structure"
    },
    "DescribeUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "UserName": {
          "documentation": "<p>The name of the user that you want to describe.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The user name.</p>",
          "shape": "User"
        }
      },
      "type": "structure"
    },
    "Domain": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "DomainNotWhitelistedException": {
      "documentation": "<p>The domain specified isn't on the allow list. All domains for embedded dashboards must be added to the approved list by an Amazon QuickSight admin.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Double": {
      "type": "double"
    },
    "DoubleList": {
      "member": {
        "shape": "Double"
      },
      "type": "list"
    },
    "EmbeddingUrl": {
      "sensitive": true,
      "type": "string"
    },
    "ErrorInfo": {
      "documentation": "<p>Error information for the SPICE ingestion of a dataset.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Error message.</p>",
          "shape": "string"
        },
        "Type": {
          "documentation": "<p>Error type.</p>",
          "shape": "IngestionErrorType"
        }
      },
      "type": "structure"
    },
    "ExceptionResourceType": {
      "enum": [
        "USER",
        "GROUP",
        "NAMESPACE",
        "ACCOUNT_SETTINGS",
        "IAMPOLICY_ASSIGNMENT",
        "DATA_SOURCE",
        "DATA_SET",
        "VPC_CONNECTION",
        "INGESTION"
      ],
      "type": "string"
    },
    "ExportToCSVOption": {
      "documentation": "<p>Export to .csv option.</p>",
      "members": {
        "AvailabilityStatus": {
          "documentation": "<p>Availability status.</p>",
          "shape": "DashboardBehavior"
        }
      },
      "type": "structure"
    },
    "Expression": {
      "max": 4096,
      "min": 1,
      "type": "string"
    },
    "FileFormat": {
      "enum": [
        "CSV",
        "TSV",
        "CLF",
        "ELF",
        "XLSX",
        "JSON"
      ],
      "type": "string"
    },
    "FilterOperation": {
      "documentation": "<p>A transform operation that filters rows based on a condition.</p>",
      "members": {
        "ConditionExpression": {
          "documentation": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.</p>",
          "shape": "Expression"
        }
      },
      "required": [
        "ConditionExpression"
      ],
      "type": "structure"
    },
    "FilterOperator": {
      "enum": [
        "StringEquals"
      ],
      "type": "string"
    },
    "GeoSpatialColumnGroup": {
      "documentation": "<p>Geospatial column group that denotes a hierarchy.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>Columns in this hierarchy.</p>",
          "shape": "ColumnList"
        },
        "CountryCode": {
          "documentation": "<p>Country code.</p>",
          "shape": "GeoSpatialCountryCode"
        },
        "Name": {
          "documentation": "<p>A display name for the hierarchy.</p>",
          "shape": "ColumnGroupName"
        }
      },
      "required": [
        "Name",
        "CountryCode",
        "Columns"
      ],
      "type": "structure"
    },
    "GeoSpatialCountryCode": {
      "enum": [
        "US"
      ],
      "type": "string"
    },
    "GeoSpatialDataRole": {
      "enum": [
        "COUNTRY",
        "STATE",
        "COUNTY",
        "CITY",
        "POSTCODE",
        "LONGITUDE",
        "LATITUDE"
      ],
      "type": "string"
    },
    "GetDashboardEmbedUrlRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that contains the dashboard that you're embedding.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the IAM policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "IdentityType": {
          "documentation": "<p>The authentication method that the user uses to sign in.</p>",
          "location": "querystring",
          "locationName": "creds-type",
          "shape": "IdentityType"
        },
        "ResetDisabled": {
          "documentation": "<p>Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.</p>",
          "location": "querystring",
          "locationName": "reset-disabled",
          "shape": "boolean"
        },
        "SessionLifetimeInMinutes": {
          "documentation": "<p>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</p>",
          "location": "querystring",
          "locationName": "session-lifetime",
          "shape": "SessionLifetimeInMinutes"
        },
        "UndoRedoDisabled": {
          "documentation": "<p>Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.</p>",
          "location": "querystring",
          "locationName": "undo-redo-disabled",
          "shape": "boolean"
        },
        "UserArn": {
          "documentation": "<p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul>",
          "location": "querystring",
          "locationName": "user-arn",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "IdentityType"
      ],
      "type": "structure"
    },
    "GetDashboardEmbedUrlResponse": {
      "members": {
        "EmbedUrl": {
          "documentation": "<p>An URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes, and the resulting session is valid for 10 hours. The API provides the URL with an <code>auth_code</code> value that enables a single sign-on session. </p>",
          "shape": "EmbeddingUrl"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "Group": {
      "documentation": "<p>A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the group.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>The group description.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "GroupName"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the group.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GroupDescription": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "GroupList": {
      "member": {
        "shape": "Group"
      },
      "type": "list"
    },
    "GroupMember": {
      "documentation": "<p>A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the group member (user).</p>",
          "shape": "Arn"
        },
        "MemberName": {
          "documentation": "<p>The name of the group member (user).</p>",
          "shape": "GroupMemberName"
        }
      },
      "type": "structure"
    },
    "GroupMemberList": {
      "member": {
        "shape": "GroupMember"
      },
      "type": "list"
    },
    "GroupMemberName": {
      "max": 256,
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "GroupName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "Host": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "IAMPolicyAssignment": {
      "documentation": "<p>An IAM policy assignment.</p>",
      "members": {
        "AssignmentId": {
          "documentation": "<p>Assignment ID.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>Assignment name.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>Assignment status.</p>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>Identities.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the IAM policy.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "IAMPolicyAssignmentName": {
      "min": 1,
      "pattern": "(?=^.{2,256}$)(?!.*\\s)[0-9a-zA-Z-_.:=+@]*$",
      "type": "string"
    },
    "IAMPolicyAssignmentSummary": {
      "documentation": "<p>IAM policy assignment summary.</p>",
      "members": {
        "AssignmentName": {
          "documentation": "<p>Assignment name.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>Assignment status.</p>",
          "shape": "AssignmentStatus"
        }
      },
      "type": "structure"
    },
    "IAMPolicyAssignmentSummaryList": {
      "member": {
        "shape": "IAMPolicyAssignmentSummary"
      },
      "type": "list"
    },
    "IdentityMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "IdentityNameList"
      }
    },
    "IdentityName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "IdentityNameList": {
      "member": {
        "shape": "IdentityName"
      },
      "type": "list"
    },
    "IdentityType": {
      "enum": [
        "IAM",
        "QUICKSIGHT"
      ],
      "type": "string"
    },
    "IdentityTypeNotSupportedException": {
      "documentation": "<p>The identity type specified isn't supported. Supported identity types include <code>IAM</code> and <code>QUICKSIGHT</code>.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Ingestion": {
      "documentation": "<p>Information about the SPICE ingestion for a dataset.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this ingestion started.</p>",
          "shape": "timestamp"
        },
        "ErrorInfo": {
          "documentation": "<p>Error information for this ingestion.</p>",
          "shape": "ErrorInfo"
        },
        "IngestionId": {
          "documentation": "<p>Ingestion ID.</p>",
          "shape": "IngestionId"
        },
        "IngestionSizeInBytes": {
          "box": true,
          "documentation": "<p>The size of the data ingested, in bytes.</p>",
          "shape": "long"
        },
        "IngestionStatus": {
          "documentation": "<p>Ingestion status.</p>",
          "shape": "IngestionStatus"
        },
        "IngestionTimeInSeconds": {
          "box": true,
          "documentation": "<p>The time that this ingestion took, measured in seconds.</p>",
          "shape": "long"
        },
        "QueueInfo": {
          "shape": "QueueInfo"
        },
        "RequestSource": {
          "documentation": "<p>Event source for this ingestion.</p>",
          "shape": "IngestionRequestSource"
        },
        "RequestType": {
          "documentation": "<p>Type of this ingestion.</p>",
          "shape": "IngestionRequestType"
        },
        "RowInfo": {
          "shape": "RowInfo"
        }
      },
      "required": [
        "Arn",
        "IngestionStatus",
        "CreatedTime"
      ],
      "type": "structure"
    },
    "IngestionErrorType": {
      "enum": [
        "FAILURE_TO_ASSUME_ROLE",
        "INGESTION_SUPERSEDED",
        "INGESTION_CANCELED",
        "DATA_SET_DELETED",
        "DATA_SET_NOT_SPICE",
        "S3_UPLOADED_FILE_DELETED",
        "S3_MANIFEST_ERROR",
        "DATA_TOLERANCE_EXCEPTION",
        "SPICE_TABLE_NOT_FOUND",
        "DATA_SET_SIZE_LIMIT_EXCEEDED",
        "ROW_SIZE_LIMIT_EXCEEDED",
        "ACCOUNT_CAPACITY_LIMIT_EXCEEDED",
        "CUSTOMER_ERROR",
        "DATA_SOURCE_NOT_FOUND",
        "IAM_ROLE_NOT_AVAILABLE",
        "CONNECTION_FAILURE",
        "SQL_TABLE_NOT_FOUND",
        "PERMISSION_DENIED",
        "SSL_CERTIFICATE_VALIDATION_FAILURE",
        "OAUTH_TOKEN_FAILURE",
        "SOURCE_API_LIMIT_EXCEEDED_FAILURE",
        "PASSWORD_AUTHENTICATION_FAILURE",
        "SQL_SCHEMA_MISMATCH_ERROR",
        "INVALID_DATE_FORMAT",
        "INVALID_DATAPREP_SYNTAX",
        "SOURCE_RESOURCE_LIMIT_EXCEEDED",
        "SQL_INVALID_PARAMETER_VALUE",
        "QUERY_TIMEOUT",
        "SQL_NUMERIC_OVERFLOW",
        "UNRESOLVABLE_HOST",
        "UNROUTABLE_HOST",
        "SQL_EXCEPTION",
        "S3_FILE_INACCESSIBLE",
        "IOT_FILE_NOT_FOUND",
        "IOT_DATA_SET_FILE_EMPTY",
        "INVALID_DATA_SOURCE_CONFIG",
        "DATA_SOURCE_AUTH_FAILED",
        "DATA_SOURCE_CONNECTION_FAILED",
        "FAILURE_TO_PROCESS_JSON_FILE",
        "INTERNAL_SERVICE_ERROR"
      ],
      "type": "string"
    },
    "IngestionId": {
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_]+$",
      "type": "string"
    },
    "IngestionMaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "IngestionRequestSource": {
      "enum": [
        "MANUAL",
        "SCHEDULED"
      ],
      "type": "string"
    },
    "IngestionRequestType": {
      "enum": [
        "INITIAL_INGESTION",
        "EDIT",
        "INCREMENTAL_REFRESH",
        "FULL_REFRESH"
      ],
      "type": "string"
    },
    "IngestionStatus": {
      "enum": [
        "INITIALIZED",
        "QUEUED",
        "RUNNING",
        "FAILED",
        "COMPLETED",
        "CANCELLED"
      ],
      "type": "string"
    },
    "Ingestions": {
      "member": {
        "shape": "Ingestion"
      },
      "type": "list"
    },
    "InputColumn": {
      "documentation": "<p>Metadata for a column that is used as the input of a transform operation.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of this column in the underlying data source.</p>",
          "shape": "ColumnName"
        },
        "Type": {
          "documentation": "<p>The data type of the column.</p>",
          "shape": "InputColumnDataType"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "type": "structure"
    },
    "InputColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME",
        "BIT",
        "BOOLEAN",
        "JSON"
      ],
      "type": "string"
    },
    "InputColumnList": {
      "max": 2048,
      "member": {
        "shape": "InputColumn"
      },
      "min": 1,
      "type": "list"
    },
    "InstanceId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "IntegerParameter": {
      "documentation": "<p>Integer parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>Values.</p>",
          "shape": "LongList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "IntegerParameterList": {
      "max": 100,
      "member": {
        "shape": "IntegerParameter"
      },
      "type": "list"
    },
    "InternalFailureException": {
      "documentation": "<p>An internal failure occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidNextTokenException": {
      "documentation": "<p>The <code>NextToken</code> value isn't valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>One or more parameters has a value that isn't valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JiraParameters": {
      "documentation": "<p>Jira parameters.</p>",
      "members": {
        "SiteBaseUrl": {
          "documentation": "<p>The base URL of the Jira site.</p>",
          "shape": "SiteBaseUrl"
        }
      },
      "required": [
        "SiteBaseUrl"
      ],
      "type": "structure"
    },
    "JoinInstruction": {
      "documentation": "<p>Join instruction.</p>",
      "members": {
        "LeftOperand": {
          "documentation": "<p>Left operand.</p>",
          "shape": "LogicalTableId"
        },
        "OnClause": {
          "documentation": "<p>On Clause.</p>",
          "shape": "OnClause"
        },
        "RightOperand": {
          "documentation": "<p>Right operand.</p>",
          "shape": "LogicalTableId"
        },
        "Type": {
          "documentation": "<p>Type.</p>",
          "shape": "JoinType"
        }
      },
      "required": [
        "LeftOperand",
        "RightOperand",
        "Type",
        "OnClause"
      ],
      "type": "structure"
    },
    "JoinType": {
      "enum": [
        "INNER",
        "OUTER",
        "LEFT",
        "RIGHT"
      ],
      "type": "string"
    },
    "LimitExceededException": {
      "documentation": "<p>A limit is exceeded.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Limit exceeded.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "ListDashboardVersionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're listing versions for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "ListDashboardVersionsResponse": {
      "members": {
        "DashboardVersionSummaryList": {
          "documentation": "<p>A structure that contains information about each version of the dashboard.</p>",
          "shape": "DashboardVersionSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDashboardsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboards that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDashboardsResponse": {
      "members": {
        "DashboardSummaryList": {
          "documentation": "<p>A structure that contains all of the dashboards shared with the user. This structure provides basic information about the dashboards.</p>",
          "shape": "DashboardSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDataSetsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDataSetsResponse": {
      "members": {
        "DataSetSummaries": {
          "documentation": "<p>The list of dataset summaries.</p>",
          "shape": "DataSetSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDataSourcesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDataSourcesResponse": {
      "members": {
        "DataSources": {
          "documentation": "<p>A list of data sources.</p>",
          "shape": "DataSourceList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListGroupMembershipsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to see a membership list of.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListGroupMembershipsResponse": {
      "members": {
        "GroupMemberList": {
          "documentation": "<p>The list of the members of the group.</p>",
          "shape": "GroupMemberList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListGroupsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListGroupsResponse": {
      "members": {
        "GroupList": {
          "documentation": "<p>The list of the groups.</p>",
          "shape": "GroupList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsForUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the assignments.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "UserName": {
          "documentation": "<p>The name of the user.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "AwsAccountId",
        "UserName",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsForUserResponse": {
      "members": {
        "ActiveAssignments": {
          "documentation": "<p>The active assignments for this user.</p>",
          "shape": "ActiveIAMPolicyAssignmentList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsRequest": {
      "members": {
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignments.</p>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains these IAM policy assignments.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace for the assignments.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsResponse": {
      "members": {
        "IAMPolicyAssignments": {
          "documentation": "<p>Information describing the IAM policy assignments.</p>",
          "shape": "IAMPolicyAssignmentSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIngestionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "string"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "IngestionMaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "string"
        }
      },
      "required": [
        "DataSetId",
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListIngestionsResponse": {
      "members": {
        "Ingestions": {
          "documentation": "<p>A list of the ingestions.</p>",
          "shape": "Ingestions"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "string"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "string"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want a list of tags for.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTemplateAliasesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template aliases that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-result",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "ListTemplateAliasesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAliasList": {
          "documentation": "<p>A structure containing the list of the template's aliases.</p>",
          "shape": "TemplateAliasList"
        }
      },
      "type": "structure"
    },
    "ListTemplateVersionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the templates that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "ListTemplateVersionsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateVersionSummaryList": {
          "documentation": "<p>A structure containing a list of all the versions of the specified template.</p>",
          "shape": "TemplateVersionSummaryList"
        }
      },
      "type": "structure"
    },
    "ListTemplatesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the templates that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-result",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListTemplatesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateSummaryList": {
          "documentation": "<p>A structure containing information about the templates in the list.</p>",
          "shape": "TemplateSummaryList"
        }
      },
      "type": "structure"
    },
    "ListUserGroupsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to list group memberships for.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListUserGroupsResponse": {
      "members": {
        "GroupList": {
          "documentation": "<p>The list of groups the user is a member of.</p>",
          "shape": "GroupList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "UserList": {
          "documentation": "<p>The list of users.</p>",
          "shape": "UserList"
        }
      },
      "type": "structure"
    },
    "LogicalTable": {
      "documentation": "<p>A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.</p>",
      "members": {
        "Alias": {
          "documentation": "<p>A display name for the logical table.</p>",
          "shape": "LogicalTableAlias"
        },
        "DataTransforms": {
          "documentation": "<p>Transform operations that act on this logical table.</p>",
          "shape": "TransformOperationList"
        },
        "Source": {
          "documentation": "<p>Source of this logical table.</p>",
          "shape": "LogicalTableSource"
        }
      },
      "required": [
        "Alias",
        "Source"
      ],
      "type": "structure"
    },
    "LogicalTableAlias": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "LogicalTableId": {
      "max": 64,
      "min": 1,
      "pattern": "[0-9a-zA-Z-]*",
      "type": "string"
    },
    "LogicalTableMap": {
      "key": {
        "shape": "LogicalTableId"
      },
      "max": 32,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "LogicalTable"
      }
    },
    "LogicalTableSource": {
      "documentation": "<p>Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "JoinInstruction": {
          "documentation": "<p>Specifies the result of a join of two logical tables.</p>",
          "shape": "JoinInstruction"
        },
        "PhysicalTableId": {
          "documentation": "<p>Physical table ID.</p>",
          "shape": "PhysicalTableId"
        }
      },
      "type": "structure"
    },
    "Long": {
      "type": "long"
    },
    "LongList": {
      "member": {
        "shape": "Long"
      },
      "type": "list"
    },
    "ManifestFileLocation": {
      "documentation": "<p>Amazon S3 manifest file location.</p>",
      "members": {
        "Bucket": {
          "documentation": "<p>Amazon S3 bucket.</p>",
          "shape": "S3Bucket"
        },
        "Key": {
          "documentation": "<p>Amazon S3 key that identifies an object.</p>",
          "shape": "S3Key"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "type": "structure"
    },
    "MariaDbParameters": {
      "documentation": "<p>MariaDB parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "MySqlParameters": {
      "documentation": "<p>MySQL parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "Namespace": {
      "max": 64,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "NonEmptyString": {
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "OnClause": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "OptionalPort": {
      "max": 65535,
      "min": 0,
      "type": "integer"
    },
    "OutputColumn": {
      "documentation": "<p>Output column.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ColumnName"
        },
        "Type": {
          "documentation": "<p>Type.</p>",
          "shape": "ColumnDataType"
        }
      },
      "type": "structure"
    },
    "OutputColumnList": {
      "member": {
        "shape": "OutputColumn"
      },
      "type": "list"
    },
    "Parameters": {
      "documentation": "<p>Parameters.</p>",
      "members": {
        "DateTimeParameters": {
          "documentation": "<p>DateTime parameters.</p>",
          "shape": "DateTimeParameterList"
        },
        "DecimalParameters": {
          "documentation": "<p>Decimal parameters.</p>",
          "shape": "DecimalParameterList"
        },
        "IntegerParameters": {
          "documentation": "<p>Integer parameters.</p>",
          "shape": "IntegerParameterList"
        },
        "StringParameters": {
          "documentation": "<p>String parameters.</p>",
          "shape": "StringParameterList"
        }
      },
      "type": "structure"
    },
    "Password": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "PhysicalTable": {
      "documentation": "<p>A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "CustomSql": {
          "documentation": "<p>A physical table type built from the results of the custom SQL query.</p>",
          "shape": "CustomSql"
        },
        "RelationalTable": {
          "documentation": "<p>A physical table type for relational data sources.</p>",
          "shape": "RelationalTable"
        },
        "S3Source": {
          "documentation": "<p>A physical table type for as S3 data source.</p>",
          "shape": "S3Source"
        }
      },
      "type": "structure"
    },
    "PhysicalTableId": {
      "max": 64,
      "min": 1,
      "pattern": "[0-9a-zA-Z-]*",
      "type": "string"
    },
    "PhysicalTableMap": {
      "key": {
        "shape": "PhysicalTableId"
      },
      "max": 16,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "PhysicalTable"
      }
    },
    "Port": {
      "max": 65535,
      "min": 1,
      "type": "integer"
    },
    "PositiveInteger": {
      "min": 1,
      "type": "integer"
    },
    "PostgreSqlParameters": {
      "documentation": "<p>PostgreSQL parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "PreconditionNotMetException": {
      "documentation": "<p>One or more preconditions aren't met.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "PrestoParameters": {
      "documentation": "<p>Presto parameters.</p>",
      "members": {
        "Catalog": {
          "documentation": "<p>Catalog.</p>",
          "shape": "Catalog"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Catalog"
      ],
      "type": "structure"
    },
    "Principal": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ProjectOperation": {
      "documentation": "<p>A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.</p>",
      "members": {
        "ProjectedColumns": {
          "documentation": "<p>Projected columns.</p>",
          "shape": "ProjectedColumnList"
        }
      },
      "required": [
        "ProjectedColumns"
      ],
      "type": "structure"
    },
    "ProjectedColumnList": {
      "max": 2000,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "Query": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "QueueInfo": {
      "documentation": "<p>Information about a queued dataset SPICE ingestion.</p>",
      "members": {
        "QueuedIngestion": {
          "documentation": "<p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>",
          "shape": "string"
        },
        "WaitingOnIngestion": {
          "documentation": "<p>The ID of the queued ingestion.</p>",
          "shape": "string"
        }
      },
      "required": [
        "WaitingOnIngestion",
        "QueuedIngestion"
      ],
      "type": "structure"
    },
    "QuickSightUserNotFoundException": {
      "documentation": "<p>The user with the provided name isn't found. This error can happen in any operation that requires finding a user based on a provided user name, such as <code>DeleteUser</code>, <code>DescribeUser</code>, and so on.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RdsParameters": {
      "documentation": "<p>Amazon RDS parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "InstanceId": {
          "documentation": "<p>Instance ID.</p>",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InstanceId",
        "Database"
      ],
      "type": "structure"
    },
    "RedshiftParameters": {
      "documentation": "<p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>",
      "members": {
        "ClusterId": {
          "documentation": "<p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are provided.</p>",
          "shape": "ClusterId"
        },
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>",
          "shape": "OptionalPort"
        }
      },
      "required": [
        "Database"
      ],
      "type": "structure"
    },
    "RegisterUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Email": {
          "documentation": "<p>The email address of the user that you want to register.</p>",
          "shape": "String"
        },
        "IamArn": {
          "documentation": "<p>The ARN of the IAM user or role that you are registering with Amazon QuickSight. </p>",
          "shape": "String"
        },
        "IdentityType": {
          "documentation": "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>",
          "shape": "IdentityType"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "SessionName": {
          "documentation": "<p>You need to use this parameter only when you register one or more users using an assumed IAM role. You don't need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.example.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> </p>",
          "shape": "RoleSessionName"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to create for the user you are registering.</p>",
          "shape": "UserName"
        },
        "UserRole": {
          "documentation": "<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>",
          "shape": "UserRole"
        }
      },
      "required": [
        "IdentityType",
        "Email",
        "UserRole",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "RegisterUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The user name.</p>",
          "shape": "User"
        },
        "UserInvitationUrl": {
          "documentation": "<p>The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RelationalTable": {
      "documentation": "<p>A physical table type for relational data sources.</p>",
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "shape": "Arn"
        },
        "InputColumns": {
          "documentation": "<p>The column schema of the table.</p>",
          "shape": "InputColumnList"
        },
        "Name": {
          "documentation": "<p>The name of the relational table.</p>",
          "shape": "RelationalTableName"
        },
        "Schema": {
          "documentation": "<p>The schema name. This name applies to certain relational database engines.</p>",
          "shape": "RelationalTableSchema"
        }
      },
      "required": [
        "DataSourceArn",
        "Name",
        "InputColumns"
      ],
      "type": "structure"
    },
    "RelationalTableName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RelationalTableSchema": {
      "max": 64,
      "type": "string"
    },
    "RenameColumnOperation": {
      "documentation": "<p>A transform operation that renames a column.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The name of the column to be renamed.</p>",
          "shape": "ColumnName"
        },
        "NewColumnName": {
          "documentation": "<p>The new name for the column.</p>",
          "shape": "ColumnName"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnName"
      ],
      "type": "structure"
    },
    "ResourceExistsException": {
      "documentation": "<p>The resource specified already exists. </p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "ResourceId": {
      "type": "string"
    },
    "ResourceName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>One or more resources can't be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "ResourcePermission": {
      "documentation": "<p>Permission for the resource.</p>",
      "members": {
        "Actions": {
          "documentation": "<p>The action to grant or revoke permissions on, for example <code>\"quicksight:DescribeDashboard\"</code>.</p>",
          "shape": "ActionList"
        },
        "Principal": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an Amazon QuickSight user or group, or an IAM ARN. If you are using cross-account resource sharing, this is the IAM ARN of an account root. Otherwise, it is the ARN of a QuickSight user or group. .</p>",
          "shape": "Principal"
        }
      },
      "required": [
        "Principal",
        "Actions"
      ],
      "type": "structure"
    },
    "ResourcePermissionList": {
      "max": 64,
      "member": {
        "shape": "ResourcePermission"
      },
      "min": 1,
      "type": "list"
    },
    "ResourceStatus": {
      "enum": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED"
      ],
      "type": "string"
    },
    "ResourceUnavailableException": {
      "documentation": "<p>This resource is currently unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The resource type for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "RestrictiveResourceId": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\w\\-]+",
      "type": "string"
    },
    "RoleSessionName": {
      "max": 64,
      "min": 2,
      "pattern": "[\\w+=.@-]*",
      "type": "string"
    },
    "RowInfo": {
      "documentation": "<p>Information about rows for a data set SPICE ingestion.</p>",
      "members": {
        "RowsDropped": {
          "box": true,
          "documentation": "<p>The number of rows that were not ingested.</p>",
          "shape": "long"
        },
        "RowsIngested": {
          "box": true,
          "documentation": "<p>The number of rows that were ingested.</p>",
          "shape": "long"
        }
      },
      "type": "structure"
    },
    "RowLevelPermissionDataSet": {
      "documentation": "<p>The row-level security configuration for the dataset.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the permission dataset.</p>",
          "shape": "Arn"
        },
        "PermissionPolicy": {
          "documentation": "<p>Permission policy.</p>",
          "shape": "RowLevelPermissionPolicy"
        }
      },
      "required": [
        "Arn",
        "PermissionPolicy"
      ],
      "type": "structure"
    },
    "RowLevelPermissionPolicy": {
      "enum": [
        "GRANT_ACCESS",
        "DENY_ACCESS"
      ],
      "type": "string"
    },
    "S3Bucket": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "S3Key": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "S3Parameters": {
      "documentation": "<p>S3 parameters.</p>",
      "members": {
        "ManifestFileLocation": {
          "documentation": "<p>Location of the Amazon S3 manifest file. This is NULL if the manifest file was uploaded in the console.</p>",
          "shape": "ManifestFileLocation"
        }
      },
      "required": [
        "ManifestFileLocation"
      ],
      "type": "structure"
    },
    "S3Source": {
      "documentation": "<p>A physical table type for as S3 data source.</p>",
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The amazon Resource Name (ARN) for the data source.</p>",
          "shape": "Arn"
        },
        "InputColumns": {
          "documentation": "<p>A physical table type for as S3 data source.</p>",
          "shape": "InputColumnList"
        },
        "UploadSettings": {
          "documentation": "<p>Information about the format for the S3 source file or files.</p>",
          "shape": "UploadSettings"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns"
      ],
      "type": "structure"
    },
    "SearchDashboardsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the user whose dashboards you're searching for. </p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Filters": {
          "documentation": "<p>The filters to apply to the search. Currently, you can search only by user name. For example, <code>\"Filters\": [ { \"Name\": \"QUICKSIGHT_USER\", \"Operator\": \"StringEquals\", \"Value\": \"arn:aws:quicksight:us-east-1:1:user/default/UserName1\" } ]</code> </p>",
          "shape": "DashboardSearchFilterList"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Filters"
      ],
      "type": "structure"
    },
    "SearchDashboardsResponse": {
      "members": {
        "DashboardSummaryList": {
          "documentation": "<p>The list of dashboards owned by the user specified in <code>Filters</code> in your request.</p>",
          "shape": "DashboardSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ServiceNowParameters": {
      "documentation": "<p>ServiceNow parameters.</p>",
      "members": {
        "SiteBaseUrl": {
          "documentation": "<p>URL of the base site.</p>",
          "shape": "SiteBaseUrl"
        }
      },
      "required": [
        "SiteBaseUrl"
      ],
      "type": "structure"
    },
    "SessionLifetimeInMinutes": {
      "max": 600,
      "min": 15,
      "type": "long"
    },
    "SessionLifetimeInMinutesInvalidException": {
      "documentation": "<p>The number of minutes specified for the lifetime of a session isn't valid. The session lifetime must be 15-600 minutes.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SheetControlsOption": {
      "documentation": "<p>Sheet controls option.</p>",
      "members": {
        "VisibilityState": {
          "documentation": "<p>Visibility state.</p>",
          "shape": "DashboardUIState"
        }
      },
      "type": "structure"
    },
    "SiteBaseUrl": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "SnowflakeParameters": {
      "documentation": "<p>Snowflake parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Warehouse": {
          "documentation": "<p>Warehouse.</p>",
          "shape": "Warehouse"
        }
      },
      "required": [
        "Host",
        "Database",
        "Warehouse"
      ],
      "type": "structure"
    },
    "SparkParameters": {
      "documentation": "<p>Spark parameters.</p>",
      "members": {
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port"
      ],
      "type": "structure"
    },
    "SqlQuery": {
      "max": 65536,
      "min": 1,
      "type": "string"
    },
    "SqlServerParameters": {
      "documentation": "<p>SQL Server parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "SslProperties": {
      "documentation": "<p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.</p>",
      "members": {
        "DisableSsl": {
          "documentation": "<p>A Boolean option to control whether SSL should be disabled.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "StatusCode": {
      "type": "integer"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "StringParameter": {
      "documentation": "<p>String parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>Values.</p>",
          "shape": "StringList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "StringParameterList": {
      "max": 100,
      "member": {
        "shape": "StringParameter"
      },
      "type": "list"
    },
    "Tag": {
      "documentation": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
      "members": {
        "Key": {
          "documentation": "<p>Tag key.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>Tag value.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagColumnOperation": {
      "documentation": "<p>A transform operation that tags a column with additional information.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The column that this operation acts on.</p>",
          "shape": "ColumnName"
        },
        "Tags": {
          "documentation": "<p>The dataset column tag, currently only used for geospatial type tagging. .</p> <note> <p>This is not tags for the AWS tagging feature. .</p> </note>",
          "shape": "ColumnTagList"
        }
      },
      "required": [
        "ColumnName",
        "Tags"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 200,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagList": {
      "max": 200,
      "member": {
        "shape": "Tag"
      },
      "min": 1,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "Template": {
      "documentation": "<p>A template object. A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across AWS accounts by allowing users in other AWS accounts to create a template or a dashboard from an existing template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>Time when this was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>Time when this was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The display name of the template.</p>",
          "shape": "TemplateName"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template. This is unique per AWS Region for each AWS account.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Version": {
          "documentation": "<p>A structure describing the versions of the template.</p>",
          "shape": "TemplateVersion"
        }
      },
      "type": "structure"
    },
    "TemplateAlias": {
      "documentation": "<p>The template alias.</p>",
      "members": {
        "AliasName": {
          "documentation": "<p>The display name of the template alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template alias.</p>",
          "shape": "Arn"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template alias.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateAliasList": {
      "max": 100,
      "member": {
        "shape": "TemplateAlias"
      },
      "type": "list"
    },
    "TemplateError": {
      "documentation": "<p>List of errors that occurred when the template version creation failed.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Description of the error type.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>Type of error.</p>",
          "shape": "TemplateErrorType"
        }
      },
      "type": "structure"
    },
    "TemplateErrorList": {
      "member": {
        "shape": "TemplateError"
      },
      "min": 1,
      "type": "list"
    },
    "TemplateErrorType": {
      "enum": [
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE"
      ],
      "type": "string"
    },
    "TemplateName": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "TemplateSourceAnalysis": {
      "documentation": "<p>The source analysis of the template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "DataSetReferences": {
          "documentation": "<p>A structure containing information about the dataset references used as placeholders in the template.</p>",
          "shape": "DataSetReferenceList"
        }
      },
      "required": [
        "Arn",
        "DataSetReferences"
      ],
      "type": "structure"
    },
    "TemplateSourceEntity": {
      "documentation": "<p>The source entity of the template.</p>",
      "members": {
        "SourceAnalysis": {
          "documentation": "<p>The source analysis, if it is based on an analysis.</p>",
          "shape": "TemplateSourceAnalysis"
        },
        "SourceTemplate": {
          "documentation": "<p>The source template, if it is based on an template.</p>",
          "shape": "TemplateSourceTemplate"
        }
      },
      "type": "structure"
    },
    "TemplateSourceTemplate": {
      "documentation": "<p>The source template of the template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "Arn"
      ],
      "type": "structure"
    },
    "TemplateSummary": {
      "documentation": "<p>The template summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>A summary of a template.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The last time that this template was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this template was updated.</p>",
          "shape": "Timestamp"
        },
        "LatestVersionNumber": {
          "documentation": "<p>A structure containing a list of version numbers for the template summary.</p>",
          "shape": "VersionNumber"
        },
        "Name": {
          "documentation": "<p>A display name for the template.</p>",
          "shape": "TemplateName"
        },
        "TemplateId": {
          "documentation": "<p>The ID of the template. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "TemplateSummaryList": {
      "max": 100,
      "member": {
        "shape": "TemplateSummary"
      },
      "type": "list"
    },
    "TemplateVersion": {
      "documentation": "<p>A version of a template.</p>",
      "members": {
        "CreatedTime": {
          "documentation": "<p>The time that this template version was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetConfigurations": {
          "documentation": "<p>Schema of the dataset identified by the placeholder. The idea is that any dashboard created from the template should be bound to new datasets matching the same schema described through this API. .</p>",
          "shape": "DataSetConfigurationList"
        },
        "Description": {
          "documentation": "<p>The description of the template.</p>",
          "shape": "VersionDescription"
        },
        "Errors": {
          "documentation": "<p>Errors associated with the template.</p>",
          "shape": "TemplateErrorList"
        },
        "SourceEntityArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the analysis or template which was used to create this template.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the template.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateVersionSummary": {
      "documentation": "<p>The template version.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The ARN of the template version.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this template version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the template version.</p>",
          "shape": "VersionDescription"
        },
        "Status": {
          "documentation": "<p>The status of the template version.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the template version.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateVersionSummaryList": {
      "max": 100,
      "member": {
        "shape": "TemplateVersionSummary"
      },
      "type": "list"
    },
    "TeradataParameters": {
      "documentation": "<p>Teradata parameters.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "TextQualifier": {
      "enum": [
        "DOUBLE_QUOTE",
        "SINGLE_QUOTE"
      ],
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>Access is throttled.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TimestampList": {
      "member": {
        "shape": "Timestamp"
      },
      "type": "list"
    },
    "TransformOperation": {
      "documentation": "<p>A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "CastColumnTypeOperation": {
          "documentation": "<p>A transform operation that casts a column to a different type.</p>",
          "shape": "CastColumnTypeOperation"
        },
        "CreateColumnsOperation": {
          "documentation": "<p>An operation that creates calculated columns. Columns created in one such operation form a lexical closure.</p>",
          "shape": "CreateColumnsOperation"
        },
        "FilterOperation": {
          "documentation": "<p>An operation that filters rows based on some condition.</p>",
          "shape": "FilterOperation"
        },
        "ProjectOperation": {
          "documentation": "<p>An operation that projects columns. Operations that come after a projection can only refer to projected columns.</p>",
          "shape": "ProjectOperation"
        },
        "RenameColumnOperation": {
          "documentation": "<p>An operation that renames a column.</p>",
          "shape": "RenameColumnOperation"
        },
        "TagColumnOperation": {
          "documentation": "<p>An operation that tags a column with additional information.</p>",
          "shape": "TagColumnOperation"
        }
      },
      "type": "structure"
    },
    "TransformOperationList": {
      "max": 2048,
      "member": {
        "shape": "TransformOperation"
      },
      "min": 1,
      "type": "list"
    },
    "TwitterParameters": {
      "documentation": "<p>Twitter parameters.</p>",
      "members": {
        "MaxRows": {
          "documentation": "<p>Maximum number of rows to query Twitter.</p>",
          "shape": "PositiveInteger"
        },
        "Query": {
          "documentation": "<p>Twitter query string.</p>",
          "shape": "Query"
        }
      },
      "required": [
        "Query",
        "MaxRows"
      ],
      "type": "structure"
    },
    "TypeCastFormat": {
      "max": 32,
      "type": "string"
    },
    "UnsupportedUserEditionException": {
      "documentation": "<p>This error indicates that you are calling an operation on an Amazon QuickSight subscription where the edition doesn't include support for that operation. Amazon QuickSight currently has Standard Edition and Enterprise Edition. Not every operation and capability is available in every edition.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to untag.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>The keys of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "location": "querystring",
          "locationName": "keys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard whose permissions you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>The permissions that you want to grant on this resource.</p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>The permissions that you want to revoke from this resource.</p>",
          "shape": "UpdateResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "UpdateDashboardPermissionsResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>Information about the permissions on the dashboard.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardPublishedVersionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the dashboard.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "UpdateDashboardPublishedVersionResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the dashboard that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "DashboardPublishOptions": {
          "documentation": "<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .csv format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. The sheet controls pane is collapsed by default when set to true. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>",
          "shape": "DashboardPublishOptions"
        },
        "Name": {
          "documentation": "<p>The display name of the dashboard.</p>",
          "shape": "DashboardName"
        },
        "Parameters": {
          "documentation": "<p>A structure that contains the parameters of the dashboard.</p>",
          "shape": "Parameters"
        },
        "SourceEntity": {
          "documentation": "<p>The template or analysis from which the dashboard is created. The <code>SouceTemplate</code> entity accepts the Amazon Resource Name (ARN) of the template and also references to replacement datasets for the placeholders set when creating the template. The replacement datasets need to follow the same schema as the datasets for which placeholders were created when creating the template.</p>",
          "shape": "DashboardSourceEntity"
        },
        "VersionDescription": {
          "documentation": "<p>A description for the first version of the dashboard being created.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "UpdateDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "StatusCode"
        },
        "VersionArn": {
          "documentation": "<p>The ARN of the dashboard, including the version number.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateDataSetPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset whose permissions you want to update. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>The resource permissions that you want to grant to the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>The resource permissions that you want to revoke from the dataset.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "UpdateDataSetPermissionsResponse": {
      "members": {
        "DataSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset whose permissions you want to update. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to update. This ID is unique per AWS Region for each AWS account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>The display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the data you want to create.</p>",
          "shape": "RowLevelPermissionDataSet"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "Name",
        "PhysicalTableMap",
        "ImportMode"
      ],
      "type": "structure"
    },
    "UpdateDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "IngestionArn": {
          "documentation": "<p>The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSourcePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account. </p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>A list of resource permissions that you want to grant on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A list of resource permissions that you want to revoke on the data source.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "UpdateDataSourcePermissionsResponse": {
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The AWS account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Credentials": {
          "documentation": "<p>The credentials that QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.</p>",
          "shape": "DataSourceCredentials"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account. </p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that QuickSight uses to connect to your underlying source.</p>",
          "shape": "DataSourceParameters"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId",
        "Name"
      ],
      "type": "structure"
    },
    "UpdateDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per AWS Region for each AWS account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "UpdateStatus": {
          "documentation": "<p>The update status of the data source's last update.</p>",
          "shape": "ResourceStatus"
        }
      },
      "type": "structure"
    },
    "UpdateGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Description": {
          "documentation": "<p>The description for the group that you want to update.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to update.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "UpdateGroupResponse": {
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. This name must be unique within an AWS account.</p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the IAM policy assignment.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>The QuickSight users, groups, or both that you want to assign the policy to.</p>",
          "shape": "IdentityMap"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "UpdateIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentId": {
          "documentation": "<p>The ID of the assignment.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "Identities": {
          "documentation": "<p>The QuickSight users, groups, or both that the IAM policy is assigned to.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy applied to the QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateResourcePermissionList": {
      "max": 100,
      "member": {
        "shape": "ResourcePermission"
      },
      "min": 1,
      "type": "list"
    },
    "UpdateTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template alias that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName",
        "TemplateVersionNumber"
      ],
      "type": "structure"
    },
    "UpdateTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>The template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "UpdateTemplatePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GrantPermissions": {
          "documentation": "<p>A list of resource permissions to be granted on the template. </p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A list of resource permissions to be revoked from the template. </p>",
          "shape": "UpdateResourcePermissionList"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "UpdateTemplatePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "UpdateTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the AWS account that contains the template that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>The name for the template.</p>",
          "shape": "TemplateName"
        },
        "SourceEntity": {
          "documentation": "<p>The source QuickSight entity from which this template is being updated. You can currently update templates from an Analysis or another template.</p>",
          "shape": "TemplateSourceEntity"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "UpdateTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the template.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of the template.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The ARN for the template, including the version information of the first version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Email": {
          "documentation": "<p>The email address of the user that you want to update.</p>",
          "shape": "String"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "Role": {
          "documentation": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>",
          "shape": "UserRole"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to update.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace",
        "Email",
        "Role"
      ],
      "type": "structure"
    },
    "UpdateUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The AWS request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The Amazon QuickSight user.</p>",
          "shape": "User"
        }
      },
      "type": "structure"
    },
    "UploadSettings": {
      "documentation": "<p>Information about the format for a source file or files.</p>",
      "members": {
        "ContainsHeader": {
          "box": true,
          "documentation": "<p>Whether the file has a header row, or the files each have a header row.</p>",
          "shape": "Boolean"
        },
        "Delimiter": {
          "documentation": "<p>The delimiter between values in the file.</p>",
          "shape": "Delimiter"
        },
        "Format": {
          "documentation": "<p>File format.</p>",
          "shape": "FileFormat"
        },
        "StartFromRow": {
          "box": true,
          "documentation": "<p>A row number to start reading data from.</p>",
          "shape": "PositiveInteger"
        },
        "TextQualifier": {
          "documentation": "<p>Text qualifier.</p>",
          "shape": "TextQualifier"
        }
      },
      "type": "structure"
    },
    "User": {
      "documentation": "<p>A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.</p>",
      "members": {
        "Active": {
          "documentation": "<p>The active status of user. When you create an Amazon QuickSight user that\u2019s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.</p>",
          "shape": "Boolean"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the user.</p>",
          "shape": "Arn"
        },
        "Email": {
          "documentation": "<p>The user's email address.</p>",
          "shape": "String"
        },
        "IdentityType": {
          "documentation": "<p>The type of identity authentication used by the user.</p>",
          "shape": "IdentityType"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the user.</p>",
          "shape": "String"
        },
        "Role": {
          "documentation": "<p>The Amazon QuickSight role for the user. The user role can be one of the following:.</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>",
          "shape": "UserRole"
        },
        "UserName": {
          "documentation": "<p>The user's user name.</p>",
          "shape": "UserName"
        }
      },
      "type": "structure"
    },
    "UserList": {
      "member": {
        "shape": "User"
      },
      "type": "list"
    },
    "UserName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "UserRole": {
      "enum": [
        "ADMIN",
        "AUTHOR",
        "READER",
        "RESTRICTED_AUTHOR",
        "RESTRICTED_READER"
      ],
      "type": "string"
    },
    "Username": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "VersionDescription": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "VersionNumber": {
      "min": 1,
      "type": "long"
    },
    "VpcConnectionProperties": {
      "documentation": "<p>VPC connection properties.</p>",
      "members": {
        "VpcConnectionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the VPC connection.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "VpcConnectionArn"
      ],
      "type": "structure"
    },
    "Warehouse": {
      "max": 128,
      "type": "string"
    },
    "WorkGroup": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "boolean": {
      "type": "boolean"
    },
    "long": {
      "type": "long"
    },
    "string": {
      "type": "string"
    },
    "timestamp": {
      "type": "timestamp"
    }
  },
  "version": "2.0"
}
