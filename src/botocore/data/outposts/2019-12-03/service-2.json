{
  "documentation": "<p>AWS Outposts is a fully-managed service that extends AWS infrastructure, APIs, and tools to customer premises. By providing local access to AWS-managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.</p>",
  "metadata": {
    "apiVersion": "2019-12-03",
    "endpointPrefix": "outposts",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Outposts",
    "serviceFullName": "AWS Outposts",
    "serviceId": "Outposts",
    "signatureVersion": "v4",
    "signingName": "outposts",
    "uid": "outposts-2019-12-03"
  },
  "operations": {
    "CreateOutpost": {
      "documentation": "<p>Creates an Outpost.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/outposts"
      },
      "input": {
        "shape": "CreateOutpostInput"
      },
      "name": "CreateOutpost",
      "output": {
        "shape": "CreateOutpostOutput"
      }
    },
    "DeleteOutpost": {
      "documentation": "<p>Deletes the Outpost.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/outposts/{OutpostId}"
      },
      "input": {
        "shape": "DeleteOutpostInput"
      },
      "name": "DeleteOutpost",
      "output": {
        "shape": "DeleteOutpostOutput"
      }
    },
    "DeleteSite": {
      "documentation": "<p>Deletes the site.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sites/{SiteId}"
      },
      "input": {
        "shape": "DeleteSiteInput"
      },
      "name": "DeleteSite",
      "output": {
        "shape": "DeleteSiteOutput"
      }
    },
    "GetOutpost": {
      "documentation": "<p>Gets information about the specified Outpost.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts/{OutpostId}"
      },
      "input": {
        "shape": "GetOutpostInput"
      },
      "name": "GetOutpost",
      "output": {
        "shape": "GetOutpostOutput"
      }
    },
    "GetOutpostInstanceTypes": {
      "documentation": "<p>Lists the instance types for the specified Outpost.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts/{OutpostId}/instanceTypes"
      },
      "input": {
        "shape": "GetOutpostInstanceTypesInput"
      },
      "name": "GetOutpostInstanceTypes",
      "output": {
        "shape": "GetOutpostInstanceTypesOutput"
      }
    },
    "ListOutposts": {
      "documentation": "<p>List the Outposts for your AWS account.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts"
      },
      "input": {
        "shape": "ListOutpostsInput"
      },
      "name": "ListOutposts",
      "output": {
        "shape": "ListOutpostsOutput"
      }
    },
    "ListSites": {
      "documentation": "<p>Lists the sites for the specified AWS account.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sites"
      },
      "input": {
        "shape": "ListSitesInput"
      },
      "name": "ListSites",
      "output": {
        "shape": "ListSitesOutput"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have permission to perform this operation.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "AccountId": {
      "documentation": "<p>The ID of the AWS account.</p>",
      "max": 12,
      "min": 12,
      "type": "string"
    },
    "AvailabilityZone": {
      "documentation": "<p>The Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "[a-z\\d-]+",
      "type": "string"
    },
    "AvailabilityZoneId": {
      "documentation": "<p>The ID of the Availability Zone.</p> <p>You must specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
      "max": 255,
      "min": 1,
      "pattern": "[a-z]+[0-9]+-az[0-9]+",
      "type": "string"
    },
    "CreateOutpostInput": {
      "members": {
        "AvailabilityZone": {
          "shape": "AvailabilityZone"
        },
        "AvailabilityZoneId": {
          "shape": "AvailabilityZoneId"
        },
        "Description": {
          "shape": "OutpostDescription"
        },
        "Name": {
          "shape": "OutpostName"
        },
        "SiteId": {
          "shape": "SiteId"
        }
      },
      "required": [
        "SiteId"
      ],
      "type": "structure"
    },
    "CreateOutpostOutput": {
      "members": {
        "Outpost": {
          "shape": "Outpost"
        }
      },
      "type": "structure"
    },
    "DeleteOutpostInput": {
      "members": {
        "OutpostId": {
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": [
        "OutpostId"
      ],
      "type": "structure"
    },
    "DeleteOutpostOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteSiteInput": {
      "members": {
        "SiteId": {
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": [
        "SiteId"
      ],
      "type": "structure"
    },
    "DeleteSiteOutput": {
      "members": {},
      "type": "structure"
    },
    "ErrorMessage": {
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "GetOutpostInput": {
      "members": {
        "OutpostId": {
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": [
        "OutpostId"
      ],
      "type": "structure"
    },
    "GetOutpostInstanceTypesInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "OutpostId": {
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": [
        "OutpostId"
      ],
      "type": "structure"
    },
    "GetOutpostInstanceTypesOutput": {
      "members": {
        "InstanceTypes": {
          "shape": "InstanceTypeListDefinition"
        },
        "NextToken": {
          "shape": "Token"
        },
        "OutpostArn": {
          "shape": "OutpostArn"
        },
        "OutpostId": {
          "shape": "OutpostId"
        }
      },
      "type": "structure"
    },
    "GetOutpostOutput": {
      "members": {
        "Outpost": {
          "shape": "Outpost"
        }
      },
      "type": "structure"
    },
    "InstanceType": {
      "documentation": "<p>The instance type.</p>",
      "type": "string"
    },
    "InstanceTypeItem": {
      "documentation": "<p>Information about an instance type.</p>",
      "members": {
        "InstanceType": {
          "shape": "InstanceType"
        }
      },
      "type": "structure"
    },
    "InstanceTypeListDefinition": {
      "documentation": "<p>Information about the instance types.</p>",
      "member": {
        "shape": "InstanceTypeItem"
      },
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>An internal error has occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "LifeCycleStatus": {
      "documentation": "<p>The life cycle status.</p>",
      "type": "string"
    },
    "ListOutpostsInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListOutpostsOutput": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "Outposts": {
          "shape": "outpostListDefinition"
        }
      },
      "type": "structure"
    },
    "ListSitesInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListSitesOutput": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "Sites": {
          "shape": "siteListDefinition"
        }
      },
      "type": "structure"
    },
    "MaxResults1000": {
      "box": true,
      "documentation": "<p>The maximum page size.</p>",
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "NotFoundException": {
      "documentation": "<p>The specified request is not valid.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Outpost": {
      "documentation": "<p>Information about an Outpost.</p>",
      "members": {
        "AvailabilityZone": {
          "shape": "AvailabilityZone"
        },
        "AvailabilityZoneId": {
          "shape": "AvailabilityZoneId"
        },
        "Description": {
          "shape": "OutpostDescription"
        },
        "LifeCycleStatus": {
          "shape": "LifeCycleStatus"
        },
        "Name": {
          "shape": "OutpostName"
        },
        "OutpostArn": {
          "shape": "OutpostArn"
        },
        "OutpostId": {
          "shape": "OutpostId"
        },
        "OwnerId": {
          "shape": "OwnerId"
        },
        "SiteId": {
          "shape": "SiteId"
        }
      },
      "type": "structure"
    },
    "OutpostArn": {
      "documentation": "<p>The Amazon Resource Name (ARN) of the Outpost.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostDescription": {
      "documentation": "<p>The Outpost description.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "OutpostId": {
      "documentation": "<p>The ID of the Outpost.</p>",
      "max": 180,
      "min": 1,
      "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostName": {
      "documentation": "<p>The name of the Outpost.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "OwnerId": {
      "documentation": "<p>The AWS account ID of the Outpost owner.</p>",
      "max": 12,
      "min": 12,
      "pattern": "\\d{12}",
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>You have exceeded a service quota.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Site": {
      "documentation": "<p>Information about a site.</p>",
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "Description": {
          "shape": "SiteDescription"
        },
        "Name": {
          "shape": "SiteName"
        },
        "SiteId": {
          "shape": "SiteId"
        }
      },
      "type": "structure"
    },
    "SiteDescription": {
      "documentation": "<p>The description of the site.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "SiteId": {
      "documentation": "<p>The ID of the site.</p>",
      "max": 255,
      "min": 1,
      "pattern": "os-[a-f0-9]{17}",
      "type": "string"
    },
    "SiteName": {
      "documentation": "<p>The name of the site.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "Token": {
      "documentation": "<p>The pagination token.</p>",
      "max": 1005,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>A parameter is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "outpostListDefinition": {
      "documentation": "<p>Information about the Outposts.</p>",
      "member": {
        "shape": "Outpost"
      },
      "type": "list"
    },
    "siteListDefinition": {
      "documentation": "<p>Information about the sites.</p>",
      "member": {
        "shape": "Site"
      },
      "type": "list"
    }
  },
  "version": "2.0"
}
