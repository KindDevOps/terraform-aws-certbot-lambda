{
  "documentation": "<p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2019-11-15",
    "endpointPrefix": "frauddetector",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "Amazon Fraud Detector",
    "serviceId": "FraudDetector",
    "signatureVersion": "v4",
    "targetPrefix": "AWSHawksNestServiceFacade",
    "uid": "frauddetector-2019-11-15"
  },
  "operations": {
    "BatchCreateVariable": {
      "documentation": "<p>Creates a batch of variables.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "BatchCreateVariableRequest"
      },
      "name": "BatchCreateVariable",
      "output": {
        "shape": "BatchCreateVariableResult"
      }
    },
    "BatchGetVariable": {
      "documentation": "<p>Gets a batch of variables.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "BatchGetVariableRequest"
      },
      "name": "BatchGetVariable",
      "output": {
        "shape": "BatchGetVariableResult"
      }
    },
    "CreateDetectorVersion": {
      "documentation": "<p>Creates a detector version. The detector version starts in a <code>DRAFT</code> status.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateDetectorVersionRequest"
      },
      "name": "CreateDetectorVersion",
      "output": {
        "shape": "CreateDetectorVersionResult"
      }
    },
    "CreateModelVersion": {
      "documentation": "<p>Creates a version of the model using the specified model type. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateModelVersionRequest"
      },
      "name": "CreateModelVersion",
      "output": {
        "shape": "CreateModelVersionResult"
      }
    },
    "CreateRule": {
      "documentation": "<p>Creates a rule for use with the specified detector. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateRuleRequest"
      },
      "name": "CreateRule",
      "output": {
        "shape": "CreateRuleResult"
      }
    },
    "CreateVariable": {
      "documentation": "<p>Creates a variable.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateVariableRequest"
      },
      "name": "CreateVariable",
      "output": {
        "shape": "CreateVariableResult"
      }
    },
    "DeleteDetectorVersion": {
      "documentation": "<p>Deletes the detector version.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteDetectorVersionRequest"
      },
      "name": "DeleteDetectorVersion",
      "output": {
        "shape": "DeleteDetectorVersionResult"
      }
    },
    "DeleteEvent": {
      "documentation": "<p>Deletes the specified event.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteEventRequest"
      },
      "name": "DeleteEvent",
      "output": {
        "shape": "DeleteEventResult"
      }
    },
    "DescribeDetector": {
      "documentation": "<p>Gets all versions for a specified detector.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeDetectorRequest"
      },
      "name": "DescribeDetector",
      "output": {
        "shape": "DescribeDetectorResult"
      }
    },
    "DescribeModelVersions": {
      "documentation": "<p>Gets all of the model versions for the specified model type or for the specified model type and model ID. You can also get details for a single, specified model version. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeModelVersionsRequest"
      },
      "name": "DescribeModelVersions",
      "output": {
        "shape": "DescribeModelVersionsResult"
      }
    },
    "GetDetectorVersion": {
      "documentation": "<p>Gets a particular detector version. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDetectorVersionRequest"
      },
      "name": "GetDetectorVersion",
      "output": {
        "shape": "GetDetectorVersionResult"
      }
    },
    "GetDetectors": {
      "documentation": "<p>Gets all of detectors. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 5 and 10. To get the next page results, provide the pagination token from the <code>GetEventTypesResponse</code> as part of your request. A null pagination token fetches the records from the beginning. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDetectorsRequest"
      },
      "name": "GetDetectors",
      "output": {
        "shape": "GetDetectorsResult"
      }
    },
    "GetExternalModels": {
      "documentation": "<p>Gets the details for one or more Amazon SageMaker models that have been imported into the service. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 5 and 10. To get the next page results, provide the pagination token from the <code>GetExternalModelsResult</code> as part of your request. A null pagination token fetches the records from the beginning. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetExternalModelsRequest"
      },
      "name": "GetExternalModels",
      "output": {
        "shape": "GetExternalModelsResult"
      }
    },
    "GetModelVersion": {
      "documentation": "<p>Gets a model version. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetModelVersionRequest"
      },
      "name": "GetModelVersion",
      "output": {
        "shape": "GetModelVersionResult"
      }
    },
    "GetModels": {
      "documentation": "<p>Gets all of the models for the AWS account, or the specified model type, or gets a single model for the specified model type, model ID combination. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetModelsRequest"
      },
      "name": "GetModels",
      "output": {
        "shape": "GetModelsResult"
      }
    },
    "GetOutcomes": {
      "documentation": "<p>Gets one or more outcomes. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 50 and 100. To get the next page results, provide the pagination token from the <code>GetOutcomesResult</code> as part of your request. A null pagination token fetches the records from the beginning. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetOutcomesRequest"
      },
      "name": "GetOutcomes",
      "output": {
        "shape": "GetOutcomesResult"
      }
    },
    "GetPrediction": {
      "documentation": "<p>Evaluates an event against a detector version. If a version ID is not provided, the detector\u2019s (<code>ACTIVE</code>) version is used. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetPredictionRequest"
      },
      "name": "GetPrediction",
      "output": {
        "shape": "GetPredictionResult"
      }
    },
    "GetRules": {
      "documentation": "<p>Gets all rules available for the specified detector.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetRulesRequest"
      },
      "name": "GetRules",
      "output": {
        "shape": "GetRulesResult"
      }
    },
    "GetVariables": {
      "documentation": "<p>Gets all of the variables or the specific variable. This is a paginated API. Providing null <code>maxSizePerPage</code> results in retrieving maximum of 100 records per page. If you provide <code>maxSizePerPage</code> the value must be between 50 and 100. To get the next page result, a provide a pagination token from <code>GetVariablesResult</code> as part of your request. Null pagination token fetches the records from the beginning. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetVariablesRequest"
      },
      "name": "GetVariables",
      "output": {
        "shape": "GetVariablesResult"
      }
    },
    "PutDetector": {
      "documentation": "<p>Creates or updates a detector. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutDetectorRequest"
      },
      "name": "PutDetector",
      "output": {
        "shape": "PutDetectorResult"
      }
    },
    "PutExternalModel": {
      "documentation": "<p>Creates or updates an Amazon SageMaker model endpoint. You can also use this action to update the configuration of the model endpoint, including the IAM role and/or the mapped variables. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutExternalModelRequest"
      },
      "name": "PutExternalModel",
      "output": {
        "shape": "PutExternalModelResult"
      }
    },
    "PutModel": {
      "documentation": "<p>Creates or updates a model. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutModelRequest"
      },
      "name": "PutModel",
      "output": {
        "shape": "PutModelResult"
      }
    },
    "PutOutcome": {
      "documentation": "<p>Creates or updates an outcome. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutOutcomeRequest"
      },
      "name": "PutOutcome",
      "output": {
        "shape": "PutOutcomeResult"
      }
    },
    "UpdateDetectorVersion": {
      "documentation": "<p> Updates a detector version. The detector version attributes that you can update include models, external model endpoints, rules, and description. You can only update a <code>DRAFT</code> detector version.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateDetectorVersionRequest"
      },
      "name": "UpdateDetectorVersion",
      "output": {
        "shape": "UpdateDetectorVersionResult"
      }
    },
    "UpdateDetectorVersionMetadata": {
      "documentation": "<p>Updates the detector version's description. You can update the metadata for any detector version (<code>DRAFT, ACTIVE,</code> or <code>INACTIVE</code>). </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateDetectorVersionMetadataRequest"
      },
      "name": "UpdateDetectorVersionMetadata",
      "output": {
        "shape": "UpdateDetectorVersionMetadataResult"
      }
    },
    "UpdateDetectorVersionStatus": {
      "documentation": "<p>Updates the detector version\u2019s status. You can perform the following promotions or demotions using <code>UpdateDetectorVersionStatus</code>: <code>DRAFT</code> to <code>ACTIVE</code>, <code>ACTIVE</code> to <code>INACTIVE</code>, and <code>INACTIVE</code> to <code>ACTIVE</code>.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateDetectorVersionStatusRequest"
      },
      "name": "UpdateDetectorVersionStatus",
      "output": {
        "shape": "UpdateDetectorVersionStatusResult"
      }
    },
    "UpdateModelVersion": {
      "documentation": "<p>Updates a model version. You can update the description and status attributes using this action. You can perform the following status updates: </p> <ol> <li> <p>Change the <code>TRAINING_COMPLETE</code> status to <code>ACTIVE</code> </p> </li> <li> <p>Change <code>ACTIVE</code> back to <code>TRAINING_COMPLETE</code> </p> </li> </ol>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateModelVersionRequest"
      },
      "name": "UpdateModelVersion",
      "output": {
        "shape": "UpdateModelVersionResult"
      }
    },
    "UpdateRuleMetadata": {
      "documentation": "<p>Updates a rule's metadata. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateRuleMetadataRequest"
      },
      "name": "UpdateRuleMetadata",
      "output": {
        "shape": "UpdateRuleMetadataResult"
      }
    },
    "UpdateRuleVersion": {
      "documentation": "<p>Updates a rule version resulting in a new rule version. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateRuleVersionRequest"
      },
      "name": "UpdateRuleVersion",
      "output": {
        "shape": "UpdateRuleVersionResult"
      }
    },
    "UpdateVariable": {
      "documentation": "<p>Updates a variable.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateVariableRequest"
      },
      "name": "UpdateVariable",
      "output": {
        "shape": "UpdateVariableResult"
      }
    }
  },
  "shapes": {
    "BatchCreateVariableError": {
      "documentation": "<p>Provides the error of the batch create variable API.</p>",
      "members": {
        "code": {
          "documentation": "<p>The error code. </p>",
          "shape": "integer"
        },
        "message": {
          "documentation": "<p>The error message.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The name.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "BatchCreateVariableErrorList": {
      "member": {
        "shape": "BatchCreateVariableError"
      },
      "type": "list"
    },
    "BatchCreateVariableRequest": {
      "members": {
        "variableEntries": {
          "documentation": "<p>The list of variables for the batch create variable request.</p>",
          "shape": "VariableEntryList"
        }
      },
      "required": [
        "variableEntries"
      ],
      "type": "structure"
    },
    "BatchCreateVariableResult": {
      "members": {
        "errors": {
          "documentation": "<p>Provides the errors for the <code>BatchCreateVariable</code> request.</p>",
          "shape": "BatchCreateVariableErrorList"
        }
      },
      "type": "structure"
    },
    "BatchGetVariableError": {
      "documentation": "<p>Provides the error of the batch get variable API.</p>",
      "members": {
        "code": {
          "documentation": "<p>The error code. </p>",
          "shape": "integer"
        },
        "message": {
          "documentation": "<p>The error message.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The error name. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "BatchGetVariableErrorList": {
      "member": {
        "shape": "BatchGetVariableError"
      },
      "type": "list"
    },
    "BatchGetVariableRequest": {
      "members": {
        "names": {
          "documentation": "<p>The list of variable names to get.</p>",
          "shape": "NameList"
        }
      },
      "required": [
        "names"
      ],
      "type": "structure"
    },
    "BatchGetVariableResult": {
      "members": {
        "errors": {
          "documentation": "<p>The errors from the request.</p>",
          "shape": "BatchGetVariableErrorList"
        },
        "variables": {
          "documentation": "<p>The returned variables.</p>",
          "shape": "VariableList"
        }
      },
      "type": "structure"
    },
    "CreateDetectorVersionRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the detector version.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The ID of the detector under which you want to create a new version.</p>",
          "shape": "identifier"
        },
        "externalModelEndpoints": {
          "documentation": "<p>The Amazon Sagemaker model endpoints to include in the detector version.</p>",
          "shape": "ListOfStrings"
        },
        "modelVersions": {
          "documentation": "<p>The model versions to include in the detector version.</p>",
          "shape": "ListOfModelVersions"
        },
        "rules": {
          "documentation": "<p>The rules to include in the detector version.</p>",
          "shape": "RuleList"
        }
      },
      "required": [
        "detectorId",
        "rules"
      ],
      "type": "structure"
    },
    "CreateDetectorVersionResult": {
      "members": {
        "detectorId": {
          "documentation": "<p>The ID for the created version's parent detector.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The ID for the created detector. </p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The status of the detector version.</p>",
          "shape": "DetectorVersionStatus"
        }
      },
      "type": "structure"
    },
    "CreateModelVersionRequest": {
      "members": {
        "description": {
          "documentation": "<p>The model version description.</p>",
          "shape": "description"
        },
        "modelId": {
          "documentation": "<p>The model ID. </p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        }
      },
      "required": [
        "modelId",
        "modelType"
      ],
      "type": "structure"
    },
    "CreateModelVersionResult": {
      "members": {
        "modelId": {
          "documentation": "<p>The model ID. </p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The version of the model. </p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The model version status. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "CreateRuleRequest": {
      "members": {
        "description": {
          "documentation": "<p>The rule description.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector ID for the rule's parent detector.</p>",
          "shape": "identifier"
        },
        "expression": {
          "documentation": "<p>The rule expression.</p>",
          "shape": "ruleExpression"
        },
        "language": {
          "documentation": "<p>The language of the rule.</p>",
          "shape": "Language"
        },
        "outcomes": {
          "documentation": "<p>The outcome or outcomes returned when the rule expression matches.</p>",
          "shape": "NonEmptyListOfStrings"
        },
        "ruleId": {
          "documentation": "<p>The rule ID.</p>",
          "shape": "identifier"
        }
      },
      "required": [
        "ruleId",
        "detectorId",
        "expression",
        "language",
        "outcomes"
      ],
      "type": "structure"
    },
    "CreateRuleResult": {
      "members": {
        "rule": {
          "documentation": "<p>The created rule.</p>",
          "shape": "Rule"
        }
      },
      "type": "structure"
    },
    "CreateVariableRequest": {
      "members": {
        "dataSource": {
          "documentation": "<p>The source of the data.</p>",
          "shape": "DataSource"
        },
        "dataType": {
          "documentation": "<p>The data type.</p>",
          "shape": "DataType"
        },
        "defaultValue": {
          "documentation": "<p>The default value for the variable when no value is received.</p>",
          "shape": "string"
        },
        "description": {
          "documentation": "<p>The description.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The name of the variable.</p>",
          "shape": "string"
        },
        "variableType": {
          "documentation": "<p>The variable type.</p>",
          "shape": "string"
        }
      },
      "required": [
        "name",
        "dataType",
        "dataSource",
        "defaultValue"
      ],
      "type": "structure"
    },
    "CreateVariableResult": {
      "members": {},
      "type": "structure"
    },
    "CsvIndexToVariableMap": {
      "key": {
        "shape": "string"
      },
      "type": "map",
      "value": {
        "shape": "string"
      }
    },
    "DataSource": {
      "enum": [
        "EVENT",
        "MODEL_SCORE",
        "EXTERNAL_MODEL_SCORE"
      ],
      "type": "string"
    },
    "DataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "FLOAT",
        "BOOLEAN"
      ],
      "type": "string"
    },
    "DeleteDetectorVersionRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The ID of the parent detector for the detector version to delete.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The ID of the detector version to delete.</p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "detectorId",
        "detectorVersionId"
      ],
      "type": "structure"
    },
    "DeleteDetectorVersionResult": {
      "members": {},
      "type": "structure"
    },
    "DeleteEventRequest": {
      "members": {
        "eventId": {
          "documentation": "<p>The ID of the event to delete.</p>",
          "shape": "string"
        }
      },
      "required": [
        "eventId"
      ],
      "type": "structure"
    },
    "DeleteEventResult": {
      "members": {},
      "type": "structure"
    },
    "DescribeDetectorRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return for the request.</p>",
          "shape": "DetectorVersionMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The next token from the previous response.</p>",
          "shape": "string"
        }
      },
      "required": [
        "detectorId"
      ],
      "type": "structure"
    },
    "DescribeDetectorResult": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "detectorVersionSummaries": {
          "documentation": "<p>The status and description for each detector version.</p>",
          "shape": "DetectorVersionSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token to be used for subsequent requests.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "DescribeModelVersionsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version. </p>",
          "shape": "nonEmptyString"
        },
        "nextToken": {
          "documentation": "<p>The next token from the previous results.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "DescribeModelVersionsResult": {
      "members": {
        "modelVersionDetails": {
          "documentation": "<p>The model version details.</p>",
          "shape": "ModelVersionDetailList"
        },
        "nextToken": {
          "documentation": "<p>The next token.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "Detector": {
      "documentation": "<p>The detector.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>Timestamp of when the detector was created.</p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The detector description.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "lastUpdatedTime": {
          "documentation": "<p>Timestamp of when the detector was last updated.</p>",
          "shape": "time"
        }
      },
      "type": "structure"
    },
    "DetectorList": {
      "member": {
        "shape": "Detector"
      },
      "type": "list"
    },
    "DetectorVersionMaxResults": {
      "box": true,
      "max": 2500,
      "min": 1000,
      "type": "integer"
    },
    "DetectorVersionStatus": {
      "enum": [
        "DRAFT",
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "DetectorVersionSummary": {
      "documentation": "<p>The summary of the detector version.</p>",
      "members": {
        "description": {
          "documentation": "<p>The detector version description. </p>",
          "shape": "description"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID. </p>",
          "shape": "nonEmptyString"
        },
        "lastUpdatedTime": {
          "documentation": "<p>Timestamp of when the detector version was last updated.</p>",
          "shape": "time"
        },
        "status": {
          "documentation": "<p>The detector version status. </p>",
          "shape": "DetectorVersionStatus"
        }
      },
      "type": "structure"
    },
    "DetectorVersionSummaryList": {
      "member": {
        "shape": "DetectorVersionSummary"
      },
      "type": "list"
    },
    "DetectorsMaxResults": {
      "box": true,
      "max": 10,
      "min": 5,
      "type": "integer"
    },
    "EventAttributeMap": {
      "key": {
        "shape": "attributeKey"
      },
      "type": "map",
      "value": {
        "shape": "attributeValue"
      }
    },
    "ExternalModel": {
      "documentation": "<p>The Amazon SageMaker model.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>Timestamp of when the model was last created.</p>",
          "shape": "time"
        },
        "inputConfiguration": {
          "documentation": "<p>The input configuration.</p>",
          "shape": "ModelInputConfiguration"
        },
        "lastUpdatedTime": {
          "documentation": "<p>Timestamp of when the model was last updated.</p>",
          "shape": "time"
        },
        "modelEndpoint": {
          "documentation": "<p>The Amazon SageMaker model endpoints.</p>",
          "shape": "string"
        },
        "modelEndpointStatus": {
          "documentation": "<p>The Amazon Fraud Detector status for the external model endpoint</p>",
          "shape": "ModelEndpointStatus"
        },
        "modelSource": {
          "documentation": "<p>The source of the model.</p>",
          "shape": "ModelSource"
        },
        "outputConfiguration": {
          "documentation": "<p>The output configuration.</p>",
          "shape": "ModelOutputConfiguration"
        },
        "role": {
          "documentation": "<p>The role used to invoke the model. </p>",
          "shape": "Role"
        }
      },
      "type": "structure"
    },
    "ExternalModelEndpointDataBlobMap": {
      "key": {
        "shape": "string"
      },
      "sensitive": true,
      "type": "map",
      "value": {
        "shape": "ModelEndpointDataBlob"
      }
    },
    "ExternalModelList": {
      "member": {
        "shape": "ExternalModel"
      },
      "type": "list"
    },
    "ExternalModelsMaxResults": {
      "box": true,
      "max": 10,
      "min": 5,
      "type": "integer"
    },
    "GetDetectorVersionRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID.</p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "detectorId",
        "detectorVersionId"
      ],
      "type": "structure"
    },
    "GetDetectorVersionResult": {
      "members": {
        "createdTime": {
          "documentation": "<p>The timestamp when the detector version was created. </p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The detector version description.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID.</p>",
          "shape": "nonEmptyString"
        },
        "externalModelEndpoints": {
          "documentation": "<p>The Amazon SageMaker model endpoints included in the detector version.</p>",
          "shape": "ListOfStrings"
        },
        "lastUpdatedTime": {
          "documentation": "<p>The timestamp when the detector version was last updated. </p>",
          "shape": "time"
        },
        "modelVersions": {
          "documentation": "<p>The model versions included in the detector version. </p>",
          "shape": "ListOfModelVersions"
        },
        "rules": {
          "documentation": "<p>The rules included in the detector version.</p>",
          "shape": "RuleList"
        },
        "status": {
          "documentation": "<p>The status of the detector version.</p>",
          "shape": "DetectorVersionStatus"
        }
      },
      "type": "structure"
    },
    "GetDetectorsRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of objects to return for the request.</p>",
          "shape": "DetectorsMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The next token for the subsequent request.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetDetectorsResult": {
      "members": {
        "detectors": {
          "documentation": "<p>The detectors.</p>",
          "shape": "DetectorList"
        },
        "nextToken": {
          "documentation": "<p>The next page token.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetExternalModelsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of objects to return for the request.</p>",
          "shape": "ExternalModelsMaxResults"
        },
        "modelEndpoint": {
          "documentation": "<p>The Amazon SageMaker model endpoint.</p>",
          "shape": "string"
        },
        "nextToken": {
          "documentation": "<p>The next page token for the request.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetExternalModelsResult": {
      "members": {
        "externalModels": {
          "documentation": "<p>Gets the Amazon SageMaker models.</p>",
          "shape": "ExternalModelList"
        },
        "nextToken": {
          "documentation": "<p>The next page token to be used in subsequent requests.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetModelVersionRequest": {
      "members": {
        "modelId": {
          "documentation": "<p>The model ID. </p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type. </p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version. </p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "modelId",
        "modelType",
        "modelVersionNumber"
      ],
      "type": "structure"
    },
    "GetModelVersionResult": {
      "members": {
        "description": {
          "documentation": "<p>The model version description.</p>",
          "shape": "description"
        },
        "modelId": {
          "documentation": "<p>The model ID. </p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type. </p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version. </p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The model version status. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetModelsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum results to return for the request.</p>",
          "shape": "MaxResults"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "nextToken": {
          "documentation": "<p>The next token for the request.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetModelsResult": {
      "members": {
        "models": {
          "documentation": "<p>The returned models. </p>",
          "shape": "ModelList"
        },
        "nextToken": {
          "documentation": "<p>The next token for subsequent requests. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetOutcomesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of objects to return for the request. </p>",
          "shape": "OutcomesMaxResults"
        },
        "name": {
          "documentation": "<p>The name of the outcome or outcomes to get.</p>",
          "shape": "identifier"
        },
        "nextToken": {
          "documentation": "<p>The next page token for the request. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetOutcomesResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>The next page token for subsequent requests.</p>",
          "shape": "string"
        },
        "outcomes": {
          "documentation": "<p>The outcomes. </p>",
          "shape": "OutcomeList"
        }
      },
      "type": "structure"
    },
    "GetPredictionRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID. </p>",
          "shape": "string"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID.</p>",
          "shape": "string"
        },
        "eventAttributes": {
          "documentation": "<p>Names of variables you defined in Amazon Fraud Detector to represent event data elements and their corresponding values for the event you are sending for evaluation.</p>",
          "shape": "EventAttributeMap"
        },
        "eventId": {
          "documentation": "<p>The unique ID used to identify the event.</p>",
          "shape": "string"
        },
        "externalModelEndpointDataBlobs": {
          "documentation": "<p>The Amazon SageMaker model endpoint input data blobs.</p>",
          "shape": "ExternalModelEndpointDataBlobMap"
        }
      },
      "required": [
        "detectorId",
        "eventId"
      ],
      "type": "structure"
    },
    "GetPredictionResult": {
      "members": {
        "modelScores": {
          "documentation": "<p>The model scores for models used in the detector version.</p>",
          "shape": "ListOfModelScores"
        },
        "outcomes": {
          "documentation": "<p>The prediction outcomes.</p>",
          "shape": "ListOfStrings"
        }
      },
      "type": "structure"
    },
    "GetRulesRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of rules to return for the request.</p>",
          "shape": "RulesMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The next page token.</p>",
          "shape": "string"
        },
        "ruleId": {
          "documentation": "<p>The rule ID.</p>",
          "shape": "identifier"
        },
        "ruleVersion": {
          "documentation": "<p>The rule version.</p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "detectorId"
      ],
      "type": "structure"
    },
    "GetRulesResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>The next page token to be used in subsequent requests.</p>",
          "shape": "string"
        },
        "ruleDetails": {
          "documentation": "<p>The details of the requested rule.</p>",
          "shape": "RuleDetailList"
        }
      },
      "type": "structure"
    },
    "GetVariablesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The max size per page determined for the get variable request. </p>",
          "shape": "VariablesMaxResults"
        },
        "name": {
          "documentation": "<p>The name of the variable. </p>",
          "shape": "string"
        },
        "nextToken": {
          "documentation": "<p>The next page token of the get variable request. </p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "GetVariablesResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>The next page token to be used in subsequent requests. </p>",
          "shape": "string"
        },
        "variables": {
          "documentation": "<p>The names of the variables returned. </p>",
          "shape": "VariableList"
        }
      },
      "type": "structure"
    },
    "InternalServerException": {
      "documentation": "<p>An exception indicating an internal server error.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "IsOpaque": {
      "type": "boolean"
    },
    "JsonKeyToVariableMap": {
      "key": {
        "shape": "string"
      },
      "type": "map",
      "value": {
        "shape": "string"
      }
    },
    "LabelMapper": {
      "key": {
        "shape": "string"
      },
      "type": "map",
      "value": {
        "shape": "ListOfStrings"
      }
    },
    "LabelSchema": {
      "documentation": "<p>The label schema.</p>",
      "members": {
        "labelKey": {
          "documentation": "<p>The label key.</p>",
          "shape": "string"
        },
        "labelMapper": {
          "documentation": "<p>The label mapper maps the Amazon Fraud Detector supported label to the appropriate source labels. For example, if <code>\"FRAUD\"</code> and <code>\"LEGIT\"</code> are Amazon Fraud Detector supported labels, this mapper could be: <code>{\"FRAUD\" =&gt; [\"0\"]</code>, \"LEGIT\" =&gt; [\"1\"]} or <code>{\"FRAUD\" =&gt; [\"false\"], \"LEGIT\" =&gt; [\"true\"]}</code> or <code>{\"FRAUD\" =&gt; [\"fraud\", \"abuse\"], \"LEGIT\" =&gt; [\"legit\", \"safe\"]}</code>. The value part of the mapper is a list, because you may have multiple variants for a single Amazon Fraud Detector label. </p>",
          "shape": "LabelMapper"
        }
      },
      "required": [
        "labelKey",
        "labelMapper"
      ],
      "type": "structure"
    },
    "Language": {
      "enum": [
        "DETECTORPL"
      ],
      "type": "string"
    },
    "ListOfModelScores": {
      "member": {
        "shape": "ModelScores"
      },
      "type": "list"
    },
    "ListOfModelVersions": {
      "member": {
        "shape": "ModelVersion"
      },
      "type": "list"
    },
    "ListOfStrings": {
      "member": {
        "shape": "string"
      },
      "type": "list"
    },
    "MaxResults": {
      "box": true,
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "MetricsMap": {
      "key": {
        "shape": "string"
      },
      "type": "map",
      "value": {
        "shape": "string"
      }
    },
    "Model": {
      "documentation": "<p>The model.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>Timestamp of when the model was created.</p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The model description.</p>",
          "shape": "description"
        },
        "labelSchema": {
          "documentation": "<p>The model label schema.</p>",
          "shape": "LabelSchema"
        },
        "lastUpdatedTime": {
          "documentation": "<p>Timestamp of last time the model was updated.</p>",
          "shape": "time"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVariables": {
          "documentation": "<p>The model input variables.</p>",
          "shape": "ModelVariablesList"
        },
        "trainingDataSource": {
          "documentation": "<p>The model training data source in Amazon S3.</p>",
          "shape": "TrainingDataSource"
        }
      },
      "type": "structure"
    },
    "ModelEndpointDataBlob": {
      "documentation": "<p>A pre-formed Amazon SageMaker model input you can include if your detector version includes an imported Amazon SageMaker model endpoint with pass-through input configuration.</p>",
      "members": {
        "byteBuffer": {
          "documentation": "<p>The byte buffer of the Amazon SageMaker model endpoint input data blob.</p>",
          "shape": "blob"
        },
        "contentType": {
          "documentation": "<p>The content type of the Amazon SageMaker model endpoint input data blob. </p>",
          "shape": "contentType"
        }
      },
      "type": "structure"
    },
    "ModelEndpointStatus": {
      "enum": [
        "ASSOCIATED",
        "DISSOCIATED"
      ],
      "type": "string"
    },
    "ModelInputConfiguration": {
      "documentation": "<p>The model input configuration.</p>",
      "members": {
        "csvInputTemplate": {
          "documentation": "<p> Template for constructing the CSV input-data sent to SageMaker. At event-evaluation, the placeholders for variable-names in the template will be replaced with the variable values before being sent to SageMaker. </p>",
          "shape": "string"
        },
        "format": {
          "documentation": "<p> The format of the model input configuration. The format differs depending on if it is passed through to SageMaker or constructed by Amazon Fraud Detector.</p>",
          "shape": "ModelInputDataFormat"
        },
        "isOpaque": {
          "documentation": "<p> For an opaque-model, the input to the model will be a ByteBuffer blob provided in the getPrediction request, and will be passed to SageMaker as-is. For non-opaque models, the input will be constructed by Amazon Fraud Detector based on the model-configuration. </p>",
          "shape": "IsOpaque"
        },
        "jsonInputTemplate": {
          "documentation": "<p> Template for constructing the JSON input-data sent to SageMaker. At event-evaluation, the placeholders for variable names in the template will be replaced with the variable values before being sent to SageMaker. </p>",
          "shape": "string"
        }
      },
      "required": [
        "isOpaque"
      ],
      "type": "structure"
    },
    "ModelInputDataFormat": {
      "enum": [
        "TEXT_CSV",
        "APPLICATION_JSON"
      ],
      "type": "string"
    },
    "ModelList": {
      "member": {
        "shape": "Model"
      },
      "type": "list"
    },
    "ModelOutputConfiguration": {
      "documentation": "<p>Provides the model output configuration.</p>",
      "members": {
        "csvIndexToVariableMap": {
          "documentation": "<p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>",
          "shape": "CsvIndexToVariableMap"
        },
        "format": {
          "documentation": "<p>The format of the model output configuration.</p>",
          "shape": "ModelOutputDataFormat"
        },
        "jsonKeyToVariableMap": {
          "documentation": "<p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>",
          "shape": "JsonKeyToVariableMap"
        }
      },
      "required": [
        "format"
      ],
      "type": "structure"
    },
    "ModelOutputDataFormat": {
      "enum": [
        "TEXT_CSV",
        "APPLICATION_JSONLINES"
      ],
      "type": "string"
    },
    "ModelPredictionMap": {
      "key": {
        "shape": "string"
      },
      "type": "map",
      "value": {
        "shape": "float"
      }
    },
    "ModelScores": {
      "documentation": "<p>The fraud prediction scores.</p>",
      "members": {
        "modelVersion": {
          "documentation": "<p>The model version.</p>",
          "shape": "ModelVersion"
        },
        "scores": {
          "documentation": "<p>The model's fraud prediction scores.</p>",
          "shape": "ModelPredictionMap"
        }
      },
      "type": "structure"
    },
    "ModelSource": {
      "enum": [
        "SAGEMAKER"
      ],
      "type": "string"
    },
    "ModelTypeEnum": {
      "enum": [
        "ONLINE_FRAUD_INSIGHTS"
      ],
      "type": "string"
    },
    "ModelVariable": {
      "documentation": "<p>The model variable.&gt;</p>",
      "members": {
        "index": {
          "documentation": "<p>The model variable's index.&gt;</p>",
          "shape": "ModelVariableIndex"
        },
        "name": {
          "documentation": "<p>The model variable's name.&gt;</p>",
          "shape": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "ModelVariableIndex": {
      "type": "integer"
    },
    "ModelVariablesList": {
      "member": {
        "shape": "ModelVariable"
      },
      "type": "list"
    },
    "ModelVersion": {
      "documentation": "<p>The model version.</p>",
      "members": {
        "modelId": {
          "documentation": "<p>The parent model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version.</p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "modelId",
        "modelType",
        "modelVersionNumber"
      ],
      "type": "structure"
    },
    "ModelVersionDetail": {
      "documentation": "<p>Provides the model version details. </p>",
      "members": {
        "createdTime": {
          "documentation": "<p>The timestamp when the model was created.</p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The model description.</p>",
          "shape": "description"
        },
        "labelSchema": {
          "documentation": "<p>The model label schema.</p>",
          "shape": "LabelSchema"
        },
        "lastUpdatedTime": {
          "documentation": "<p>The timestamp when the model was last updated.</p>",
          "shape": "time"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVariables": {
          "documentation": "<p>The model variables.</p>",
          "shape": "ModelVariablesList"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version.</p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The model status.</p>",
          "shape": "string"
        },
        "trainingDataSource": {
          "documentation": "<p>The model training data source.</p>",
          "shape": "TrainingDataSource"
        },
        "trainingMetrics": {
          "documentation": "<p>The model training metrics.</p>",
          "shape": "MetricsMap"
        },
        "validationMetrics": {
          "documentation": "<p>The model validation metrics.</p>",
          "shape": "MetricsMap"
        }
      },
      "type": "structure"
    },
    "ModelVersionDetailList": {
      "member": {
        "shape": "ModelVersionDetail"
      },
      "type": "list"
    },
    "ModelVersionStatus": {
      "enum": [
        "TRAINING_IN_PROGRESS",
        "TRAINING_COMPLETE",
        "ACTIVATE_REQUESTED",
        "ACTIVATE_IN_PROGRESS",
        "ACTIVE",
        "INACTIVATE_IN_PROGRESS",
        "INACTIVE",
        "ERROR"
      ],
      "type": "string"
    },
    "NameList": {
      "max": 100,
      "member": {
        "shape": "string"
      },
      "min": 1,
      "type": "list"
    },
    "NonEmptyListOfStrings": {
      "member": {
        "shape": "string"
      },
      "min": 1,
      "type": "list"
    },
    "Outcome": {
      "documentation": "<p>The outcome.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>The timestamp when the outcome was created.</p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The outcome description.</p>",
          "shape": "description"
        },
        "lastUpdatedTime": {
          "documentation": "<p>The timestamp when the outcome was last updated.</p>",
          "shape": "time"
        },
        "name": {
          "documentation": "<p>The outcome name.</p>",
          "shape": "identifier"
        }
      },
      "type": "structure"
    },
    "OutcomeList": {
      "member": {
        "shape": "Outcome"
      },
      "type": "list"
    },
    "OutcomesMaxResults": {
      "box": true,
      "max": 100,
      "min": 50,
      "type": "integer"
    },
    "PutDetectorRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the detector.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector ID. </p>",
          "shape": "identifier"
        }
      },
      "required": [
        "detectorId"
      ],
      "type": "structure"
    },
    "PutDetectorResult": {
      "members": {},
      "type": "structure"
    },
    "PutExternalModelRequest": {
      "members": {
        "inputConfiguration": {
          "documentation": "<p>The model endpoint input configuration.</p>",
          "shape": "ModelInputConfiguration"
        },
        "modelEndpoint": {
          "documentation": "<p>The model endpoints name.</p>",
          "shape": "string"
        },
        "modelEndpointStatus": {
          "documentation": "<p>The model endpoint\u2019s status in Amazon Fraud Detector.</p>",
          "shape": "ModelEndpointStatus"
        },
        "modelSource": {
          "documentation": "<p>The source of the model.</p>",
          "shape": "ModelSource"
        },
        "outputConfiguration": {
          "documentation": "<p>The model endpoint output configuration.</p>",
          "shape": "ModelOutputConfiguration"
        },
        "role": {
          "documentation": "<p>The IAM role used to invoke the model endpoint.</p>",
          "shape": "Role"
        }
      },
      "required": [
        "modelEndpoint",
        "modelSource",
        "role",
        "inputConfiguration",
        "outputConfiguration",
        "modelEndpointStatus"
      ],
      "type": "structure"
    },
    "PutExternalModelResult": {
      "members": {},
      "type": "structure"
    },
    "PutModelRequest": {
      "members": {
        "description": {
          "documentation": "<p>The model description. </p>",
          "shape": "description"
        },
        "labelSchema": {
          "documentation": "<p>The label schema.</p>",
          "shape": "LabelSchema"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type. </p>",
          "shape": "ModelTypeEnum"
        },
        "modelVariables": {
          "documentation": "<p>The model input variables.</p>",
          "shape": "ModelVariablesList"
        },
        "trainingDataSource": {
          "documentation": "<p>The training data source location in Amazon S3. </p>",
          "shape": "TrainingDataSource"
        }
      },
      "required": [
        "modelId",
        "modelType",
        "trainingDataSource",
        "modelVariables",
        "labelSchema"
      ],
      "type": "structure"
    },
    "PutModelResult": {
      "members": {},
      "type": "structure"
    },
    "PutOutcomeRequest": {
      "members": {
        "description": {
          "documentation": "<p>The outcome description.</p>",
          "shape": "description"
        },
        "name": {
          "documentation": "<p>The name of the outcome.</p>",
          "shape": "identifier"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "PutOutcomeResult": {
      "members": {},
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>An exception indicating the specified resource was not found.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Role": {
      "documentation": "<p>The role used to invoke external model endpoints.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The role ARN.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The role name.</p>",
          "shape": "string"
        }
      },
      "required": [
        "arn",
        "name"
      ],
      "type": "structure"
    },
    "Rule": {
      "documentation": "<p>A rule.</p>",
      "members": {
        "detectorId": {
          "documentation": "<p>The detector for which the rule is associated.</p>",
          "shape": "identifier"
        },
        "ruleId": {
          "documentation": "<p>The rule ID.</p>",
          "shape": "identifier"
        },
        "ruleVersion": {
          "documentation": "<p>The rule version.</p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "detectorId",
        "ruleId",
        "ruleVersion"
      ],
      "type": "structure"
    },
    "RuleDetail": {
      "documentation": "<p>The details of the rule.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>The timestamp of when the rule was created.</p>",
          "shape": "time"
        },
        "description": {
          "documentation": "<p>The rule description.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector for which the rule is associated.</p>",
          "shape": "identifier"
        },
        "expression": {
          "documentation": "<p>The rule expression.</p>",
          "shape": "ruleExpression"
        },
        "language": {
          "documentation": "<p>The rule language.</p>",
          "shape": "Language"
        },
        "lastUpdatedTime": {
          "documentation": "<p>Timestamp of the last time the rule was updated.</p>",
          "shape": "time"
        },
        "outcomes": {
          "documentation": "<p>The rule outcomes.</p>",
          "shape": "NonEmptyListOfStrings"
        },
        "ruleId": {
          "documentation": "<p>The rule ID.</p>",
          "shape": "identifier"
        },
        "ruleVersion": {
          "documentation": "<p>The rule version.</p>",
          "shape": "nonEmptyString"
        }
      },
      "type": "structure"
    },
    "RuleDetailList": {
      "member": {
        "shape": "RuleDetail"
      },
      "type": "list"
    },
    "RuleList": {
      "member": {
        "shape": "Rule"
      },
      "type": "list"
    },
    "RulesMaxResults": {
      "box": true,
      "max": 100,
      "min": 50,
      "type": "integer"
    },
    "ThrottlingException": {
      "documentation": "<p>An exception indicating a throttling error.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "TrainingDataSource": {
      "documentation": "<p>The training data source.</p>",
      "members": {
        "dataAccessRoleArn": {
          "documentation": "<p>The data access role ARN for the training data source.</p>",
          "shape": "iamRoleArn"
        },
        "dataLocation": {
          "documentation": "<p>The data location of the training data source.</p>",
          "shape": "s3BucketLocation"
        }
      },
      "required": [
        "dataLocation",
        "dataAccessRoleArn"
      ],
      "type": "structure"
    },
    "UpdateDetectorVersionMetadataRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description.</p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The detector ID.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID. </p>",
          "shape": "nonEmptyString"
        }
      },
      "required": [
        "detectorId",
        "detectorVersionId",
        "description"
      ],
      "type": "structure"
    },
    "UpdateDetectorVersionMetadataResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateDetectorVersionRequest": {
      "members": {
        "description": {
          "documentation": "<p>The detector version description. </p>",
          "shape": "description"
        },
        "detectorId": {
          "documentation": "<p>The parent detector ID for the detector version you want to update.</p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID. </p>",
          "shape": "nonEmptyString"
        },
        "externalModelEndpoints": {
          "documentation": "<p>The Amazon SageMaker model endpoints to include in the detector version.</p>",
          "shape": "ListOfStrings"
        },
        "modelVersions": {
          "documentation": "<p>The model versions to include in the detector version.</p>",
          "shape": "ListOfModelVersions"
        },
        "rules": {
          "documentation": "<p>The rules to include in the detector version.</p>",
          "shape": "RuleList"
        }
      },
      "required": [
        "detectorId",
        "detectorVersionId",
        "externalModelEndpoints",
        "rules"
      ],
      "type": "structure"
    },
    "UpdateDetectorVersionResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateDetectorVersionStatusRequest": {
      "members": {
        "detectorId": {
          "documentation": "<p>The detector ID. </p>",
          "shape": "identifier"
        },
        "detectorVersionId": {
          "documentation": "<p>The detector version ID. </p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The new status.</p>",
          "shape": "DetectorVersionStatus"
        }
      },
      "required": [
        "detectorId",
        "detectorVersionId",
        "status"
      ],
      "type": "structure"
    },
    "UpdateDetectorVersionStatusResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateModelVersionRequest": {
      "members": {
        "description": {
          "documentation": "<p>The model description.</p>",
          "shape": "description"
        },
        "modelId": {
          "documentation": "<p>The model ID.</p>",
          "shape": "identifier"
        },
        "modelType": {
          "documentation": "<p>The model type.</p>",
          "shape": "ModelTypeEnum"
        },
        "modelVersionNumber": {
          "documentation": "<p>The model version.</p>",
          "shape": "nonEmptyString"
        },
        "status": {
          "documentation": "<p>The new model status.</p>",
          "shape": "ModelVersionStatus"
        }
      },
      "required": [
        "modelId",
        "modelType",
        "modelVersionNumber",
        "description",
        "status"
      ],
      "type": "structure"
    },
    "UpdateModelVersionResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateRuleMetadataRequest": {
      "members": {
        "description": {
          "documentation": "<p>The rule description.</p>",
          "shape": "description"
        },
        "rule": {
          "documentation": "<p>The rule to update.</p>",
          "shape": "Rule"
        }
      },
      "required": [
        "rule",
        "description"
      ],
      "type": "structure"
    },
    "UpdateRuleMetadataResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateRuleVersionRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description.</p>",
          "shape": "description"
        },
        "expression": {
          "documentation": "<p>The rule expression.</p>",
          "shape": "ruleExpression"
        },
        "language": {
          "documentation": "<p>The language.</p>",
          "shape": "Language"
        },
        "outcomes": {
          "documentation": "<p>The outcomes.</p>",
          "shape": "NonEmptyListOfStrings"
        },
        "rule": {
          "documentation": "<p>The rule to update.</p>",
          "shape": "Rule"
        }
      },
      "required": [
        "rule",
        "expression",
        "language",
        "outcomes"
      ],
      "type": "structure"
    },
    "UpdateRuleVersionResult": {
      "members": {
        "rule": {
          "documentation": "<p>The new rule version that was created.</p>",
          "shape": "Rule"
        }
      },
      "type": "structure"
    },
    "UpdateVariableRequest": {
      "members": {
        "defaultValue": {
          "documentation": "<p>The new default value of the variable.</p>",
          "shape": "string"
        },
        "description": {
          "documentation": "<p>The new description.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The name of the variable.</p>",
          "shape": "string"
        },
        "variableType": {
          "documentation": "<p>The variable type.</p>",
          "shape": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "UpdateVariableResult": {
      "members": {},
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>An exception indicating a specified value is not allowed.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Variable": {
      "documentation": "<p>The variable.</p>",
      "members": {
        "createdTime": {
          "documentation": "<p>The time when the variable was created.</p>",
          "shape": "time"
        },
        "dataSource": {
          "documentation": "<p>The data source of the variable.</p>",
          "shape": "DataSource"
        },
        "dataType": {
          "documentation": "<p>The data type of the variable.</p>",
          "shape": "DataType"
        },
        "defaultValue": {
          "documentation": "<p>The default value of the variable.</p>",
          "shape": "string"
        },
        "description": {
          "documentation": "<p>The description of the variable. </p>",
          "shape": "string"
        },
        "lastUpdatedTime": {
          "documentation": "<p>The time when variable was last updated.</p>",
          "shape": "time"
        },
        "name": {
          "documentation": "<p>The name of the variable.</p>",
          "shape": "string"
        },
        "variableType": {
          "documentation": "<p>The variable type of the variable.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "VariableEntry": {
      "documentation": "<p>The variable entry in a list.</p>",
      "members": {
        "dataSource": {
          "documentation": "<p>The data source of the variable entry.</p>",
          "shape": "string"
        },
        "dataType": {
          "documentation": "<p>The data type of the variable entry.</p>",
          "shape": "string"
        },
        "defaultValue": {
          "documentation": "<p>The default value of the variable entry.</p>",
          "shape": "string"
        },
        "description": {
          "documentation": "<p>The description of the variable entry.</p>",
          "shape": "string"
        },
        "name": {
          "documentation": "<p>The name of the variable entry.</p>",
          "shape": "string"
        },
        "variableType": {
          "documentation": "<p>The type of the variable entry.</p>",
          "shape": "string"
        }
      },
      "type": "structure"
    },
    "VariableEntryList": {
      "max": 25,
      "member": {
        "shape": "VariableEntry"
      },
      "min": 1,
      "type": "list"
    },
    "VariableList": {
      "member": {
        "shape": "Variable"
      },
      "type": "list"
    },
    "VariablesMaxResults": {
      "box": true,
      "max": 100,
      "min": 50,
      "type": "integer"
    },
    "attributeKey": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "attributeValue": {
      "max": 256,
      "min": 1,
      "sensitive": true,
      "type": "string"
    },
    "blob": {
      "type": "blob"
    },
    "contentType": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "description": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "float": {
      "type": "float"
    },
    "iamRoleArn": {
      "max": 256,
      "min": 1,
      "pattern": "^arn\\:aws\\:iam\\:\\:[0-9]{12}\\:role\\/[^\\s]{2,64}$",
      "type": "string"
    },
    "identifier": {
      "max": 64,
      "min": 1,
      "pattern": "^[0-9a-z_-]+$",
      "type": "string"
    },
    "integer": {
      "type": "integer"
    },
    "nonEmptyString": {
      "min": 1,
      "type": "string"
    },
    "ruleExpression": {
      "max": 4096,
      "min": 1,
      "type": "string"
    },
    "s3BucketLocation": {
      "max": 512,
      "min": 1,
      "pattern": "^s3:\\/\\/[^\\s]+$",
      "type": "string"
    },
    "string": {
      "type": "string"
    },
    "time": {
      "type": "string"
    }
  },
  "version": "2.0"
}
