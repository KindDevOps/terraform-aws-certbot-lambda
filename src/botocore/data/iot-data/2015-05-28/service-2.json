{
  "documentation": "<fullname>AWS IoT</fullname> <p>AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete thing shadows. A thing shadow is a persistent representation of your things and their state in the AWS cloud.</p>",
  "metadata": {
    "apiVersion": "2015-05-28",
    "endpointPrefix": "data.iot",
    "protocol": "rest-json",
    "serviceFullName": "AWS IoT Data Plane",
    "serviceId": "IoT Data Plane",
    "signatureVersion": "v4",
    "signingName": "iotdata",
    "uid": "iot-data-2015-05-28"
  },
  "operations": {
    "DeleteThingShadow": {
      "documentation": "<p>Deletes the thing shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html\">DeleteThingShadow</a> in the <i>AWS IoT Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "MethodNotAllowedException"
        },
        {
          "shape": "UnsupportedDocumentEncodingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/things/{thingName}/shadow"
      },
      "input": {
        "shape": "DeleteThingShadowRequest"
      },
      "name": "DeleteThingShadow",
      "output": {
        "shape": "DeleteThingShadowResponse"
      }
    },
    "GetThingShadow": {
      "documentation": "<p>Gets the thing shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html\">GetThingShadow</a> in the <i>AWS IoT Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "MethodNotAllowedException"
        },
        {
          "shape": "UnsupportedDocumentEncodingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}/shadow"
      },
      "input": {
        "shape": "GetThingShadowRequest"
      },
      "name": "GetThingShadow",
      "output": {
        "shape": "GetThingShadowResponse"
      }
    },
    "Publish": {
      "documentation": "<p>Publishes state information.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http\">HTTP Protocol</a> in the <i>AWS IoT Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "MethodNotAllowedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/topics/{topic}"
      },
      "input": {
        "shape": "PublishRequest"
      },
      "name": "Publish"
    },
    "UpdateThingShadow": {
      "documentation": "<p>Updates the thing shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html\">UpdateThingShadow</a> in the <i>AWS IoT Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "RequestEntityTooLargeException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "MethodNotAllowedException"
        },
        {
          "shape": "UnsupportedDocumentEncodingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/things/{thingName}/shadow"
      },
      "input": {
        "shape": "UpdateThingShadowRequest"
      },
      "name": "UpdateThingShadow",
      "output": {
        "shape": "UpdateThingShadowResponse"
      }
    }
  },
  "shapes": {
    "ConflictException": {
      "documentation": "<p>The specified version does not match the version of the document.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "DeleteThingShadowRequest": {
      "documentation": "<p>The input for the DeleteThingShadow operation.</p>",
      "members": {
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "DeleteThingShadowResponse": {
      "documentation": "<p>The output from the DeleteThingShadow operation.</p>",
      "members": {
        "payload": {
          "documentation": "<p>The state information, in JSON format.</p>",
          "shape": "JsonDocument"
        }
      },
      "payload": "payload",
      "required": [
        "payload"
      ],
      "type": "structure"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "GetThingShadowRequest": {
      "documentation": "<p>The input for the GetThingShadow operation.</p>",
      "members": {
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "GetThingShadowResponse": {
      "documentation": "<p>The output from the GetThingShadow operation.</p>",
      "members": {
        "payload": {
          "documentation": "<p>The state information, in JSON format.</p>",
          "shape": "JsonDocument"
        }
      },
      "payload": "payload",
      "type": "structure"
    },
    "InternalFailureException": {
      "documentation": "<p>An unexpected error has occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>The request is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "JsonDocument": {
      "type": "blob"
    },
    "MethodNotAllowedException": {
      "documentation": "<p>The specified combination of HTTP verb and URI is not supported.</p>",
      "error": {
        "httpStatusCode": 405
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Payload": {
      "type": "blob"
    },
    "PublishRequest": {
      "documentation": "<p>The input for the Publish operation.</p>",
      "members": {
        "payload": {
          "documentation": "<p>The state information, in JSON format.</p>",
          "shape": "Payload"
        },
        "qos": {
          "documentation": "<p>The Quality of Service (QoS) level.</p>",
          "location": "querystring",
          "locationName": "qos",
          "shape": "Qos"
        },
        "topic": {
          "documentation": "<p>The name of the MQTT topic.</p>",
          "location": "uri",
          "locationName": "topic",
          "shape": "Topic"
        }
      },
      "payload": "payload",
      "required": [
        "topic"
      ],
      "type": "structure"
    },
    "Qos": {
      "max": 1,
      "min": 0,
      "type": "integer"
    },
    "RequestEntityTooLargeException": {
      "documentation": "<p>The payload exceeds the maximum size allowed.</p>",
      "error": {
        "httpStatusCode": 413
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is temporarily unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ThingName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The rate exceeds the limit.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "Topic": {
      "type": "string"
    },
    "UnauthorizedException": {
      "documentation": "<p>You are not authorized to perform this operation.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "UnsupportedDocumentEncodingException": {
      "documentation": "<p>The document encoding is not supported.</p>",
      "error": {
        "httpStatusCode": 415
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "UpdateThingShadowRequest": {
      "documentation": "<p>The input for the UpdateThingShadow operation.</p>",
      "members": {
        "payload": {
          "documentation": "<p>The state information, in JSON format.</p>",
          "shape": "JsonDocument"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "payload": "payload",
      "required": [
        "thingName",
        "payload"
      ],
      "type": "structure"
    },
    "UpdateThingShadowResponse": {
      "documentation": "<p>The output from the UpdateThingShadow operation.</p>",
      "members": {
        "payload": {
          "documentation": "<p>The state information, in JSON format.</p>",
          "shape": "JsonDocument"
        }
      },
      "payload": "payload",
      "type": "structure"
    },
    "errorMessage": {
      "type": "string"
    }
  },
  "version": "2.0"
}
