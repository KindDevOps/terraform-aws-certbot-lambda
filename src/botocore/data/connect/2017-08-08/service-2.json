{
  "documentation": "<p>Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides rich metrics and real-time reporting that allow you to optimize contact routing. You can also resolve customer issues more efficiently by putting customers in touch with the right agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create and limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Limits</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
  "metadata": {
    "apiVersion": "2017-08-08",
    "endpointPrefix": "connect",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Amazon Connect",
    "serviceFullName": "Amazon Connect Service",
    "serviceId": "Connect",
    "signatureVersion": "v4",
    "signingName": "connect",
    "uid": "connect-2017-08-08"
  },
  "operations": {
    "CreateUser": {
      "documentation": "<p>Creates a user account for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "DuplicateResourceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/users/{InstanceId}"
      },
      "input": {
        "shape": "CreateUserRequest"
      },
      "name": "CreateUser",
      "output": {
        "shape": "CreateUserResponse"
      }
    },
    "DeleteUser": {
      "documentation": "<p>Deletes a user account from the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/users/{InstanceId}/{UserId}"
      },
      "input": {
        "shape": "DeleteUserRequest"
      },
      "name": "DeleteUser"
    },
    "DescribeUser": {
      "documentation": "<p>Describes the specified user account. You can find the instance ID in the console (it\u2019s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/users/{InstanceId}/{UserId}"
      },
      "input": {
        "shape": "DescribeUserRequest"
      },
      "name": "DescribeUser",
      "output": {
        "shape": "DescribeUserResponse"
      }
    },
    "DescribeUserHierarchyGroup": {
      "documentation": "<p>Describes the specified hierarchy group.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}"
      },
      "input": {
        "shape": "DescribeUserHierarchyGroupRequest"
      },
      "name": "DescribeUserHierarchyGroup",
      "output": {
        "shape": "DescribeUserHierarchyGroupResponse"
      }
    },
    "DescribeUserHierarchyStructure": {
      "documentation": "<p>Describes the hierarchy structure of the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user-hierarchy-structure/{InstanceId}"
      },
      "input": {
        "shape": "DescribeUserHierarchyStructureRequest"
      },
      "name": "DescribeUserHierarchyStructure",
      "output": {
        "shape": "DescribeUserHierarchyStructureResponse"
      }
    },
    "GetContactAttributes": {
      "documentation": "<p>Retrieves the contact attributes for the specified contact.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/contact/attributes/{InstanceId}/{InitialContactId}"
      },
      "input": {
        "shape": "GetContactAttributesRequest"
      },
      "name": "GetContactAttributes",
      "output": {
        "shape": "GetContactAttributesResponse"
      }
    },
    "GetCurrentMetricData": {
      "documentation": "<p>Gets the real-time metric data from the specified Amazon Connect instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-reports.html\">Real-time Metrics Reports</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/metrics/current/{InstanceId}"
      },
      "input": {
        "shape": "GetCurrentMetricDataRequest"
      },
      "name": "GetCurrentMetricData",
      "output": {
        "shape": "GetCurrentMetricDataResponse"
      }
    },
    "GetFederationToken": {
      "documentation": "<p>Retrieves a token for federation.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UserNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "DuplicateResourceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user/federate/{InstanceId}"
      },
      "input": {
        "shape": "GetFederationTokenRequest"
      },
      "name": "GetFederationToken",
      "output": {
        "shape": "GetFederationTokenResponse"
      }
    },
    "GetMetricData": {
      "documentation": "<p>Gets historical metric data from the specified Amazon Connect instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics.html\">Historical Metrics Reports</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/metrics/historical/{InstanceId}"
      },
      "input": {
        "shape": "GetMetricDataRequest"
      },
      "name": "GetMetricData",
      "output": {
        "shape": "GetMetricDataResponse"
      }
    },
    "ListContactFlows": {
      "documentation": "<p>Provides information about the contact flows for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/contact-flows-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListContactFlowsRequest"
      },
      "name": "ListContactFlows",
      "output": {
        "shape": "ListContactFlowsResponse"
      }
    },
    "ListHoursOfOperations": {
      "documentation": "<p>Provides information about the hours of operation for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/hours-of-operations-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListHoursOfOperationsRequest"
      },
      "name": "ListHoursOfOperations",
      "output": {
        "shape": "ListHoursOfOperationsResponse"
      }
    },
    "ListPhoneNumbers": {
      "documentation": "<p>Provides information about the phone numbers for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/phone-numbers-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListPhoneNumbersRequest"
      },
      "name": "ListPhoneNumbers",
      "output": {
        "shape": "ListPhoneNumbersResponse"
      }
    },
    "ListQueues": {
      "documentation": "<p>Provides information about the queues for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/queues-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListQueuesRequest"
      },
      "name": "ListQueues",
      "output": {
        "shape": "ListQueuesResponse"
      }
    },
    "ListRoutingProfiles": {
      "documentation": "<p>Provides summary information about the routing profiles for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/routing-profiles-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListRoutingProfilesRequest"
      },
      "name": "ListRoutingProfiles",
      "output": {
        "shape": "ListRoutingProfilesResponse"
      }
    },
    "ListSecurityProfiles": {
      "documentation": "<p>Provides summary information about the security profiles for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/security-profiles-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListSecurityProfilesRequest"
      },
      "name": "ListSecurityProfiles",
      "output": {
        "shape": "ListSecurityProfilesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags for the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListUserHierarchyGroups": {
      "documentation": "<p>Provides summary information about the hierarchy groups for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user-hierarchy-groups-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListUserHierarchyGroupsRequest"
      },
      "name": "ListUserHierarchyGroups",
      "output": {
        "shape": "ListUserHierarchyGroupsResponse"
      }
    },
    "ListUsers": {
      "documentation": "<p>Provides summary information about the users for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/users-summary/{InstanceId}"
      },
      "input": {
        "shape": "ListUsersRequest"
      },
      "name": "ListUsers",
      "output": {
        "shape": "ListUsersResponse"
      }
    },
    "StartChatContact": {
      "documentation": "<p>Initiates a contact flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p> <p>When a new chat contact is successfully created, clients need to subscribe to the participant\u2019s connection for the created chat within 5 minutes. This is achieved by invoking <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/contact/chat"
      },
      "input": {
        "shape": "StartChatContactRequest"
      },
      "name": "StartChatContact",
      "output": {
        "shape": "StartChatContactResponse"
      }
    },
    "StartOutboundVoiceContact": {
      "documentation": "<p>Initiates a contact flow to place an outbound call to a customer.</p> <p>There is a 60 second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "DestinationNotAllowedException"
        },
        {
          "shape": "OutboundContactNotPermittedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/contact/outbound-voice"
      },
      "input": {
        "shape": "StartOutboundVoiceContactRequest"
      },
      "name": "StartOutboundVoiceContact",
      "output": {
        "shape": "StartOutboundVoiceContactResponse"
      }
    },
    "StopContact": {
      "documentation": "<p>Ends the specified contact.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ContactNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/contact/stop"
      },
      "input": {
        "shape": "StopContactRequest"
      },
      "name": "StopContact",
      "output": {
        "shape": "StopContactResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds the specified tags to the specified resource.</p> <p>The supported resource type is users.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateContactAttributes": {
      "documentation": "<p>Creates or updates the contact attributes associated with the specified contact.</p> <p>You can add or update attributes for both ongoing and completed contacts. For example, you can update the customer's name or the reason the customer called while the call is active, or add notes about steps that the agent took during the call that are displayed to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or identifying abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted.</p> <p> <b>Important:</b> You cannot use the operation to update attributes for contacts that occurred prior to the release of the API, September 12, 2018. You can update attributes only for contacts that started after the release of the API. If you attempt to update attributes for a contact that occurred prior to the release of the API, a 400 error is returned. This applies also to queued callbacks that were initiated prior to the release of the API but are still active in your instance.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/contact/attributes"
      },
      "input": {
        "shape": "UpdateContactAttributesRequest"
      },
      "name": "UpdateContactAttributes",
      "output": {
        "shape": "UpdateContactAttributesResponse"
      }
    },
    "UpdateUserHierarchy": {
      "documentation": "<p>Assigns the specified hierarchy group to the specified user.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/users/{InstanceId}/{UserId}/hierarchy"
      },
      "input": {
        "shape": "UpdateUserHierarchyRequest"
      },
      "name": "UpdateUserHierarchy"
    },
    "UpdateUserIdentityInfo": {
      "documentation": "<p>Updates the identity information for the specified user.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/users/{InstanceId}/{UserId}/identity-info"
      },
      "input": {
        "shape": "UpdateUserIdentityInfoRequest"
      },
      "name": "UpdateUserIdentityInfo"
    },
    "UpdateUserPhoneConfig": {
      "documentation": "<p>Updates the phone configuration settings for the specified user.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/users/{InstanceId}/{UserId}/phone-config"
      },
      "input": {
        "shape": "UpdateUserPhoneConfigRequest"
      },
      "name": "UpdateUserPhoneConfig"
    },
    "UpdateUserRoutingProfile": {
      "documentation": "<p>Assigns the specified routing profile to the specified user.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/users/{InstanceId}/{UserId}/routing-profile"
      },
      "input": {
        "shape": "UpdateUserRoutingProfileRequest"
      },
      "name": "UpdateUserRoutingProfile"
    },
    "UpdateUserSecurityProfiles": {
      "documentation": "<p>Assigns the specified security profiles to the specified user.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/users/{InstanceId}/{UserId}/security-profiles"
      },
      "input": {
        "shape": "UpdateUserSecurityProfilesRequest"
      },
      "name": "UpdateUserSecurityProfiles"
    }
  },
  "shapes": {
    "ARN": {
      "type": "string"
    },
    "AfterContactWorkTimeLimit": {
      "min": 0,
      "type": "integer"
    },
    "AgentFirstName": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "AgentLastName": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "AgentUsername": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "AttributeName": {
      "max": 32767,
      "min": 1,
      "type": "string"
    },
    "AttributeValue": {
      "max": 32767,
      "min": 0,
      "type": "string"
    },
    "Attributes": {
      "key": {
        "shape": "AttributeName"
      },
      "type": "map",
      "value": {
        "shape": "AttributeValue"
      }
    },
    "AutoAccept": {
      "type": "boolean"
    },
    "Channel": {
      "enum": [
        "VOICE",
        "CHAT"
      ],
      "type": "string"
    },
    "Channels": {
      "max": 1,
      "member": {
        "shape": "Channel"
      },
      "type": "list"
    },
    "ChatContent": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "ChatContentType": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "ChatMessage": {
      "documentation": "<p>A chat message.</p>",
      "members": {
        "Content": {
          "documentation": "<p>The content of the chat message.</p>",
          "shape": "ChatContent"
        },
        "ContentType": {
          "documentation": "<p>The type of the content. Supported types are text/plain.</p>",
          "shape": "ChatContentType"
        }
      },
      "required": [
        "ContentType",
        "Content"
      ],
      "type": "structure"
    },
    "ClientToken": {
      "max": 500,
      "type": "string"
    },
    "Comparison": {
      "enum": [
        "LT"
      ],
      "type": "string"
    },
    "ContactFlowId": {
      "max": 500,
      "type": "string"
    },
    "ContactFlowName": {
      "type": "string"
    },
    "ContactFlowSummary": {
      "documentation": "<p>Contains summary information about a contact flow.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the contact flow.</p>",
          "shape": "ARN"
        },
        "ContactFlowType": {
          "documentation": "<p>The type of contact flow.</p>",
          "shape": "ContactFlowType"
        },
        "Id": {
          "documentation": "<p>The identifier of the contact flow.</p>",
          "shape": "ContactFlowId"
        },
        "Name": {
          "documentation": "<p>The name of the contact flow.</p>",
          "shape": "ContactFlowName"
        }
      },
      "type": "structure"
    },
    "ContactFlowSummaryList": {
      "member": {
        "shape": "ContactFlowSummary"
      },
      "type": "list"
    },
    "ContactFlowType": {
      "enum": [
        "CONTACT_FLOW",
        "CUSTOMER_QUEUE",
        "CUSTOMER_HOLD",
        "CUSTOMER_WHISPER",
        "AGENT_HOLD",
        "AGENT_WHISPER",
        "OUTBOUND_WHISPER",
        "AGENT_TRANSFER",
        "QUEUE_TRANSFER"
      ],
      "type": "string"
    },
    "ContactFlowTypes": {
      "max": 10,
      "member": {
        "shape": "ContactFlowType"
      },
      "type": "list"
    },
    "ContactId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ContactNotFoundException": {
      "documentation": "<p>The contact with the specified ID is not active or does not exist.</p>",
      "error": {
        "httpStatusCode": 410
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "CreateUserRequest": {
      "members": {
        "DirectoryUserId": {
          "documentation": "<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>",
          "shape": "DirectoryUserId"
        },
        "HierarchyGroupId": {
          "documentation": "<p>The identifier of the hierarchy group for the user.</p>",
          "shape": "HierarchyGroupId"
        },
        "IdentityInfo": {
          "documentation": "<p>The information about the identity of the user.</p>",
          "shape": "UserIdentityInfo"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "Password": {
          "documentation": "<p>The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.</p>",
          "shape": "Password"
        },
        "PhoneConfig": {
          "documentation": "<p>The phone settings for the user.</p>",
          "shape": "UserPhoneConfig"
        },
        "RoutingProfileId": {
          "documentation": "<p>The identifier of the routing profile for the user.</p>",
          "shape": "RoutingProfileId"
        },
        "SecurityProfileIds": {
          "documentation": "<p>The identifier of the security profile for the user.</p>",
          "shape": "SecurityProfileIds"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        },
        "Username": {
          "documentation": "<p>The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\\@]+.</p>",
          "shape": "AgentUsername"
        }
      },
      "required": [
        "Username",
        "PhoneConfig",
        "SecurityProfileIds",
        "RoutingProfileId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "CreateUserResponse": {
      "members": {
        "UserArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the user account.</p>",
          "shape": "ARN"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "Credentials": {
      "documentation": "<p>Contains credentials to use for federation.</p>",
      "members": {
        "AccessToken": {
          "documentation": "<p>An access token generated for a federated user to access Amazon Connect.</p>",
          "shape": "SecurityToken"
        },
        "AccessTokenExpiration": {
          "documentation": "<p>A token generated with an expiration time for the session a user is logged in to Amazon Connect.</p>",
          "shape": "timestamp"
        },
        "RefreshToken": {
          "documentation": "<p>Renews a token generated for a user to access the Amazon Connect instance.</p>",
          "shape": "SecurityToken"
        },
        "RefreshTokenExpiration": {
          "documentation": "<p>Renews the expiration timer for a generated token.</p>",
          "shape": "timestamp"
        }
      },
      "type": "structure"
    },
    "CurrentMetric": {
      "documentation": "<p>Contains information about a real-time metric.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the metric.</p>",
          "shape": "CurrentMetricName"
        },
        "Unit": {
          "documentation": "<p>The unit for the metric.</p>",
          "shape": "Unit"
        }
      },
      "type": "structure"
    },
    "CurrentMetricData": {
      "documentation": "<p>Contains the data for a real-time metric.</p>",
      "members": {
        "Metric": {
          "documentation": "<p>Information about the metric.</p>",
          "shape": "CurrentMetric"
        },
        "Value": {
          "box": true,
          "documentation": "<p>The value of the metric.</p>",
          "shape": "Value"
        }
      },
      "type": "structure"
    },
    "CurrentMetricDataCollections": {
      "member": {
        "shape": "CurrentMetricData"
      },
      "type": "list"
    },
    "CurrentMetricName": {
      "documentation": "<p>The current metric names.</p>",
      "enum": [
        "AGENTS_ONLINE",
        "AGENTS_AVAILABLE",
        "AGENTS_ON_CALL",
        "AGENTS_NON_PRODUCTIVE",
        "AGENTS_AFTER_CONTACT_WORK",
        "AGENTS_ERROR",
        "AGENTS_STAFFED",
        "CONTACTS_IN_QUEUE",
        "OLDEST_CONTACT_AGE",
        "CONTACTS_SCHEDULED",
        "AGENTS_ON_CONTACT",
        "SLOTS_ACTIVE",
        "SLOTS_AVAILABLE"
      ],
      "type": "string"
    },
    "CurrentMetricResult": {
      "documentation": "<p>Contains information about a set of real-time metrics.</p>",
      "members": {
        "Collections": {
          "documentation": "<p>The set of metrics.</p>",
          "shape": "CurrentMetricDataCollections"
        },
        "Dimensions": {
          "documentation": "<p>The dimensions for the metrics.</p>",
          "shape": "Dimensions"
        }
      },
      "type": "structure"
    },
    "CurrentMetricResults": {
      "member": {
        "shape": "CurrentMetricResult"
      },
      "type": "list"
    },
    "CurrentMetrics": {
      "member": {
        "shape": "CurrentMetric"
      },
      "type": "list"
    },
    "DeleteUserRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "InstanceId",
        "UserId"
      ],
      "type": "structure"
    },
    "DescribeUserHierarchyGroupRequest": {
      "members": {
        "HierarchyGroupId": {
          "documentation": "<p>The identifier of the hierarchy group.</p>",
          "location": "uri",
          "locationName": "HierarchyGroupId",
          "shape": "HierarchyGroupId"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "HierarchyGroupId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "DescribeUserHierarchyGroupResponse": {
      "members": {
        "HierarchyGroup": {
          "documentation": "<p>Information about the hierarchy group.</p>",
          "shape": "HierarchyGroup"
        }
      },
      "type": "structure"
    },
    "DescribeUserHierarchyStructureRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "DescribeUserHierarchyStructureResponse": {
      "members": {
        "HierarchyStructure": {
          "documentation": "<p>Information about the hierarchy structure.</p>",
          "shape": "HierarchyStructure"
        }
      },
      "type": "structure"
    },
    "DescribeUserRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "DescribeUserResponse": {
      "members": {
        "User": {
          "documentation": "<p>Information about the user account and configuration settings.</p>",
          "shape": "User"
        }
      },
      "type": "structure"
    },
    "DestinationNotAllowedException": {
      "documentation": "<p>Outbound calls to the destination number are not allowed.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Dimensions": {
      "documentation": "<p>Contains information about the dimensions for a set of metrics.</p>",
      "members": {
        "Channel": {
          "documentation": "<p>The channel used for grouping and filters.</p>",
          "shape": "Channel"
        },
        "Queue": {
          "documentation": "<p>Information about the queue for which metrics are returned.</p>",
          "shape": "QueueReference"
        }
      },
      "type": "structure"
    },
    "DirectoryUserId": {
      "type": "string"
    },
    "DisplayName": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "DuplicateResourceException": {
      "documentation": "<p>A resource with the specified name already exists.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Email": {
      "type": "string"
    },
    "Filters": {
      "documentation": "<p>Contains the filter to apply when retrieving metrics.</p>",
      "members": {
        "Channels": {
          "documentation": "<p>The channel to use to filter the metrics.</p>",
          "shape": "Channels"
        },
        "Queues": {
          "documentation": "<p>The queues to use to filter the metrics. You can specify up to 100 queues per request.</p>",
          "shape": "Queues"
        }
      },
      "type": "structure"
    },
    "GetContactAttributesRequest": {
      "members": {
        "InitialContactId": {
          "documentation": "<p>The identifier of the initial contact.</p>",
          "location": "uri",
          "locationName": "InitialContactId",
          "shape": "ContactId"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InstanceId",
        "InitialContactId"
      ],
      "type": "structure"
    },
    "GetContactAttributesResponse": {
      "members": {
        "Attributes": {
          "documentation": "<p>Information about the attributes.</p>",
          "shape": "Attributes"
        }
      },
      "type": "structure"
    },
    "GetCurrentMetricDataRequest": {
      "members": {
        "CurrentMetrics": {
          "documentation": "<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available:</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> </dd> </dl>",
          "shape": "CurrentMetrics"
        },
        "Filters": {
          "documentation": "<p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. The only supported channel is <code>VOICE</code>.</p>",
          "shape": "Filters"
        },
        "Groupings": {
          "documentation": "<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. The only supported channel is <code>VOICE</code>.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>",
          "shape": "Groupings"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "shape": "MaxResult100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId",
        "Filters",
        "CurrentMetrics"
      ],
      "type": "structure"
    },
    "GetCurrentMetricDataResponse": {
      "members": {
        "DataSnapshotTime": {
          "documentation": "<p>The time at which the metrics were retrieved and cached for pagination.</p>",
          "shape": "timestamp"
        },
        "MetricResults": {
          "documentation": "<p>Information about the real-time metrics.</p>",
          "shape": "CurrentMetricResults"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "GetFederationTokenRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "GetFederationTokenResponse": {
      "members": {
        "Credentials": {
          "documentation": "<p>The credentials to use for federation.</p>",
          "shape": "Credentials"
        }
      },
      "type": "structure"
    },
    "GetMetricDataRequest": {
      "members": {
        "EndTime": {
          "documentation": "<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>",
          "shape": "timestamp"
        },
        "Filters": {
          "documentation": "<p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. The only supported channel is <code>VOICE</code>.</p>",
          "shape": "Filters"
        },
        "Groupings": {
          "documentation": "<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The only supported grouping is <code>QUEUE</code>.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>",
          "shape": "Groupings"
        },
        "HistoricalMetrics": {
          "documentation": "<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available:</p> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: Only \"Less than\" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>",
          "shape": "HistoricalMetrics"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "shape": "MaxResult100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "StartTime": {
          "documentation": "<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>",
          "shape": "timestamp"
        }
      },
      "required": [
        "InstanceId",
        "StartTime",
        "EndTime",
        "Filters",
        "HistoricalMetrics"
      ],
      "type": "structure"
    },
    "GetMetricDataResponse": {
      "members": {
        "MetricResults": {
          "documentation": "<p>Information about the historical metrics.</p> <p>If no grouping is specified, a summary of metric data is returned.</p>",
          "shape": "HistoricalMetricResults"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "Grouping": {
      "enum": [
        "QUEUE",
        "CHANNEL"
      ],
      "type": "string"
    },
    "Groupings": {
      "max": 2,
      "member": {
        "shape": "Grouping"
      },
      "type": "list"
    },
    "HierarchyGroup": {
      "documentation": "<p>Contains information about a hierarchy group.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the hierarchy group.</p>",
          "shape": "ARN"
        },
        "HierarchyPath": {
          "documentation": "<p>Information about the levels in the hierarchy group.</p>",
          "shape": "HierarchyPath"
        },
        "Id": {
          "documentation": "<p>The identifier of the hierarchy group.</p>",
          "shape": "HierarchyGroupId"
        },
        "LevelId": {
          "documentation": "<p>The identifier of the level in the hierarchy group.</p>",
          "shape": "HierarchyLevelId"
        },
        "Name": {
          "documentation": "<p>The name of the hierarchy group.</p>",
          "shape": "HierarchyGroupName"
        }
      },
      "type": "structure"
    },
    "HierarchyGroupId": {
      "type": "string"
    },
    "HierarchyGroupName": {
      "type": "string"
    },
    "HierarchyGroupSummary": {
      "documentation": "<p>Contains summary information about a hierarchy group.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the hierarchy group.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the hierarchy group.</p>",
          "shape": "HierarchyGroupId"
        },
        "Name": {
          "documentation": "<p>The name of the hierarchy group.</p>",
          "shape": "HierarchyGroupName"
        }
      },
      "type": "structure"
    },
    "HierarchyGroupSummaryList": {
      "member": {
        "shape": "HierarchyGroupSummary"
      },
      "type": "list"
    },
    "HierarchyLevel": {
      "documentation": "<p>Contains information about a hierarchy level.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the hierarchy level.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the hierarchy level.</p>",
          "shape": "HierarchyLevelId"
        },
        "Name": {
          "documentation": "<p>The name of the hierarchy level.</p>",
          "shape": "HierarchyLevelName"
        }
      },
      "type": "structure"
    },
    "HierarchyLevelId": {
      "type": "string"
    },
    "HierarchyLevelName": {
      "type": "string"
    },
    "HierarchyPath": {
      "documentation": "<p>Contains information about the levels of a hierarchy group.</p>",
      "members": {
        "LevelFive": {
          "documentation": "<p>Information about level five.</p>",
          "shape": "HierarchyGroupSummary"
        },
        "LevelFour": {
          "documentation": "<p>Information about level four.</p>",
          "shape": "HierarchyGroupSummary"
        },
        "LevelOne": {
          "documentation": "<p>Information about level one.</p>",
          "shape": "HierarchyGroupSummary"
        },
        "LevelThree": {
          "documentation": "<p>Information about level three.</p>",
          "shape": "HierarchyGroupSummary"
        },
        "LevelTwo": {
          "documentation": "<p>Information about level two.</p>",
          "shape": "HierarchyGroupSummary"
        }
      },
      "type": "structure"
    },
    "HierarchyStructure": {
      "documentation": "<p>Contains information about a hierarchy structure.</p>",
      "members": {
        "LevelFive": {
          "documentation": "<p>Information about level five.</p>",
          "shape": "HierarchyLevel"
        },
        "LevelFour": {
          "documentation": "<p>Information about level four.</p>",
          "shape": "HierarchyLevel"
        },
        "LevelOne": {
          "documentation": "<p>Information about level one.</p>",
          "shape": "HierarchyLevel"
        },
        "LevelThree": {
          "documentation": "<p>Information about level three.</p>",
          "shape": "HierarchyLevel"
        },
        "LevelTwo": {
          "documentation": "<p>Information about level two.</p>",
          "shape": "HierarchyLevel"
        }
      },
      "type": "structure"
    },
    "HistoricalMetric": {
      "documentation": "<p>Contains information about a historical metric.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the metric.</p>",
          "shape": "HistoricalMetricName"
        },
        "Statistic": {
          "documentation": "<p>The statistic for the metric.</p>",
          "shape": "Statistic"
        },
        "Threshold": {
          "box": true,
          "documentation": "<p>The threshold for the metric, used with service level metrics.</p>",
          "shape": "Threshold"
        },
        "Unit": {
          "documentation": "<p>The unit for the metric.</p>",
          "shape": "Unit"
        }
      },
      "type": "structure"
    },
    "HistoricalMetricData": {
      "documentation": "<p>Contains the data for a historical metric.</p>",
      "members": {
        "Metric": {
          "documentation": "<p>Information about the metric.</p>",
          "shape": "HistoricalMetric"
        },
        "Value": {
          "box": true,
          "documentation": "<p>The value of the metric.</p>",
          "shape": "Value"
        }
      },
      "type": "structure"
    },
    "HistoricalMetricDataCollections": {
      "member": {
        "shape": "HistoricalMetricData"
      },
      "type": "list"
    },
    "HistoricalMetricName": {
      "documentation": "<p>The historical metric names.</p>",
      "enum": [
        "CONTACTS_QUEUED",
        "CONTACTS_HANDLED",
        "CONTACTS_ABANDONED",
        "CONTACTS_CONSULTED",
        "CONTACTS_AGENT_HUNG_UP_FIRST",
        "CONTACTS_HANDLED_INCOMING",
        "CONTACTS_HANDLED_OUTBOUND",
        "CONTACTS_HOLD_ABANDONS",
        "CONTACTS_TRANSFERRED_IN",
        "CONTACTS_TRANSFERRED_OUT",
        "CONTACTS_TRANSFERRED_IN_FROM_QUEUE",
        "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE",
        "CONTACTS_MISSED",
        "CALLBACK_CONTACTS_HANDLED",
        "API_CONTACTS_HANDLED",
        "OCCUPANCY",
        "HANDLE_TIME",
        "AFTER_CONTACT_WORK_TIME",
        "QUEUED_TIME",
        "ABANDON_TIME",
        "QUEUE_ANSWER_TIME",
        "HOLD_TIME",
        "INTERACTION_TIME",
        "INTERACTION_AND_HOLD_TIME",
        "SERVICE_LEVEL"
      ],
      "type": "string"
    },
    "HistoricalMetricResult": {
      "documentation": "<p>Contains information about the historical metrics retrieved.</p>",
      "members": {
        "Collections": {
          "documentation": "<p>The set of metrics.</p>",
          "shape": "HistoricalMetricDataCollections"
        },
        "Dimensions": {
          "documentation": "<p>The dimension for the metrics.</p>",
          "shape": "Dimensions"
        }
      },
      "type": "structure"
    },
    "HistoricalMetricResults": {
      "member": {
        "shape": "HistoricalMetricResult"
      },
      "type": "list"
    },
    "HistoricalMetrics": {
      "member": {
        "shape": "HistoricalMetric"
      },
      "type": "list"
    },
    "HoursOfOperationId": {
      "type": "string"
    },
    "HoursOfOperationName": {
      "type": "string"
    },
    "HoursOfOperationSummary": {
      "documentation": "<p>Contains summary information about hours of operation for a contact center.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the hours of operation.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the hours of operation.</p>",
          "shape": "HoursOfOperationId"
        },
        "Name": {
          "documentation": "<p>The name of the hours of operation.</p>",
          "shape": "HoursOfOperationName"
        }
      },
      "type": "structure"
    },
    "HoursOfOperationSummaryList": {
      "member": {
        "shape": "HoursOfOperationSummary"
      },
      "type": "list"
    },
    "InstanceId": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "InternalServiceException": {
      "documentation": "<p>Request processing failed due to an error or failure with the service.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InvalidParameterException": {
      "documentation": "<p>One or more of the specified parameters are not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>The request is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "LimitExceededException": {
      "documentation": "<p>The allowed limit for the resource has been exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ListContactFlowsRequest": {
      "members": {
        "ContactFlowTypes": {
          "documentation": "<p>The type of contact flow.</p>",
          "location": "querystring",
          "locationName": "contactFlowTypes",
          "shape": "ContactFlowTypes"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListContactFlowsResponse": {
      "members": {
        "ContactFlowSummaryList": {
          "documentation": "<p>Information about the contact flows.</p>",
          "shape": "ContactFlowSummaryList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListHoursOfOperationsRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListHoursOfOperationsResponse": {
      "members": {
        "HoursOfOperationSummaryList": {
          "documentation": "<p>Information about the hours of operation.</p>",
          "shape": "HoursOfOperationSummaryList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListPhoneNumbersRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "PhoneNumberCountryCodes": {
          "documentation": "<p>The ISO country code.</p>",
          "location": "querystring",
          "locationName": "phoneNumberCountryCodes",
          "shape": "PhoneNumberCountryCodes"
        },
        "PhoneNumberTypes": {
          "documentation": "<p>The type of phone number.</p>",
          "location": "querystring",
          "locationName": "phoneNumberTypes",
          "shape": "PhoneNumberTypes"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListPhoneNumbersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "PhoneNumberSummaryList": {
          "documentation": "<p>Information about the phone numbers.</p>",
          "shape": "PhoneNumberSummaryList"
        }
      },
      "type": "structure"
    },
    "ListQueuesRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "QueueTypes": {
          "documentation": "<p>The type of queue.</p>",
          "location": "querystring",
          "locationName": "queueTypes",
          "shape": "QueueTypes"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListQueuesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "QueueSummaryList": {
          "documentation": "<p>Information about the queues.</p>",
          "shape": "QueueSummaryList"
        }
      },
      "type": "structure"
    },
    "ListRoutingProfilesRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListRoutingProfilesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "RoutingProfileSummaryList": {
          "documentation": "<p>Information about the routing profiles.</p>",
          "shape": "RoutingProfileSummaryList"
        }
      },
      "type": "structure"
    },
    "ListSecurityProfilesRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListSecurityProfilesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "SecurityProfileSummaryList": {
          "documentation": "<p>Information about the security profiles.</p>",
          "shape": "SecurityProfileSummaryList"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ARN"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>Information about the tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ListUserHierarchyGroupsRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListUserHierarchyGroupsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "UserHierarchyGroupSummaryList": {
          "documentation": "<p>Information about the hierarchy groups.</p>",
          "shape": "HierarchyGroupSummaryList"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximimum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResult1000"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "UserSummaryList": {
          "documentation": "<p>Information about the users.</p>",
          "shape": "UserSummaryList"
        }
      },
      "type": "structure"
    },
    "MaxResult100": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "MaxResult1000": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "type": "string"
    },
    "NextToken": {
      "type": "string"
    },
    "OutboundContactNotPermittedException": {
      "documentation": "<p>The contact is not permitted.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ParticipantDetails": {
      "documentation": "<p>The customer's details.</p>",
      "members": {
        "DisplayName": {
          "documentation": "<p>Display name of the participant.</p>",
          "shape": "DisplayName"
        }
      },
      "required": [
        "DisplayName"
      ],
      "type": "structure"
    },
    "ParticipantId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ParticipantToken": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "Password": {
      "pattern": "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,64}$/",
      "type": "string"
    },
    "PhoneNumber": {
      "type": "string"
    },
    "PhoneNumberCountryCode": {
      "enum": [
        "AF",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BA",
        "BW",
        "BR",
        "IO",
        "VG",
        "BN",
        "BG",
        "BF",
        "BI",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CK",
        "CR",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "CD",
        "DK",
        "DJ",
        "DM",
        "DO",
        "TL",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "PF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "CI",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MK",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "AN",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "KP",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "CG",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "KR",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "VI",
        "UG",
        "UA",
        "AE",
        "GB",
        "US",
        "UY",
        "UZ",
        "VU",
        "VA",
        "VE",
        "VN",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW"
      ],
      "type": "string"
    },
    "PhoneNumberCountryCodes": {
      "max": 10,
      "member": {
        "shape": "PhoneNumberCountryCode"
      },
      "type": "list"
    },
    "PhoneNumberId": {
      "type": "string"
    },
    "PhoneNumberSummary": {
      "documentation": "<p>Contains summary information about a phone number for a contact center.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the phone number.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the phone number.</p>",
          "shape": "PhoneNumberId"
        },
        "PhoneNumber": {
          "documentation": "<p>The phone number.</p>",
          "shape": "PhoneNumber"
        },
        "PhoneNumberCountryCode": {
          "documentation": "<p>The ISO country code.</p>",
          "shape": "PhoneNumberCountryCode"
        },
        "PhoneNumberType": {
          "documentation": "<p>The type of phone number.</p>",
          "shape": "PhoneNumberType"
        }
      },
      "type": "structure"
    },
    "PhoneNumberSummaryList": {
      "member": {
        "shape": "PhoneNumberSummary"
      },
      "type": "list"
    },
    "PhoneNumberType": {
      "enum": [
        "TOLL_FREE",
        "DID"
      ],
      "type": "string"
    },
    "PhoneNumberTypes": {
      "max": 2,
      "member": {
        "shape": "PhoneNumberType"
      },
      "type": "list"
    },
    "PhoneType": {
      "enum": [
        "SOFT_PHONE",
        "DESK_PHONE"
      ],
      "type": "string"
    },
    "QueueId": {
      "type": "string"
    },
    "QueueName": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "QueueReference": {
      "documentation": "<p>Contains information about a queue resource for which metrics are returned.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the queue.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the queue.</p>",
          "shape": "QueueId"
        }
      },
      "type": "structure"
    },
    "QueueSummary": {
      "documentation": "<p>Contains summary information about a queue.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the queue.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the queue.</p>",
          "shape": "QueueId"
        },
        "Name": {
          "documentation": "<p>The name of the queue.</p>",
          "shape": "QueueName"
        },
        "QueueType": {
          "documentation": "<p>The type of queue.</p>",
          "shape": "QueueType"
        }
      },
      "type": "structure"
    },
    "QueueSummaryList": {
      "member": {
        "shape": "QueueSummary"
      },
      "type": "list"
    },
    "QueueType": {
      "enum": [
        "STANDARD",
        "AGENT"
      ],
      "type": "string"
    },
    "QueueTypes": {
      "max": 2,
      "member": {
        "shape": "QueueType"
      },
      "type": "list"
    },
    "Queues": {
      "max": 100,
      "member": {
        "shape": "QueueId"
      },
      "min": 1,
      "type": "list"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource was not found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>The message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "RoutingProfileId": {
      "type": "string"
    },
    "RoutingProfileName": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "RoutingProfileSummary": {
      "documentation": "<p>Contains summary information about a routing profile.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the routing profile.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the routing profile.</p>",
          "shape": "RoutingProfileId"
        },
        "Name": {
          "documentation": "<p>The name of the routing profile.</p>",
          "shape": "RoutingProfileName"
        }
      },
      "type": "structure"
    },
    "RoutingProfileSummaryList": {
      "member": {
        "shape": "RoutingProfileSummary"
      },
      "type": "list"
    },
    "SecurityProfileId": {
      "type": "string"
    },
    "SecurityProfileIds": {
      "max": 10,
      "member": {
        "shape": "SecurityProfileId"
      },
      "min": 1,
      "type": "list"
    },
    "SecurityProfileName": {
      "type": "string"
    },
    "SecurityProfileSummary": {
      "documentation": "<p>Contains information about a security profile.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the security profile.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the security profile.</p>",
          "shape": "SecurityProfileId"
        },
        "Name": {
          "documentation": "<p>The name of the security profile.</p>",
          "shape": "SecurityProfileName"
        }
      },
      "type": "structure"
    },
    "SecurityProfileSummaryList": {
      "member": {
        "shape": "SecurityProfileSummary"
      },
      "type": "list"
    },
    "SecurityToken": {
      "sensitive": true,
      "type": "string"
    },
    "StartChatContactRequest": {
      "members": {
        "Attributes": {
          "documentation": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
          "shape": "Attributes"
        },
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "ContactFlowId": {
          "documentation": "<p>The identifier of the contact flow for the chat.</p>",
          "shape": "ContactFlowId"
        },
        "InitialMessage": {
          "documentation": "<p>The initial message to be sent to the newly created chat.</p>",
          "shape": "ChatMessage"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "shape": "InstanceId"
        },
        "ParticipantDetails": {
          "documentation": "<p>Information identifying the participant.</p>",
          "shape": "ParticipantDetails"
        }
      },
      "required": [
        "InstanceId",
        "ContactFlowId",
        "ParticipantDetails"
      ],
      "type": "structure"
    },
    "StartChatContactResponse": {
      "members": {
        "ContactId": {
          "documentation": "<p>The identifier of this contact within the Amazon Connect instance. </p>",
          "shape": "ContactId"
        },
        "ParticipantId": {
          "documentation": "<p>The identifier for a chat participant. The participantId for a chat participant is the same throughout the chat lifecycle.</p>",
          "shape": "ParticipantId"
        },
        "ParticipantToken": {
          "documentation": "<p>The token used by the chat participant to call <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a>. The participant token is valid for the lifetime of a chat participant.</p>",
          "shape": "ParticipantToken"
        }
      },
      "type": "structure"
    },
    "StartOutboundVoiceContactRequest": {
      "members": {
        "Attributes": {
          "documentation": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
          "shape": "Attributes"
        },
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "ContactFlowId": {
          "documentation": "<p>The identifier of the contact flow for the outbound call.</p>",
          "shape": "ContactFlowId"
        },
        "DestinationPhoneNumber": {
          "documentation": "<p>The phone number of the customer, in E.164 format.</p>",
          "shape": "PhoneNumber"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "shape": "InstanceId"
        },
        "QueueId": {
          "documentation": "<p>The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.</p>",
          "shape": "QueueId"
        },
        "SourcePhoneNumber": {
          "documentation": "<p>The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.</p>",
          "shape": "PhoneNumber"
        }
      },
      "required": [
        "DestinationPhoneNumber",
        "ContactFlowId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "StartOutboundVoiceContactResponse": {
      "members": {
        "ContactId": {
          "documentation": "<p>The identifier of this contact within the Amazon Connect instance.</p>",
          "shape": "ContactId"
        }
      },
      "type": "structure"
    },
    "Statistic": {
      "enum": [
        "SUM",
        "MAX",
        "AVG"
      ],
      "type": "string"
    },
    "StopContactRequest": {
      "members": {
        "ContactId": {
          "documentation": "<p>The ID of the contact.</p>",
          "shape": "ContactId"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "shape": "InstanceId"
        }
      },
      "required": [
        "ContactId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "StopContactResponse": {
      "members": {},
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ARN"
        },
        "tags": {
          "documentation": "<p>One or more tags. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "Threshold": {
      "documentation": "<p>Contains information about the threshold for service level metrics.</p>",
      "members": {
        "Comparison": {
          "documentation": "<p>The type of comparison. Only \"less than\" (LT) comparisons are supported.</p>",
          "shape": "Comparison"
        },
        "ThresholdValue": {
          "box": true,
          "documentation": "<p>The threshold value to compare.</p>",
          "shape": "ThresholdValue"
        }
      },
      "type": "structure"
    },
    "ThresholdValue": {
      "type": "double"
    },
    "ThrottlingException": {
      "documentation": "<p>The throttling limit has been exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Unit": {
      "enum": [
        "SECONDS",
        "COUNT",
        "PERCENT"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ARN"
        },
        "tagKeys": {
          "documentation": "<p>The tag keys.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UpdateContactAttributesRequest": {
      "members": {
        "Attributes": {
          "documentation": "<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
          "shape": "Attributes"
        },
        "InitialContactId": {
          "documentation": "<p>The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.</p>",
          "shape": "ContactId"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InitialContactId",
        "InstanceId",
        "Attributes"
      ],
      "type": "structure"
    },
    "UpdateContactAttributesResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateUserHierarchyRequest": {
      "members": {
        "HierarchyGroupId": {
          "documentation": "<p>The identifier of the hierarchy group.</p>",
          "shape": "HierarchyGroupId"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "UpdateUserIdentityInfoRequest": {
      "members": {
        "IdentityInfo": {
          "documentation": "<p>The identity information for the user.</p>",
          "shape": "UserIdentityInfo"
        },
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "IdentityInfo",
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "UpdateUserPhoneConfigRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "PhoneConfig": {
          "documentation": "<p>Information about phone configuration settings for the user.</p>",
          "shape": "UserPhoneConfig"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "PhoneConfig",
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "UpdateUserRoutingProfileRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "RoutingProfileId": {
          "documentation": "<p>The identifier of the routing profile for the user.</p>",
          "shape": "RoutingProfileId"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "RoutingProfileId",
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "UpdateUserSecurityProfilesRequest": {
      "members": {
        "InstanceId": {
          "documentation": "<p>The identifier of the Amazon Connect instance.</p>",
          "location": "uri",
          "locationName": "InstanceId",
          "shape": "InstanceId"
        },
        "SecurityProfileIds": {
          "documentation": "<p>The identifiers of the security profiles for the user.</p>",
          "shape": "SecurityProfileIds"
        },
        "UserId": {
          "documentation": "<p>The identifier of the user account.</p>",
          "location": "uri",
          "locationName": "UserId",
          "shape": "UserId"
        }
      },
      "required": [
        "SecurityProfileIds",
        "UserId",
        "InstanceId"
      ],
      "type": "structure"
    },
    "User": {
      "documentation": "<p>Contains information about a user account for a Amazon Connect instance.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the user account.</p>",
          "shape": "ARN"
        },
        "DirectoryUserId": {
          "documentation": "<p>The identifier of the user account in the directory used for identity management.</p>",
          "shape": "DirectoryUserId"
        },
        "HierarchyGroupId": {
          "documentation": "<p>The identifier of the hierarchy group for the user.</p>",
          "shape": "HierarchyGroupId"
        },
        "Id": {
          "documentation": "<p>The identifier of the user account.</p>",
          "shape": "UserId"
        },
        "IdentityInfo": {
          "documentation": "<p>Information about the user identity.</p>",
          "shape": "UserIdentityInfo"
        },
        "PhoneConfig": {
          "documentation": "<p>Information about the phone configuration for the user.</p>",
          "shape": "UserPhoneConfig"
        },
        "RoutingProfileId": {
          "documentation": "<p>The identifier of the routing profile for the user.</p>",
          "shape": "RoutingProfileId"
        },
        "SecurityProfileIds": {
          "documentation": "<p>The identifiers of the security profiles for the user.</p>",
          "shape": "SecurityProfileIds"
        },
        "Tags": {
          "documentation": "<p>The tags.</p>",
          "shape": "TagMap"
        },
        "Username": {
          "documentation": "<p>The user name assigned to the user account.</p>",
          "shape": "AgentUsername"
        }
      },
      "type": "structure"
    },
    "UserId": {
      "type": "string"
    },
    "UserIdentityInfo": {
      "documentation": "<p>Contains information about the identity of a user.</p>",
      "members": {
        "Email": {
          "documentation": "<p>The email address. If you are using SAML for identity management and include this parameter, an error is returned.</p>",
          "shape": "Email"
        },
        "FirstName": {
          "documentation": "<p>The first name. This is required if you are using Amazon Connect or SAML for identity management.</p>",
          "shape": "AgentFirstName"
        },
        "LastName": {
          "documentation": "<p>The last name. This is required if you are using Amazon Connect or SAML for identity management.</p>",
          "shape": "AgentLastName"
        }
      },
      "type": "structure"
    },
    "UserNotFoundException": {
      "documentation": "<p>No user with the specified credentials was found in the Amazon Connect instance.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "UserPhoneConfig": {
      "documentation": "<p>Contains information about the phone configuration settings for a user.</p>",
      "members": {
        "AfterContactWorkTimeLimit": {
          "documentation": "<p>The After Call Work (ACW) timeout setting, in seconds.</p>",
          "shape": "AfterContactWorkTimeLimit"
        },
        "AutoAccept": {
          "documentation": "<p>The Auto accept setting.</p>",
          "shape": "AutoAccept"
        },
        "DeskPhoneNumber": {
          "documentation": "<p>The phone number for the user's desk phone.</p>",
          "shape": "PhoneNumber"
        },
        "PhoneType": {
          "documentation": "<p>The phone type.</p>",
          "shape": "PhoneType"
        }
      },
      "required": [
        "PhoneType"
      ],
      "type": "structure"
    },
    "UserSummary": {
      "documentation": "<p>Contains summary information about a user.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the user account.</p>",
          "shape": "ARN"
        },
        "Id": {
          "documentation": "<p>The identifier of the user account.</p>",
          "shape": "UserId"
        },
        "Username": {
          "documentation": "<p>The Amazon Connect user name of the user account.</p>",
          "shape": "AgentUsername"
        }
      },
      "type": "structure"
    },
    "UserSummaryList": {
      "member": {
        "shape": "UserSummary"
      },
      "type": "list"
    },
    "Value": {
      "type": "double"
    },
    "timestamp": {
      "type": "timestamp"
    }
  },
  "version": "2.0"
}
