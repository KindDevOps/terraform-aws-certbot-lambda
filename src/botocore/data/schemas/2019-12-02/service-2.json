{
  "documentation": "<p>AWS EventBridge Schemas</p>",
  "metadata": {
    "apiVersion": "2019-12-02",
    "endpointPrefix": "schemas",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Schemas",
    "serviceId": "schemas",
    "signatureVersion": "v4",
    "signingName": "schemas",
    "uid": "schemas-2019-12-02"
  },
  "operations": {
    "CreateDiscoverer": {
      "documentation": "<p>Creates a discoverer.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/discoverers",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateDiscovererRequest"
      },
      "name": "CreateDiscoverer",
      "output": {
        "shape": "CreateDiscovererResponse"
      }
    },
    "CreateRegistry": {
      "documentation": "<p>Creates a registry.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/registries/name/{registryName}",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateRegistryRequest"
      },
      "name": "CreateRegistry",
      "output": {
        "shape": "CreateRegistryResponse"
      }
    },
    "CreateSchema": {
      "documentation": "<p>Creates a schema definition.</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateSchemaRequest"
      },
      "name": "CreateSchema",
      "output": {
        "shape": "CreateSchemaResponse"
      }
    },
    "DeleteDiscoverer": {
      "documentation": "<p>Deletes a discoverer.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/discoverers/id/{discovererId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteDiscovererRequest"
      },
      "name": "DeleteDiscoverer"
    },
    "DeleteRegistry": {
      "documentation": "<p>Deletes a Registry.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/registries/name/{registryName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteRegistryRequest"
      },
      "name": "DeleteRegistry"
    },
    "DeleteSchema": {
      "documentation": "<p>Delete a schema definition.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteSchemaRequest"
      },
      "name": "DeleteSchema"
    },
    "DeleteSchemaVersion": {
      "documentation": "<p>Delete the schema version definition</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}/version/{schemaVersion}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteSchemaVersionRequest"
      },
      "name": "DeleteSchemaVersion"
    },
    "DescribeCodeBinding": {
      "documentation": "<p>Describe the code binding URI.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeCodeBindingRequest"
      },
      "name": "DescribeCodeBinding",
      "output": {
        "shape": "DescribeCodeBindingResponse"
      }
    },
    "DescribeDiscoverer": {
      "documentation": "<p>Describes the discoverer.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/discoverers/id/{discovererId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeDiscovererRequest"
      },
      "name": "DescribeDiscoverer",
      "output": {
        "shape": "DescribeDiscovererResponse"
      }
    },
    "DescribeRegistry": {
      "documentation": "<p>Describes the registry.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeRegistryRequest"
      },
      "name": "DescribeRegistry",
      "output": {
        "shape": "DescribeRegistryResponse"
      }
    },
    "DescribeSchema": {
      "documentation": "<p>Retrieve the schema definition.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeSchemaRequest"
      },
      "name": "DescribeSchema",
      "output": {
        "shape": "DescribeSchemaResponse"
      }
    },
    "GetCodeBindingSource": {
      "documentation": "<p>Get the code binding source URI.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}/source",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCodeBindingSourceRequest"
      },
      "name": "GetCodeBindingSource",
      "output": {
        "shape": "GetCodeBindingSourceResponse"
      }
    },
    "GetDiscoveredSchema": {
      "documentation": "<p>Get the discovered schema that was generated based on sampled events.</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/discover",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDiscoveredSchemaRequest"
      },
      "name": "GetDiscoveredSchema",
      "output": {
        "shape": "GetDiscoveredSchemaResponse"
      }
    },
    "ListDiscoverers": {
      "documentation": "<p>List the discoverers.</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/discoverers",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDiscoverersRequest"
      },
      "name": "ListDiscoverers",
      "output": {
        "shape": "ListDiscoverersResponse"
      }
    },
    "ListRegistries": {
      "documentation": "<p>List the registries.</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRegistriesRequest"
      },
      "name": "ListRegistries",
      "output": {
        "shape": "ListRegistriesResponse"
      }
    },
    "ListSchemaVersions": {
      "documentation": "<p>Provides a list of the schema versions and related information.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}/versions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSchemaVersionsRequest"
      },
      "name": "ListSchemaVersions",
      "output": {
        "shape": "ListSchemaVersionsResponse"
      }
    },
    "ListSchemas": {
      "documentation": "<p>List the schemas.</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSchemasRequest"
      },
      "name": "ListSchemas",
      "output": {
        "shape": "ListSchemasResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Get tags for resource.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "LockServiceLinkedRole": {
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/slr-deletion/lock",
        "responseCode": 200
      },
      "input": {
        "shape": "LockServiceLinkedRoleRequest"
      },
      "internal": true,
      "name": "LockServiceLinkedRole",
      "output": {
        "shape": "LockServiceLinkedRoleResponse"
      }
    },
    "PutCodeBinding": {
      "documentation": "<p>Put code binding URI</p>",
      "errors": [
        {
          "shape": "GoneException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}",
        "responseCode": 202
      },
      "input": {
        "shape": "PutCodeBindingRequest"
      },
      "name": "PutCodeBinding",
      "output": {
        "shape": "PutCodeBindingResponse"
      }
    },
    "SearchSchemas": {
      "documentation": "<p>Search the schemas</p>",
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/registries/name/{registryName}/schemas/search",
        "responseCode": 200
      },
      "input": {
        "shape": "SearchSchemasRequest"
      },
      "name": "SearchSchemas",
      "output": {
        "shape": "SearchSchemasResponse"
      }
    },
    "StartDiscoverer": {
      "documentation": "<p>Starts the discoverer</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/discoverers/id/{discovererId}/start",
        "responseCode": 200
      },
      "input": {
        "shape": "StartDiscovererRequest"
      },
      "name": "StartDiscoverer",
      "output": {
        "shape": "StartDiscovererResponse"
      }
    },
    "StopDiscoverer": {
      "documentation": "<p>Stops the discoverer</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/discoverers/id/{discovererId}/stop",
        "responseCode": 200
      },
      "input": {
        "shape": "StopDiscovererRequest"
      },
      "name": "StopDiscoverer",
      "output": {
        "shape": "StopDiscovererResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Add tags to a resource.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UnlockServiceLinkedRole": {
      "errors": [
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/slr-deletion/unlock",
        "responseCode": 200
      },
      "input": {
        "shape": "UnlockServiceLinkedRoleRequest"
      },
      "internal": true,
      "name": "UnlockServiceLinkedRole",
      "output": {
        "shape": "UnlockServiceLinkedRoleResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes tags from a resource.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateDiscoverer": {
      "documentation": "<p>Updates the discoverer</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/discoverers/id/{discovererId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateDiscovererRequest"
      },
      "name": "UpdateDiscoverer",
      "output": {
        "shape": "UpdateDiscovererResponse"
      }
    },
    "UpdateRegistry": {
      "documentation": "<p>Updates a registry.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/registries/name/{registryName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateRegistryRequest"
      },
      "name": "UpdateRegistry",
      "output": {
        "shape": "UpdateRegistryResponse"
      }
    },
    "UpdateSchema": {
      "documentation": "<p>Updates the schema definition</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerErrorException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/registries/name/{registryName}/schemas/name/{schemaName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateSchemaRequest"
      },
      "name": "UpdateSchema",
      "output": {
        "shape": "UpdateSchemaResponse"
      }
    }
  },
  "shapes": {
    "BadRequestException": {
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "Body": {
      "type": "blob"
    },
    "CodeBindingOutput": {
      "members": {
        "CreationDate": {
          "documentation": "<p>The time and date that the code binding was created.</p>",
          "shape": "__timestampIso8601"
        },
        "LastModified": {
          "documentation": "<p>The date and time that code bindings were modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema.</p>",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of code binding generation.</p>",
          "shape": "CodeGenerationStatus"
        }
      },
      "type": "structure"
    },
    "CodeGenerationStatus": {
      "enum": [
        "CREATE_IN_PROGRESS",
        "CREATE_COMPLETE",
        "CREATE_FAILED"
      ],
      "type": "string"
    },
    "ConflictException": {
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "CreateDiscovererInput": {
      "members": {
        "Description": {
          "documentation": "<p>A description for the discoverer.</p>",
          "shape": "__stringMin0Max256"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__stringMin20Max1600"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "SourceArn"
      ],
      "type": "structure"
    },
    "CreateDiscovererRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description for the discoverer.</p>",
          "shape": "__stringMin0Max256"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__stringMin20Max1600"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "SourceArn"
      ],
      "type": "structure"
    },
    "CreateDiscovererResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererArn": {
          "documentation": "<p>The ARN of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateRegistryInput": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the registry to be created.</p>",
          "shape": "__stringMin0Max256"
        },
        "Tags": {
          "documentation": "<p>Tags to associate with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateRegistryRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the registry to be created.</p>",
          "shape": "__stringMin0Max256"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags to associate with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "RegistryName"
      ],
      "type": "structure"
    },
    "CreateRegistryResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry.</p>",
          "shape": "__string"
        },
        "RegistryArn": {
          "documentation": "<p>The ARN of the registry.</p>",
          "shape": "__string"
        },
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateSchemaInput": {
      "members": {
        "Content": {
          "shape": "__stringMin1Max100000"
        },
        "Description": {
          "documentation": "<p>A description of the schema.</p>",
          "shape": "__stringMin0Max256"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the schema.</p>",
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "shape": "Type"
        }
      },
      "required": [
        "Type",
        "Content"
      ],
      "type": "structure"
    },
    "CreateSchemaRequest": {
      "members": {
        "Content": {
          "shape": "__stringMin1Max100000"
        },
        "Description": {
          "documentation": "<p>A description of the schema.</p>",
          "shape": "__stringMin0Max256"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the schema.</p>",
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "shape": "Type"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName",
        "Type",
        "Content"
      ],
      "type": "structure"
    },
    "CreateSchemaResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__string"
        },
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "documentation": "<p>The type of the schema.</p>",
          "shape": "__string"
        },
        "VersionCreatedDate": {
          "documentation": "<p>The date the schema version was created.</p>",
          "shape": "__timestampIso8601"
        }
      },
      "type": "structure"
    },
    "DeleteDiscovererRequest": {
      "members": {
        "DiscovererId": {
          "location": "uri",
          "locationName": "discovererId",
          "shape": "__string"
        }
      },
      "required": [
        "DiscovererId"
      ],
      "type": "structure"
    },
    "DeleteRegistryRequest": {
      "members": {
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName"
      ],
      "type": "structure"
    },
    "DeleteSchemaRequest": {
      "members": {
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName"
      ],
      "type": "structure"
    },
    "DeleteSchemaVersionRequest": {
      "members": {
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "SchemaVersion": {
          "location": "uri",
          "locationName": "schemaVersion",
          "shape": "__string"
        }
      },
      "required": [
        "SchemaVersion",
        "RegistryName",
        "SchemaName"
      ],
      "type": "structure"
    },
    "DescribeCodeBindingRequest": {
      "members": {
        "Language": {
          "location": "uri",
          "locationName": "language",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "SchemaVersion": {
          "location": "querystring",
          "locationName": "schemaVersion",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName",
        "Language"
      ],
      "type": "structure"
    },
    "DescribeCodeBindingResponse": {
      "members": {
        "CreationDate": {
          "documentation": "<p>The time and date that the code binding was created.</p>",
          "shape": "__timestampIso8601"
        },
        "LastModified": {
          "documentation": "<p>The date and time that code bindings were modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema.</p>",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of code binding generation.</p>",
          "shape": "CodeGenerationStatus"
        }
      },
      "type": "structure"
    },
    "DescribeDiscovererRequest": {
      "members": {
        "DiscovererId": {
          "location": "uri",
          "locationName": "discovererId",
          "shape": "__string"
        }
      },
      "required": [
        "DiscovererId"
      ],
      "type": "structure"
    },
    "DescribeDiscovererResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererArn": {
          "documentation": "<p>The ARN of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "DescribeRegistryRequest": {
      "members": {
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName"
      ],
      "type": "structure"
    },
    "DescribeRegistryResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry.</p>",
          "shape": "__string"
        },
        "RegistryArn": {
          "documentation": "<p>The ARN of the registry.</p>",
          "shape": "__string"
        },
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "DescribeSchemaOutput": {
      "members": {
        "Content": {
          "shape": "__string"
        },
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__string"
        },
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "documentation": "<p>The type of the schema.</p>",
          "shape": "__string"
        },
        "VersionCreatedDate": {
          "documentation": "<p>The date the schema version was created.</p>",
          "shape": "__timestampIso8601"
        }
      },
      "type": "structure"
    },
    "DescribeSchemaRequest": {
      "members": {
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "SchemaVersion": {
          "location": "querystring",
          "locationName": "schemaVersion",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName"
      ],
      "type": "structure"
    },
    "DescribeSchemaResponse": {
      "members": {
        "Content": {
          "shape": "__string"
        },
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__string"
        },
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "documentation": "<p>The type of the schema.</p>",
          "shape": "__string"
        },
        "VersionCreatedDate": {
          "documentation": "<p>The date the schema version was created.</p>",
          "shape": "__timestampIso8601"
        }
      },
      "type": "structure"
    },
    "DiscovererOutput": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererArn": {
          "documentation": "<p>The ARN of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "DiscovererState": {
      "enum": [
        "STARTED",
        "STOPPED"
      ],
      "type": "string"
    },
    "DiscovererStateOutput": {
      "members": {
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        }
      },
      "type": "structure"
    },
    "DiscovererSummary": {
      "members": {
        "DiscovererArn": {
          "documentation": "<p>The ARN of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__string"
        },
        "State": {
          "shape": "DiscovererState"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ErrorOutput": {
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "ForbiddenException": {
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "GetCodeBindingSourceOutput": {
      "type": "string"
    },
    "GetCodeBindingSourceRequest": {
      "members": {
        "Language": {
          "location": "uri",
          "locationName": "language",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "SchemaVersion": {
          "location": "querystring",
          "locationName": "schemaVersion",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName",
        "Language"
      ],
      "type": "structure"
    },
    "GetCodeBindingSourceResponse": {
      "members": {
        "Body": {
          "shape": "Body"
        }
      },
      "payload": "Body",
      "type": "structure"
    },
    "GetDiscoveredSchemaInput": {
      "members": {
        "Events": {
          "documentation": "<p>An array of strings that</p>",
          "shape": "__listOfGetDiscoveredSchemaVersionItemInput"
        },
        "Type": {
          "documentation": "<p>The type of event.</p>",
          "shape": "Type"
        }
      },
      "required": [
        "Type",
        "Events"
      ],
      "type": "structure"
    },
    "GetDiscoveredSchemaOutput": {
      "members": {
        "Content": {
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetDiscoveredSchemaRequest": {
      "members": {
        "Events": {
          "documentation": "<p>An array of strings that</p>",
          "shape": "__listOfGetDiscoveredSchemaVersionItemInput"
        },
        "Type": {
          "documentation": "<p>The type of event.</p>",
          "shape": "Type"
        }
      },
      "required": [
        "Type",
        "Events"
      ],
      "type": "structure"
    },
    "GetDiscoveredSchemaResponse": {
      "members": {
        "Content": {
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetDiscoveredSchemaVersionItemInput": {
      "max": 100000,
      "min": 1,
      "type": "string"
    },
    "GoneException": {
      "error": {
        "httpStatusCode": 410
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "InternalServerErrorException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "Limit": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListDiscoverersOutput": {
      "members": {
        "Discoverers": {
          "documentation": "<p>An array of DiscovererSummary information.</p>",
          "shape": "__listOfDiscovererSummary"
        },
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListDiscoverersRequest": {
      "members": {
        "DiscovererIdPrefix": {
          "location": "querystring",
          "locationName": "discovererIdPrefix",
          "shape": "__string"
        },
        "Limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "__integer"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "SourceArnPrefix": {
          "location": "querystring",
          "locationName": "sourceArnPrefix",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListDiscoverersResponse": {
      "members": {
        "Discoverers": {
          "documentation": "<p>An array of DiscovererSummary information.</p>",
          "shape": "__listOfDiscovererSummary"
        },
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListRegistriesOutput": {
      "documentation": "<p>List the registries.</p>",
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Registries": {
          "documentation": "<p>An array of registry summaries.</p>",
          "shape": "__listOfRegistrySummary"
        }
      },
      "type": "structure"
    },
    "ListRegistriesRequest": {
      "members": {
        "Limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "__integer"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RegistryNamePrefix": {
          "location": "querystring",
          "locationName": "registryNamePrefix",
          "shape": "__string"
        },
        "Scope": {
          "location": "querystring",
          "locationName": "scope",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListRegistriesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Registries": {
          "documentation": "<p>An array of registry summaries.</p>",
          "shape": "__listOfRegistrySummary"
        }
      },
      "type": "structure"
    },
    "ListSchemaVersionsOutput": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "SchemaVersions": {
          "documentation": "<p>An array of schema version summaries.</p>",
          "shape": "__listOfSchemaVersionSummary"
        }
      },
      "type": "structure"
    },
    "ListSchemaVersionsRequest": {
      "members": {
        "Limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "__integer"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName"
      ],
      "type": "structure"
    },
    "ListSchemaVersionsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "SchemaVersions": {
          "documentation": "<p>An array of schema version summaries.</p>",
          "shape": "__listOfSchemaVersionSummary"
        }
      },
      "type": "structure"
    },
    "ListSchemasOutput": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Schemas": {
          "documentation": "<p>An array of schema summaries.</p>",
          "shape": "__listOfSchemaSummary"
        }
      },
      "type": "structure"
    },
    "ListSchemasRequest": {
      "members": {
        "Limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "__integer"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaNamePrefix": {
          "location": "querystring",
          "locationName": "schemaNamePrefix",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName"
      ],
      "type": "structure"
    },
    "ListSchemasResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Schemas": {
          "documentation": "<p>An array of schema summaries.</p>",
          "shape": "__listOfSchemaSummary"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "shape": "Tags"
        }
      },
      "required": [
        "Tags"
      ],
      "type": "structure"
    },
    "LockServiceLinkedRoleInput": {
      "members": {
        "RoleArn": {
          "shape": "__stringMin1Max1600"
        },
        "Timeout": {
          "shape": "__integerMin1Max29000"
        }
      },
      "required": [
        "Timeout",
        "RoleArn"
      ],
      "type": "structure"
    },
    "LockServiceLinkedRoleOutput": {
      "members": {
        "CanBeDeleted": {
          "shape": "__boolean"
        },
        "ReasonOfFailure": {
          "shape": "__stringMin1Max1600"
        },
        "RelatedResources": {
          "shape": "__listOfDiscovererSummary"
        }
      },
      "type": "structure"
    },
    "LockServiceLinkedRoleRequest": {
      "members": {
        "RoleArn": {
          "shape": "__stringMin1Max1600"
        },
        "Timeout": {
          "shape": "__integerMin1Max29000"
        }
      },
      "required": [
        "Timeout",
        "RoleArn"
      ],
      "type": "structure"
    },
    "LockServiceLinkedRoleResponse": {
      "members": {
        "CanBeDeleted": {
          "shape": "__boolean"
        },
        "ReasonOfFailure": {
          "shape": "__stringMin1Max1600"
        },
        "RelatedResources": {
          "shape": "__listOfDiscovererSummary"
        }
      },
      "type": "structure"
    },
    "NotFoundException": {
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "PutCodeBindingRequest": {
      "members": {
        "Language": {
          "location": "uri",
          "locationName": "language",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "SchemaVersion": {
          "location": "querystring",
          "locationName": "schemaVersion",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName",
        "Language"
      ],
      "type": "structure"
    },
    "PutCodeBindingResponse": {
      "members": {
        "CreationDate": {
          "documentation": "<p>The time and date that the code binding was created.</p>",
          "shape": "__timestampIso8601"
        },
        "LastModified": {
          "documentation": "<p>The date and time that code bindings were modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema.</p>",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of code binding generation.</p>",
          "shape": "CodeGenerationStatus"
        }
      },
      "type": "structure"
    },
    "RegistryOutput": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry.</p>",
          "shape": "__string"
        },
        "RegistryArn": {
          "documentation": "<p>The ARN of the registry.</p>",
          "shape": "__string"
        },
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "RegistrySummary": {
      "members": {
        "RegistryArn": {
          "documentation": "<p>The ARN of the registry.</p>",
          "shape": "__string"
        },
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "SchemaOutput": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__string"
        },
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "documentation": "<p>The type of the schema.</p>",
          "shape": "__string"
        },
        "VersionCreatedDate": {
          "documentation": "<p>The date the schema version was created.</p>",
          "shape": "__timestampIso8601"
        }
      },
      "type": "structure"
    },
    "SchemaSummary": {
      "documentation": "<p>A summary of schema details.</p>",
      "members": {
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the schema.</p>",
          "locationName": "tags",
          "shape": "Tags"
        },
        "VersionCount": {
          "documentation": "<p>The number of versions available for the schema.</p>",
          "shape": "__long"
        }
      },
      "type": "structure"
    },
    "SchemaVersionSummary": {
      "members": {
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema version.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema.</p>",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "SearchSchemaSummary": {
      "members": {
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersions": {
          "documentation": "<p>An array of schema version summaries.</p>",
          "shape": "__listOfSearchSchemaVersionSummary"
        }
      },
      "type": "structure"
    },
    "SearchSchemaVersionSummary": {
      "members": {
        "CreatedDate": {
          "shape": "__timestampIso8601"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "SearchSchemasOutput": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Schemas": {
          "documentation": "<p>An array of SearchSchemaSummary information.</p>",
          "shape": "__listOfSearchSchemaSummary"
        }
      },
      "type": "structure"
    },
    "SearchSchemasRequest": {
      "members": {
        "Keywords": {
          "location": "querystring",
          "locationName": "keywords",
          "shape": "__string"
        },
        "Limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "__integer"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName",
        "Keywords"
      ],
      "type": "structure"
    },
    "SearchSchemasResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.</p>",
          "shape": "__string"
        },
        "Schemas": {
          "documentation": "<p>An array of SearchSchemaSummary information.</p>",
          "shape": "__listOfSearchSchemaSummary"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "StartDiscovererRequest": {
      "members": {
        "DiscovererId": {
          "location": "uri",
          "locationName": "discovererId",
          "shape": "__string"
        }
      },
      "required": [
        "DiscovererId"
      ],
      "type": "structure"
    },
    "StartDiscovererResponse": {
      "members": {
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        }
      },
      "type": "structure"
    },
    "StopDiscovererRequest": {
      "members": {
        "DiscovererId": {
          "location": "uri",
          "locationName": "discovererId",
          "shape": "__string"
        }
      },
      "required": [
        "DiscovererId"
      ],
      "type": "structure"
    },
    "StopDiscovererResponse": {
      "members": {
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        }
      },
      "type": "structure"
    },
    "TagResourceInput": {
      "members": {
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "Tags": {
      "documentation": "<p>Key-value pairs associated with a resource.</p>",
      "key": {
        "shape": "__string"
      },
      "type": "map",
      "value": {
        "shape": "__string"
      }
    },
    "TooManyRequestsException": {
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "Type": {
      "enum": [
        "OpenApi3"
      ],
      "type": "string"
    },
    "UnauthorizedException": {
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>The error code.</p>",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The message string of the error output.</p>",
          "shape": "__string"
        }
      },
      "required": [
        "Message",
        "Code"
      ],
      "type": "structure"
    },
    "UnlockServiceLinkedRoleInput": {
      "members": {
        "RoleArn": {
          "shape": "__stringMin1Max1600"
        }
      },
      "required": [
        "RoleArn"
      ],
      "type": "structure"
    },
    "UnlockServiceLinkedRoleRequest": {
      "members": {
        "RoleArn": {
          "shape": "__stringMin1Max1600"
        }
      },
      "required": [
        "RoleArn"
      ],
      "type": "structure"
    },
    "UnlockServiceLinkedRoleResponse": {
      "members": {},
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "TagKeys": {
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "TagKeys",
        "ResourceArn"
      ],
      "type": "structure"
    },
    "UpdateDiscovererInput": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer to update.</p>",
          "shape": "__stringMin0Max256"
        }
      },
      "type": "structure"
    },
    "UpdateDiscovererRequest": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer to update.</p>",
          "shape": "__stringMin0Max256"
        },
        "DiscovererId": {
          "location": "uri",
          "locationName": "discovererId",
          "shape": "__string"
        }
      },
      "required": [
        "DiscovererId"
      ],
      "type": "structure"
    },
    "UpdateDiscovererResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererArn": {
          "documentation": "<p>The ARN of the discoverer.</p>",
          "shape": "__string"
        },
        "DiscovererId": {
          "documentation": "<p>The ID of the discoverer.</p>",
          "shape": "__string"
        },
        "SourceArn": {
          "documentation": "<p>The ARN of the event bus.</p>",
          "shape": "__string"
        },
        "State": {
          "documentation": "<p>The state of the discoverer.</p>",
          "shape": "DiscovererState"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the resource.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "UpdateRegistryInput": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry to update.</p>",
          "shape": "__stringMin0Max256"
        }
      },
      "type": "structure"
    },
    "UpdateRegistryRequest": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry to update.</p>",
          "shape": "__stringMin0Max256"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        }
      },
      "required": [
        "RegistryName"
      ],
      "type": "structure"
    },
    "UpdateRegistryResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the registry.</p>",
          "shape": "__string"
        },
        "RegistryArn": {
          "documentation": "<p>The ARN of the registry.</p>",
          "shape": "__string"
        },
        "RegistryName": {
          "documentation": "<p>The name of the registry.</p>",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the registry.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "UpdateSchemaInput": {
      "members": {
        "ClientTokenId": {
          "documentation": "<p>The ID of the client token.</p>",
          "idempotencyToken": true,
          "shape": "__stringMin0Max36"
        },
        "Content": {
          "documentation": "<p>The source of the schema definition.</p>",
          "shape": "__stringMin1Max100000"
        },
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__stringMin0Max256"
        },
        "Type": {
          "documentation": "<p>The schema type for the events schema.</p>",
          "shape": "Type"
        }
      },
      "type": "structure"
    },
    "UpdateSchemaRequest": {
      "members": {
        "ClientTokenId": {
          "documentation": "<p>The ID of the client token.</p>",
          "idempotencyToken": true,
          "shape": "__stringMin0Max36"
        },
        "Content": {
          "documentation": "<p>The source of the schema definition.</p>",
          "shape": "__stringMin1Max100000"
        },
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__stringMin0Max256"
        },
        "RegistryName": {
          "location": "uri",
          "locationName": "registryName",
          "shape": "__string"
        },
        "SchemaName": {
          "location": "uri",
          "locationName": "schemaName",
          "shape": "__string"
        },
        "Type": {
          "documentation": "<p>The schema type for the events schema.</p>",
          "shape": "Type"
        }
      },
      "required": [
        "RegistryName",
        "SchemaName"
      ],
      "type": "structure"
    },
    "UpdateSchemaResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the schema.</p>",
          "shape": "__string"
        },
        "LastModified": {
          "documentation": "<p>The date and time that schema was modified.</p>",
          "shape": "__timestampIso8601"
        },
        "SchemaArn": {
          "documentation": "<p>The ARN of the schema.</p>",
          "shape": "__string"
        },
        "SchemaName": {
          "documentation": "<p>The name of the schema.</p>",
          "shape": "__string"
        },
        "SchemaVersion": {
          "documentation": "<p>The version number of the schema</p>",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        },
        "Type": {
          "documentation": "<p>The type of the schema.</p>",
          "shape": "__string"
        },
        "VersionCreatedDate": {
          "documentation": "<p>The date the schema version was created.</p>",
          "shape": "__timestampIso8601"
        }
      },
      "type": "structure"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "type": "double"
    },
    "__integer": {
      "type": "integer"
    },
    "__integerMin1Max29000": {
      "max": 29000,
      "min": 1,
      "type": "integer"
    },
    "__listOfDiscovererSummary": {
      "member": {
        "shape": "DiscovererSummary"
      },
      "type": "list"
    },
    "__listOfGetDiscoveredSchemaVersionItemInput": {
      "max": 10,
      "member": {
        "shape": "GetDiscoveredSchemaVersionItemInput"
      },
      "min": 1,
      "type": "list"
    },
    "__listOfRegistrySummary": {
      "member": {
        "shape": "RegistrySummary"
      },
      "type": "list"
    },
    "__listOfSchemaSummary": {
      "member": {
        "shape": "SchemaSummary"
      },
      "type": "list"
    },
    "__listOfSchemaVersionSummary": {
      "member": {
        "shape": "SchemaVersionSummary"
      },
      "type": "list"
    },
    "__listOfSearchSchemaSummary": {
      "member": {
        "shape": "SearchSchemaSummary"
      },
      "type": "list"
    },
    "__listOfSearchSchemaVersionSummary": {
      "member": {
        "shape": "SearchSchemaVersionSummary"
      },
      "type": "list"
    },
    "__listOf__string": {
      "member": {
        "shape": "__string"
      },
      "type": "list"
    },
    "__long": {
      "type": "long"
    },
    "__string": {
      "type": "string"
    },
    "__stringMin0Max256": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "__stringMin0Max36": {
      "max": 36,
      "min": 0,
      "type": "string"
    },
    "__stringMin1Max100000": {
      "max": 100000,
      "min": 1,
      "type": "string"
    },
    "__stringMin1Max1600": {
      "max": 1600,
      "min": 1,
      "type": "string"
    },
    "__stringMin20Max1600": {
      "max": 1600,
      "min": 20,
      "type": "string"
    },
    "__timestampIso8601": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "__timestampUnix": {
      "timestampFormat": "unixTimestamp",
      "type": "timestamp"
    }
  }
}
