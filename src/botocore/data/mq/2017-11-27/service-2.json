{
  "authorizers": {
    "authorization_strategy": {
      "name": "authorization_strategy",
      "placement": {
        "location": "header",
        "name": "Authorization"
      },
      "type": "provided"
    }
  },
  "documentation": "Amazon MQ is a managed message broker service for Apache ActiveMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.",
  "metadata": {
    "apiVersion": "2017-11-27",
    "endpointPrefix": "mq",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AmazonMQ",
    "serviceId": "mq",
    "signatureVersion": "v4",
    "signingName": "mq",
    "uid": "mq-2017-11-27"
  },
  "operations": {
    "CreateBroker": {
      "documentation": "Creates a broker. Note: This API is asynchronous.",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.",
          "shape": "UnauthorizedException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. This broker name already exists. Retry your request with another name.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/brokers",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBrokerRequest"
      },
      "name": "CreateBroker",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "CreateBrokerResponse"
      }
    },
    "CreateConfiguration": {
      "documentation": "Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. This configuration name already exists. Retry your request with another configuration name.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your input and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/configurations",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateConfigurationRequest"
      },
      "name": "CreateConfiguration",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "CreateConfigurationResponse"
      }
    },
    "CreateTags": {
      "documentation": "Add a tag to a resource.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "CreateTagsRequest"
      },
      "name": "CreateTags"
    },
    "CreateUser": {
      "documentation": "Creates an ActiveMQ user.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. Retrying your request might resolve the issue.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/brokers/{broker-id}/users/{username}",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateUserRequest"
      },
      "name": "CreateUser",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "CreateUserResponse"
      }
    },
    "DeleteBroker": {
      "documentation": "Deletes a broker. Note: This API is asynchronous.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/brokers/{broker-id}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteBrokerRequest"
      },
      "name": "DeleteBroker",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DeleteBrokerResponse"
      }
    },
    "DeleteTags": {
      "documentation": "Removes a tag from a resource.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteTagsRequest"
      },
      "name": "DeleteTags"
    },
    "DeleteUser": {
      "documentation": "Deletes an ActiveMQ user.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/brokers/{broker-id}/users/{username}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteUserRequest"
      },
      "name": "DeleteUser",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DeleteUserResponse"
      }
    },
    "DescribeBroker": {
      "documentation": "Returns information about the specified broker.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/brokers/{broker-id}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeBrokerRequest"
      },
      "name": "DescribeBroker",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeBrokerResponse"
      }
    },
    "DescribeBrokerEngineTypes": {
      "documentation": "Describe available engine types and versions.",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/broker-engine-types",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeBrokerEngineTypesRequest"
      },
      "name": "DescribeBrokerEngineTypes",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeBrokerEngineTypesResponse"
      }
    },
    "DescribeBrokerInstanceOptions": {
      "documentation": "Describe available broker instance options.",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/broker-instance-options",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeBrokerInstanceOptionsRequest"
      },
      "name": "DescribeBrokerInstanceOptions",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeBrokerInstanceOptionsResponse"
      }
    },
    "DescribeConfiguration": {
      "documentation": "Returns information about the specified configuration.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/configurations/{configuration-id}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeConfigurationRequest"
      },
      "name": "DescribeConfiguration",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeConfigurationResponse"
      }
    },
    "DescribeConfigurationRevision": {
      "documentation": "Returns the specified configuration revision for the specified configuration.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/configurations/{configuration-id}/revisions/{configuration-revision}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeConfigurationRevisionRequest"
      },
      "name": "DescribeConfigurationRevision",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeConfigurationRevisionResponse"
      }
    },
    "DescribeUser": {
      "documentation": "Returns information about an ActiveMQ user.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/brokers/{broker-id}/users/{username}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeUserRequest"
      },
      "name": "DescribeUser",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "DescribeUserResponse"
      }
    },
    "ListBrokers": {
      "documentation": "Returns a list of all brokers.",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/brokers",
        "responseCode": 200
      },
      "input": {
        "shape": "ListBrokersRequest"
      },
      "name": "ListBrokers",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "ListBrokersResponse"
      }
    },
    "ListConfigurationRevisions": {
      "documentation": "Returns a list of all revisions for the specified configuration.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/configurations/{configuration-id}/revisions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListConfigurationRevisionsRequest"
      },
      "name": "ListConfigurationRevisions",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "ListConfigurationRevisionsResponse"
      }
    },
    "ListConfigurations": {
      "documentation": "Returns a list of all configurations.",
      "errors": [
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/configurations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListConfigurationsRequest"
      },
      "name": "ListConfigurations",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "ListConfigurationsResponse"
      }
    },
    "ListTags": {
      "documentation": "Lists tags for a resource.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsRequest"
      },
      "name": "ListTags",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "ListTagsResponse"
      }
    },
    "ListUsers": {
      "documentation": "Returns a list of all ActiveMQ users.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/brokers/{broker-id}/users",
        "responseCode": 200
      },
      "input": {
        "shape": "ListUsersRequest"
      },
      "name": "ListUsers",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "ListUsersResponse"
      }
    },
    "RebootBroker": {
      "documentation": "Reboots a broker. Note: This API is asynchronous.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/brokers/{broker-id}/reboot",
        "responseCode": 200
      },
      "input": {
        "shape": "RebootBrokerRequest"
      },
      "name": "RebootBroker",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "RebootBrokerResponse"
      }
    },
    "UpdateBroker": {
      "documentation": "Adds a pending configuration change to a broker.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. Concurrent broker update detected. Retrying your request might resolve the issue.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/brokers/{broker-id}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBrokerRequest"
      },
      "name": "UpdateBroker",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "UpdateBrokerResponse"
      }
    },
    "UpdateConfiguration": {
      "documentation": "Updates the specified configuration.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. Concurrent update to configuration. Retry to create a new revision.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your input and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/configurations/{configuration-id}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateConfigurationRequest"
      },
      "name": "UpdateConfiguration",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "UpdateConfigurationResponse"
      }
    },
    "UpdateUser": {
      "documentation": "Updates the information for an ActiveMQ user.",
      "errors": [
        {
          "documentation": "HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.",
          "shape": "NotFoundException"
        },
        {
          "documentation": "HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.",
          "shape": "BadRequestException"
        },
        {
          "documentation": "HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.",
          "shape": "InternalServerErrorException"
        },
        {
          "documentation": "HTTP Status Code 409: Conflict. Retrying your request might resolve the issue.",
          "shape": "ConflictException"
        },
        {
          "documentation": "HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/brokers/{broker-id}/users/{username}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateUserRequest"
      },
      "name": "UpdateUser",
      "output": {
        "documentation": "HTTP Status Code 200: OK.",
        "shape": "UpdateUserResponse"
      }
    }
  },
  "shapes": {
    "AvailabilityZone": {
      "documentation": "Name of the availability zone.",
      "members": {
        "Name": {
          "documentation": "Id for the availability zone.",
          "locationName": "name",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BadRequestException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BrokerEngineType": {
      "documentation": "Types of broker engines.",
      "members": {
        "EngineType": {
          "documentation": "The type of broker engine.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersions": {
          "documentation": "The list of engine versions.",
          "locationName": "engineVersions",
          "shape": "__listOfEngineVersion"
        }
      },
      "type": "structure"
    },
    "BrokerEngineTypeOutput": {
      "documentation": "Returns a list of broker engine type.",
      "members": {
        "BrokerEngineTypes": {
          "documentation": "List of available engine types and versions.",
          "locationName": "brokerEngineTypes",
          "shape": "__listOfBrokerEngineType"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of engine types that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BrokerInstance": {
      "documentation": "Returns information about all brokers.",
      "members": {
        "ConsoleURL": {
          "documentation": "The URL of the broker's ActiveMQ Web Console.",
          "locationName": "consoleURL",
          "shape": "__string"
        },
        "Endpoints": {
          "documentation": "The broker's wire-level protocol endpoints.",
          "locationName": "endpoints",
          "shape": "__listOf__string"
        },
        "IpAddress": {
          "documentation": "The IP address of the Elastic Network Interface (ENI) attached to the broker.",
          "locationName": "ipAddress",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BrokerInstanceOption": {
      "documentation": "Option for host instance type.",
      "members": {
        "AvailabilityZones": {
          "documentation": "The list of available az.",
          "locationName": "availabilityZones",
          "shape": "__listOfAvailabilityZone"
        },
        "EngineType": {
          "documentation": "The type of broker engine.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "HostInstanceType": {
          "documentation": "The type of broker instance.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "StorageType": {
          "documentation": "The broker's storage type.",
          "locationName": "storageType",
          "shape": "BrokerStorageType"
        },
        "SupportedDeploymentModes": {
          "documentation": "The list of supported deployment modes.",
          "locationName": "supportedDeploymentModes",
          "shape": "__listOfDeploymentMode"
        },
        "SupportedEngineVersions": {
          "documentation": "The list of supported engine versions.",
          "locationName": "supportedEngineVersions",
          "shape": "__listOf__string"
        }
      },
      "type": "structure"
    },
    "BrokerInstanceOptionsOutput": {
      "documentation": "Returns a list of broker instance options.",
      "members": {
        "BrokerInstanceOptions": {
          "documentation": "List of available broker instance options.",
          "locationName": "brokerInstanceOptions",
          "shape": "__listOfBrokerInstanceOption"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of instance options that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BrokerState": {
      "documentation": "The status of the broker.",
      "enum": [
        "CREATION_IN_PROGRESS",
        "CREATION_FAILED",
        "DELETION_IN_PROGRESS",
        "RUNNING",
        "REBOOT_IN_PROGRESS"
      ],
      "type": "string"
    },
    "BrokerStorageType": {
      "documentation": "The storage type of the broker.",
      "enum": [
        "EBS",
        "EFS"
      ],
      "type": "string"
    },
    "BrokerSummary": {
      "documentation": "The Amazon Resource Name (ARN) of the broker.",
      "members": {
        "BrokerArn": {
          "documentation": "The Amazon Resource Name (ARN) of the broker.",
          "locationName": "brokerArn",
          "shape": "__string"
        },
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "BrokerName": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "locationName": "brokerName",
          "shape": "__string"
        },
        "BrokerState": {
          "documentation": "The status of the broker.",
          "locationName": "brokerState",
          "shape": "BrokerState"
        },
        "Created": {
          "documentation": "The time when the broker was created.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "DeploymentMode": {
          "documentation": "Required. The deployment mode of the broker.",
          "locationName": "deploymentMode",
          "shape": "DeploymentMode"
        },
        "HostInstanceType": {
          "documentation": "The broker's instance type.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ChangeType": {
      "documentation": "The type of change pending for the ActiveMQ user.",
      "enum": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "Configuration": {
      "documentation": "Returns information about all configurations.",
      "members": {
        "Arn": {
          "documentation": "Required. The ARN of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration revision.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Description": {
          "documentation": "Required. The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "Required. The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "The list of all tags associated with this configuration.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "ConfigurationId": {
      "documentation": "A list of information about the configuration.",
      "members": {
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "Revision": {
          "documentation": "The revision number of the configuration.",
          "locationName": "revision",
          "shape": "__integer"
        }
      },
      "type": "structure"
    },
    "ConfigurationRevision": {
      "documentation": "Returns information about the specified configuration revision.",
      "members": {
        "Created": {
          "documentation": "Required. The date and time of the configuration revision.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Description": {
          "documentation": "The description of the configuration revision.",
          "locationName": "description",
          "shape": "__string"
        },
        "Revision": {
          "documentation": "Required. The revision number of the configuration.",
          "locationName": "revision",
          "shape": "__integer"
        }
      },
      "type": "structure"
    },
    "Configurations": {
      "documentation": "Broker configuration information",
      "members": {
        "Current": {
          "documentation": "The current configuration of the broker.",
          "locationName": "current",
          "shape": "ConfigurationId"
        },
        "History": {
          "documentation": "The history of configurations applied to the broker.",
          "locationName": "history",
          "shape": "__listOfConfigurationId"
        },
        "Pending": {
          "documentation": "The pending configuration of the broker.",
          "locationName": "pending",
          "shape": "ConfigurationId"
        }
      },
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBrokerInput": {
      "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerName": {
          "documentation": "Required. The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "locationName": "brokerName",
          "shape": "__string"
        },
        "Configuration": {
          "documentation": "A list of information about the configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "CreatorRequestId": {
          "documentation": "The unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn't require idempotency.",
          "idempotencyToken": true,
          "locationName": "creatorRequestId",
          "shape": "__string"
        },
        "DeploymentMode": {
          "documentation": "Required. The deployment mode of the broker.",
          "locationName": "deploymentMode",
          "shape": "DeploymentMode"
        },
        "EncryptionOptions": {
          "documentation": "Encryption options for the broker.",
          "locationName": "encryptionOptions",
          "shape": "EncryptionOptions"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "Required. The broker's instance type.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "Enables Amazon CloudWatch logging for brokers.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "MaintenanceWindowStartTime": {
          "documentation": "The parameters that determine the WeeklyStartTime.",
          "locationName": "maintenanceWindowStartTime",
          "shape": "WeeklyStartTime"
        },
        "PubliclyAccessible": {
          "documentation": "Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.",
          "locationName": "publiclyAccessible",
          "shape": "__boolean"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        },
        "StorageType": {
          "documentation": "The broker's storage type.",
          "locationName": "storageType",
          "shape": "BrokerStorageType"
        },
        "SubnetIds": {
          "documentation": "The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
          "locationName": "subnetIds",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "Create tags when creating the broker.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        },
        "Users": {
          "documentation": "Required. The list of ActiveMQ users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "users",
          "shape": "__listOfUser"
        }
      },
      "type": "structure"
    },
    "CreateBrokerOutput": {
      "documentation": "Returns information about the created broker.",
      "members": {
        "BrokerArn": {
          "documentation": "The Amazon Resource Name (ARN) of the broker.",
          "locationName": "brokerArn",
          "shape": "__string"
        },
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBrokerRequest": {
      "documentation": "Creates a broker using the specified properties.",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerName": {
          "documentation": "Required. The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "locationName": "brokerName",
          "shape": "__string"
        },
        "Configuration": {
          "documentation": "A list of information about the configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "CreatorRequestId": {
          "documentation": "The unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn't require idempotency.",
          "idempotencyToken": true,
          "locationName": "creatorRequestId",
          "shape": "__string"
        },
        "DeploymentMode": {
          "documentation": "Required. The deployment mode of the broker.",
          "locationName": "deploymentMode",
          "shape": "DeploymentMode"
        },
        "EncryptionOptions": {
          "documentation": "Encryption options for the broker.",
          "locationName": "encryptionOptions",
          "shape": "EncryptionOptions"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "Required. The broker's instance type.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "Enables Amazon CloudWatch logging for brokers.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "MaintenanceWindowStartTime": {
          "documentation": "The parameters that determine the WeeklyStartTime.",
          "locationName": "maintenanceWindowStartTime",
          "shape": "WeeklyStartTime"
        },
        "PubliclyAccessible": {
          "documentation": "Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.",
          "locationName": "publiclyAccessible",
          "shape": "__boolean"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        },
        "StorageType": {
          "documentation": "The broker's storage type.",
          "locationName": "storageType",
          "shape": "BrokerStorageType"
        },
        "SubnetIds": {
          "documentation": "The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
          "locationName": "subnetIds",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "Create tags when creating the broker.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        },
        "Users": {
          "documentation": "Required. The list of ActiveMQ users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "users",
          "shape": "__listOfUser"
        }
      },
      "type": "structure"
    },
    "CreateBrokerResponse": {
      "members": {
        "BrokerArn": {
          "documentation": "The Amazon Resource Name (ARN) of the broker.",
          "locationName": "brokerArn",
          "shape": "__string"
        },
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateConfigurationInput": {
      "documentation": "Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).",
      "members": {
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "Create tags when creating the configuration.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "CreateConfigurationOutput": {
      "documentation": "Returns information about the created configuration.",
      "members": {
        "Arn": {
          "documentation": "Required. The Amazon Resource Name (ARN) of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateConfigurationRequest": {
      "documentation": "Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).",
      "members": {
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "Create tags when creating the configuration.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "CreateConfigurationResponse": {
      "members": {
        "Arn": {
          "documentation": "Required. The Amazon Resource Name (ARN) of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateTagsRequest": {
      "documentation": "A map of the key-value pairs for the resource tag.",
      "members": {
        "ResourceArn": {
          "documentation": "The Amazon Resource Name (ARN) of the resource tag.",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "The key-value pair for the resource tag.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "CreateUserInput": {
      "documentation": "Creates a new ActiveMQ user.",
      "members": {
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Password": {
          "documentation": "Required. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.",
          "locationName": "password",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateUserRequest": {
      "documentation": "Creates a new ActiveMQ user.",
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Password": {
          "documentation": "Required. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.",
          "locationName": "password",
          "shape": "__string"
        },
        "Username": {
          "documentation": "The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "location": "uri",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "required": [
        "Username",
        "BrokerId"
      ],
      "type": "structure"
    },
    "CreateUserResponse": {
      "members": {},
      "type": "structure"
    },
    "DayOfWeek": {
      "enum": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ],
      "type": "string"
    },
    "DeleteBrokerOutput": {
      "documentation": "Returns information about the deleted broker.",
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteBrokerRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        }
      },
      "required": [
        "BrokerId"
      ],
      "type": "structure"
    },
    "DeleteBrokerResponse": {
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteTagsRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "The Amazon Resource Name (ARN) of the resource tag.",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "TagKeys": {
          "documentation": "An array of tag keys to delete",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "TagKeys",
        "ResourceArn"
      ],
      "type": "structure"
    },
    "DeleteUserRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "Username": {
          "documentation": "The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "location": "uri",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "required": [
        "Username",
        "BrokerId"
      ],
      "type": "structure"
    },
    "DeleteUserResponse": {
      "members": {},
      "type": "structure"
    },
    "DeploymentMode": {
      "documentation": "The deployment mode of the broker.",
      "enum": [
        "SINGLE_INSTANCE",
        "ACTIVE_STANDBY_MULTI_AZ"
      ],
      "type": "string"
    },
    "DescribeBrokerEngineTypesRequest": {
      "members": {
        "EngineType": {
          "documentation": "Filter response by engine type.",
          "location": "querystring",
          "locationName": "engineType",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of engine types that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeBrokerEngineTypesResponse": {
      "members": {
        "BrokerEngineTypes": {
          "documentation": "List of available engine types and versions.",
          "locationName": "brokerEngineTypes",
          "shape": "__listOfBrokerEngineType"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of engine types that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeBrokerInstanceOptionsRequest": {
      "members": {
        "EngineType": {
          "documentation": "Filter response by engine type.",
          "location": "querystring",
          "locationName": "engineType",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "Filter response by host instance type.",
          "location": "querystring",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of instance options that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "StorageType": {
          "documentation": "Filter response by storage type.",
          "location": "querystring",
          "locationName": "storageType",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeBrokerInstanceOptionsResponse": {
      "members": {
        "BrokerInstanceOptions": {
          "documentation": "List of available broker instance options.",
          "locationName": "brokerInstanceOptions",
          "shape": "__listOfBrokerInstanceOption"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of instance options that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeBrokerOutput": {
      "documentation": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerArn": {
          "documentation": "The Amazon Resource Name (ARN) of the broker.",
          "locationName": "brokerArn",
          "shape": "__string"
        },
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "BrokerInstances": {
          "documentation": "A list of information about allocated brokers.",
          "locationName": "brokerInstances",
          "shape": "__listOfBrokerInstance"
        },
        "BrokerName": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "locationName": "brokerName",
          "shape": "__string"
        },
        "BrokerState": {
          "documentation": "The status of the broker.",
          "locationName": "brokerState",
          "shape": "BrokerState"
        },
        "Configurations": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "configurations",
          "shape": "Configurations"
        },
        "Created": {
          "documentation": "The time when the broker was created.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "DeploymentMode": {
          "documentation": "Required. The deployment mode of the broker.",
          "locationName": "deploymentMode",
          "shape": "DeploymentMode"
        },
        "EncryptionOptions": {
          "documentation": "Encryption options for the broker.",
          "locationName": "encryptionOptions",
          "shape": "EncryptionOptions"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The broker's instance type.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "The list of information about logs currently enabled and pending to be deployed for the specified broker.",
          "locationName": "logs",
          "shape": "LogsSummary"
        },
        "MaintenanceWindowStartTime": {
          "documentation": "The parameters that determine the WeeklyStartTime.",
          "locationName": "maintenanceWindowStartTime",
          "shape": "WeeklyStartTime"
        },
        "PendingEngineVersion": {
          "documentation": "The version of the broker engine to upgrade to. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "pendingEngineVersion",
          "shape": "__string"
        },
        "PendingHostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "pendingHostInstanceType",
          "shape": "__string"
        },
        "PendingSecurityGroups": {
          "documentation": "The list of pending security groups to authorize connections to brokers.",
          "locationName": "pendingSecurityGroups",
          "shape": "__listOf__string"
        },
        "PubliclyAccessible": {
          "documentation": "Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.",
          "locationName": "publiclyAccessible",
          "shape": "__boolean"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        },
        "StorageType": {
          "documentation": "The broker's storage type.",
          "locationName": "storageType",
          "shape": "BrokerStorageType"
        },
        "SubnetIds": {
          "documentation": "The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
          "locationName": "subnetIds",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "The list of all tags associated with this broker.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        },
        "Users": {
          "documentation": "The list of all ActiveMQ usernames for the specified broker.",
          "locationName": "users",
          "shape": "__listOfUserSummary"
        }
      },
      "type": "structure"
    },
    "DescribeBrokerRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        }
      },
      "required": [
        "BrokerId"
      ],
      "type": "structure"
    },
    "DescribeBrokerResponse": {
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerArn": {
          "documentation": "The Amazon Resource Name (ARN) of the broker.",
          "locationName": "brokerArn",
          "shape": "__string"
        },
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "BrokerInstances": {
          "documentation": "A list of information about allocated brokers.",
          "locationName": "brokerInstances",
          "shape": "__listOfBrokerInstance"
        },
        "BrokerName": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "locationName": "brokerName",
          "shape": "__string"
        },
        "BrokerState": {
          "documentation": "The status of the broker.",
          "locationName": "brokerState",
          "shape": "BrokerState"
        },
        "Configurations": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "configurations",
          "shape": "Configurations"
        },
        "Created": {
          "documentation": "The time when the broker was created.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "DeploymentMode": {
          "documentation": "Required. The deployment mode of the broker.",
          "locationName": "deploymentMode",
          "shape": "DeploymentMode"
        },
        "EncryptionOptions": {
          "documentation": "Encryption options for the broker.",
          "locationName": "encryptionOptions",
          "shape": "EncryptionOptions"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The broker's instance type.",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "The list of information about logs currently enabled and pending to be deployed for the specified broker.",
          "locationName": "logs",
          "shape": "LogsSummary"
        },
        "MaintenanceWindowStartTime": {
          "documentation": "The parameters that determine the WeeklyStartTime.",
          "locationName": "maintenanceWindowStartTime",
          "shape": "WeeklyStartTime"
        },
        "PendingEngineVersion": {
          "documentation": "The version of the broker engine to upgrade to. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "pendingEngineVersion",
          "shape": "__string"
        },
        "PendingHostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "pendingHostInstanceType",
          "shape": "__string"
        },
        "PendingSecurityGroups": {
          "documentation": "The list of pending security groups to authorize connections to brokers.",
          "locationName": "pendingSecurityGroups",
          "shape": "__listOf__string"
        },
        "PubliclyAccessible": {
          "documentation": "Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.",
          "locationName": "publiclyAccessible",
          "shape": "__boolean"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        },
        "StorageType": {
          "documentation": "The broker's storage type.",
          "locationName": "storageType",
          "shape": "BrokerStorageType"
        },
        "SubnetIds": {
          "documentation": "The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
          "locationName": "subnetIds",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "The list of all tags associated with this broker.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        },
        "Users": {
          "documentation": "The list of all ActiveMQ usernames for the specified broker.",
          "locationName": "users",
          "shape": "__listOfUserSummary"
        }
      },
      "type": "structure"
    },
    "DescribeConfigurationRequest": {
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "location": "uri",
          "locationName": "configuration-id",
          "shape": "__string"
        }
      },
      "required": [
        "ConfigurationId"
      ],
      "type": "structure"
    },
    "DescribeConfigurationResponse": {
      "members": {
        "Arn": {
          "documentation": "Required. The ARN of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration revision.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Description": {
          "documentation": "Required. The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        },
        "EngineType": {
          "documentation": "Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.",
          "locationName": "engineType",
          "shape": "EngineType"
        },
        "EngineVersion": {
          "documentation": "Required. The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "Required. The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "The list of all tags associated with this configuration.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "DescribeConfigurationRevisionOutput": {
      "documentation": "Returns the specified configuration revision for the specified configuration.",
      "members": {
        "ConfigurationId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "configurationId",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Data": {
          "documentation": "Required. The base64-encoded XML configuration.",
          "locationName": "data",
          "shape": "__string"
        },
        "Description": {
          "documentation": "The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeConfigurationRevisionRequest": {
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "location": "uri",
          "locationName": "configuration-id",
          "shape": "__string"
        },
        "ConfigurationRevision": {
          "documentation": "The revision of the configuration.",
          "location": "uri",
          "locationName": "configuration-revision",
          "shape": "__string"
        }
      },
      "required": [
        "ConfigurationRevision",
        "ConfigurationId"
      ],
      "type": "structure"
    },
    "DescribeConfigurationRevisionResponse": {
      "members": {
        "ConfigurationId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "configurationId",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Data": {
          "documentation": "Required. The base64-encoded XML configuration.",
          "locationName": "data",
          "shape": "__string"
        },
        "Description": {
          "documentation": "The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeUserOutput": {
      "documentation": "Returns information about an ActiveMQ user.",
      "members": {
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Pending": {
          "documentation": "The status of the changes pending for the ActiveMQ user.",
          "locationName": "pending",
          "shape": "UserPendingChanges"
        },
        "Username": {
          "documentation": "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DescribeUserRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "Username": {
          "documentation": "The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "location": "uri",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "required": [
        "Username",
        "BrokerId"
      ],
      "type": "structure"
    },
    "DescribeUserResponse": {
      "members": {
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Pending": {
          "documentation": "The status of the changes pending for the ActiveMQ user.",
          "locationName": "pending",
          "shape": "UserPendingChanges"
        },
        "Username": {
          "documentation": "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "EncryptionOptions": {
      "documentation": "Encryption options for the broker.",
      "members": {
        "KmsKeyId": {
          "documentation": "The customer master key (CMK) to use for the AWS Key Management Service (KMS). This key is used to encrypt your data at rest. If not provided, Amazon MQ will use a default CMK to encrypt your data.",
          "locationName": "kmsKeyId",
          "shape": "__string"
        },
        "UseAwsOwnedKey": {
          "documentation": "Enables the use of an AWS owned CMK using AWS Key Management Service (KMS).",
          "locationName": "useAwsOwnedKey",
          "shape": "__boolean"
        }
      },
      "required": [
        "UseAwsOwnedKey"
      ],
      "type": "structure"
    },
    "EngineType": {
      "documentation": "The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.",
      "enum": [
        "ACTIVEMQ"
      ],
      "type": "string"
    },
    "EngineVersion": {
      "documentation": "Id of the engine version.",
      "members": {
        "Name": {
          "documentation": "Id for the version.",
          "locationName": "name",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "Error": {
      "documentation": "Returns information about an error.",
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ForbiddenException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "InternalServerErrorException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBrokersOutput": {
      "documentation": "A list of information about all brokers.",
      "members": {
        "BrokerSummaries": {
          "documentation": "A list of information about all brokers.",
          "locationName": "brokerSummaries",
          "shape": "__listOfBrokerSummary"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBrokersRequest": {
      "members": {
        "MaxResults": {
          "documentation": "The maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBrokersResponse": {
      "members": {
        "BrokerSummaries": {
          "documentation": "A list of information about all brokers.",
          "locationName": "brokerSummaries",
          "shape": "__listOfBrokerSummary"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListConfigurationRevisionsOutput": {
      "documentation": "Returns a list of all revisions for the specified configuration.",
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "configurationId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integer"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Revisions": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "revisions",
          "shape": "__listOfConfigurationRevision"
        }
      },
      "type": "structure"
    },
    "ListConfigurationRevisionsRequest": {
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "location": "uri",
          "locationName": "configuration-id",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "required": [
        "ConfigurationId"
      ],
      "type": "structure"
    },
    "ListConfigurationRevisionsResponse": {
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "configurationId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integer"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Revisions": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "revisions",
          "shape": "__listOfConfigurationRevision"
        }
      },
      "type": "structure"
    },
    "ListConfigurationsOutput": {
      "documentation": "Returns a list of all configurations.",
      "members": {
        "Configurations": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "configurations",
          "shape": "__listOfConfiguration"
        },
        "MaxResults": {
          "documentation": "The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integer"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListConfigurationsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListConfigurationsResponse": {
      "members": {
        "Configurations": {
          "documentation": "The list of all revisions for the specified configuration.",
          "locationName": "configurations",
          "shape": "__listOfConfiguration"
        },
        "MaxResults": {
          "documentation": "The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integer"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListTagsRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "The Amazon Resource Name (ARN) of the resource tag.",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsResponse": {
      "members": {
        "Tags": {
          "documentation": "The key-value pair for the resource tag.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "ListUsersOutput": {
      "documentation": "Returns a list of all ActiveMQ users.",
      "members": {
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Users": {
          "documentation": "Required. The list of all ActiveMQ usernames for the specified broker.",
          "locationName": "users",
          "shape": "__listOfUserSummary"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "required": [
        "BrokerId"
      ],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "Required. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.",
          "locationName": "maxResults",
          "shape": "__integerMin5Max100"
        },
        "NextToken": {
          "documentation": "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Users": {
          "documentation": "Required. The list of all ActiveMQ usernames for the specified broker.",
          "locationName": "users",
          "shape": "__listOfUserSummary"
        }
      },
      "type": "structure"
    },
    "Logs": {
      "documentation": "The list of information about logs to be enabled for the specified broker.",
      "members": {
        "Audit": {
          "documentation": "Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.",
          "locationName": "audit",
          "shape": "__boolean"
        },
        "General": {
          "documentation": "Enables general logging.",
          "locationName": "general",
          "shape": "__boolean"
        }
      },
      "type": "structure"
    },
    "LogsSummary": {
      "documentation": "The list of information about logs currently enabled and pending to be deployed for the specified broker.",
      "members": {
        "Audit": {
          "documentation": "Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.",
          "locationName": "audit",
          "shape": "__boolean"
        },
        "AuditLogGroup": {
          "documentation": "The location of the CloudWatch Logs log group where audit logs are sent.",
          "locationName": "auditLogGroup",
          "shape": "__string"
        },
        "General": {
          "documentation": "Enables general logging.",
          "locationName": "general",
          "shape": "__boolean"
        },
        "GeneralLogGroup": {
          "documentation": "The location of the CloudWatch Logs log group where general logs are sent.",
          "locationName": "generalLogGroup",
          "shape": "__string"
        },
        "Pending": {
          "documentation": "The list of information about logs pending to be deployed for the specified broker.",
          "locationName": "pending",
          "shape": "PendingLogs"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "NotFoundException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "PendingLogs": {
      "documentation": "The list of information about logs to be enabled for the specified broker.",
      "members": {
        "Audit": {
          "documentation": "Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.",
          "locationName": "audit",
          "shape": "__boolean"
        },
        "General": {
          "documentation": "Enables general logging.",
          "locationName": "general",
          "shape": "__boolean"
        }
      },
      "type": "structure"
    },
    "RebootBrokerRequest": {
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        }
      },
      "required": [
        "BrokerId"
      ],
      "type": "structure"
    },
    "RebootBrokerResponse": {
      "members": {},
      "type": "structure"
    },
    "SanitizationWarning": {
      "documentation": "Returns information about the XML element or attribute that was sanitized in the configuration.",
      "members": {
        "AttributeName": {
          "documentation": "The name of the XML attribute that has been sanitized.",
          "locationName": "attributeName",
          "shape": "__string"
        },
        "ElementName": {
          "documentation": "The name of the XML element that has been sanitized.",
          "locationName": "elementName",
          "shape": "__string"
        },
        "Reason": {
          "documentation": "Required. The reason for which the XML elements or attributes were sanitized.",
          "locationName": "reason",
          "shape": "SanitizationWarningReason"
        }
      },
      "type": "structure"
    },
    "SanitizationWarningReason": {
      "documentation": "The reason for which the XML elements or attributes were sanitized.",
      "enum": [
        "DISALLOWED_ELEMENT_REMOVED",
        "DISALLOWED_ATTRIBUTE_REMOVED",
        "INVALID_ATTRIBUTE_VALUE_REMOVED"
      ],
      "type": "string"
    },
    "Tags": {
      "documentation": "A map of the key-value pairs for the resource tag.",
      "members": {
        "Tags": {
          "documentation": "The key-value pair for the resource tag.",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "UnauthorizedException": {
      "documentation": "Returns information about an error.",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "ErrorAttribute": {
          "documentation": "The attribute which caused the error.",
          "locationName": "errorAttribute",
          "shape": "__string"
        },
        "Message": {
          "documentation": "The explanation of the error.",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateBrokerInput": {
      "documentation": "Updates the broker using the specified properties.",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "Configuration": {
          "documentation": "A list of information about the configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "Enables Amazon CloudWatch logging for brokers.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        }
      },
      "type": "structure"
    },
    "UpdateBrokerOutput": {
      "documentation": "Returns information about the updated broker.",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "The new value of automatic upgrades to new minor version for brokers.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "Configuration": {
          "documentation": "The ID of the updated configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine to upgrade to. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "The list of information about logs to be enabled for the specified broker.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        }
      },
      "type": "structure"
    },
    "UpdateBrokerRequest": {
      "documentation": "Updates the broker using the specified properties.",
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerId": {
          "documentation": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "Configuration": {
          "documentation": "A list of information about the configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "Enables Amazon CloudWatch logging for brokers.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "BrokerId"
      ],
      "type": "structure"
    },
    "UpdateBrokerResponse": {
      "members": {
        "AutoMinorVersionUpgrade": {
          "documentation": "The new value of automatic upgrades to new minor version for brokers.",
          "locationName": "autoMinorVersionUpgrade",
          "shape": "__boolean"
        },
        "BrokerId": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the broker.",
          "locationName": "brokerId",
          "shape": "__string"
        },
        "Configuration": {
          "documentation": "The ID of the updated configuration.",
          "locationName": "configuration",
          "shape": "ConfigurationId"
        },
        "EngineVersion": {
          "documentation": "The version of the broker engine to upgrade to. For a list of supported engine versions, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html",
          "locationName": "engineVersion",
          "shape": "__string"
        },
        "HostInstanceType": {
          "documentation": "The host instance type of the broker to upgrade to. For a list of supported instance types, see https://docs.aws.amazon.com/amazon-mq/latest/developer-guide//broker.html#broker-instance-types",
          "locationName": "hostInstanceType",
          "shape": "__string"
        },
        "Logs": {
          "documentation": "The list of information about logs to be enabled for the specified broker.",
          "locationName": "logs",
          "shape": "Logs"
        },
        "SecurityGroups": {
          "documentation": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
          "locationName": "securityGroups",
          "shape": "__listOf__string"
        }
      },
      "type": "structure"
    },
    "UpdateConfigurationInput": {
      "documentation": "Updates the specified configuration.",
      "members": {
        "Data": {
          "documentation": "Required. The base64-encoded XML configuration.",
          "locationName": "data",
          "shape": "__string"
        },
        "Description": {
          "documentation": "The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateConfigurationOutput": {
      "documentation": "Returns information about the updated configuration.",
      "members": {
        "Arn": {
          "documentation": "Required. The Amazon Resource Name (ARN) of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Warnings": {
          "documentation": "The list of the first 20 warnings about the configuration XML elements or attributes that were sanitized.",
          "locationName": "warnings",
          "shape": "__listOfSanitizationWarning"
        }
      },
      "type": "structure"
    },
    "UpdateConfigurationRequest": {
      "documentation": "Updates the specified configuration.",
      "members": {
        "ConfigurationId": {
          "documentation": "The unique ID that Amazon MQ generates for the configuration.",
          "location": "uri",
          "locationName": "configuration-id",
          "shape": "__string"
        },
        "Data": {
          "documentation": "Required. The base64-encoded XML configuration.",
          "locationName": "data",
          "shape": "__string"
        },
        "Description": {
          "documentation": "The description of the configuration.",
          "locationName": "description",
          "shape": "__string"
        }
      },
      "required": [
        "ConfigurationId"
      ],
      "type": "structure"
    },
    "UpdateConfigurationResponse": {
      "members": {
        "Arn": {
          "documentation": "Required. The Amazon Resource Name (ARN) of the configuration.",
          "locationName": "arn",
          "shape": "__string"
        },
        "Created": {
          "documentation": "Required. The date and time of the configuration.",
          "locationName": "created",
          "shape": "__timestampIso8601"
        },
        "Id": {
          "documentation": "Required. The unique ID that Amazon MQ generates for the configuration.",
          "locationName": "id",
          "shape": "__string"
        },
        "LatestRevision": {
          "documentation": "The latest revision of the configuration.",
          "locationName": "latestRevision",
          "shape": "ConfigurationRevision"
        },
        "Name": {
          "documentation": "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.",
          "locationName": "name",
          "shape": "__string"
        },
        "Warnings": {
          "documentation": "The list of the first 20 warnings about the configuration XML elements or attributes that were sanitized.",
          "locationName": "warnings",
          "shape": "__listOfSanitizationWarning"
        }
      },
      "type": "structure"
    },
    "UpdateUserInput": {
      "documentation": "Updates the information for an ActiveMQ user.",
      "members": {
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Password": {
          "documentation": "The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.",
          "locationName": "password",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateUserRequest": {
      "documentation": "Updates the information for an ActiveMQ user.",
      "members": {
        "BrokerId": {
          "documentation": "The unique ID that Amazon MQ generates for the broker.",
          "location": "uri",
          "locationName": "broker-id",
          "shape": "__string"
        },
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Password": {
          "documentation": "The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.",
          "locationName": "password",
          "shape": "__string"
        },
        "Username": {
          "documentation": "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "location": "uri",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "required": [
        "Username",
        "BrokerId"
      ],
      "type": "structure"
    },
    "UpdateUserResponse": {
      "members": {},
      "type": "structure"
    },
    "User": {
      "documentation": "An ActiveMQ user associated with the broker.",
      "members": {
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "Password": {
          "documentation": "Required. The password of the ActiveMQ user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.",
          "locationName": "password",
          "shape": "__string"
        },
        "Username": {
          "documentation": "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UserPendingChanges": {
      "documentation": "Returns information about the status of the changes pending for the ActiveMQ user.",
      "members": {
        "ConsoleAccess": {
          "documentation": "Enables access to the the ActiveMQ Web Console for the ActiveMQ user.",
          "locationName": "consoleAccess",
          "shape": "__boolean"
        },
        "Groups": {
          "documentation": "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "groups",
          "shape": "__listOf__string"
        },
        "PendingChange": {
          "documentation": "Required. The type of change pending for the ActiveMQ user.",
          "locationName": "pendingChange",
          "shape": "ChangeType"
        }
      },
      "type": "structure"
    },
    "UserSummary": {
      "documentation": "Returns a list of all ActiveMQ users.",
      "members": {
        "PendingChange": {
          "documentation": "The type of change pending for the ActiveMQ user.",
          "locationName": "pendingChange",
          "shape": "ChangeType"
        },
        "Username": {
          "documentation": "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.",
          "locationName": "username",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "WeeklyStartTime": {
      "documentation": "The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker.",
      "members": {
        "DayOfWeek": {
          "documentation": "Required. The day of the week.",
          "locationName": "dayOfWeek",
          "shape": "DayOfWeek"
        },
        "TimeOfDay": {
          "documentation": "Required. The time, in 24-hour format.",
          "locationName": "timeOfDay",
          "shape": "__string"
        },
        "TimeZone": {
          "documentation": "The time zone, UTC by default, in either the Country/City format, or the UTC offset format.",
          "locationName": "timeZone",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "type": "double"
    },
    "__integer": {
      "type": "integer"
    },
    "__integerMin5Max100": {
      "max": 100,
      "min": 5,
      "type": "integer"
    },
    "__listOfAvailabilityZone": {
      "member": {
        "shape": "AvailabilityZone"
      },
      "type": "list"
    },
    "__listOfBrokerEngineType": {
      "member": {
        "shape": "BrokerEngineType"
      },
      "type": "list"
    },
    "__listOfBrokerInstance": {
      "member": {
        "shape": "BrokerInstance"
      },
      "type": "list"
    },
    "__listOfBrokerInstanceOption": {
      "member": {
        "shape": "BrokerInstanceOption"
      },
      "type": "list"
    },
    "__listOfBrokerSummary": {
      "member": {
        "shape": "BrokerSummary"
      },
      "type": "list"
    },
    "__listOfConfiguration": {
      "member": {
        "shape": "Configuration"
      },
      "type": "list"
    },
    "__listOfConfigurationId": {
      "member": {
        "shape": "ConfigurationId"
      },
      "type": "list"
    },
    "__listOfConfigurationRevision": {
      "member": {
        "shape": "ConfigurationRevision"
      },
      "type": "list"
    },
    "__listOfDeploymentMode": {
      "member": {
        "shape": "DeploymentMode"
      },
      "type": "list"
    },
    "__listOfEngineVersion": {
      "member": {
        "shape": "EngineVersion"
      },
      "type": "list"
    },
    "__listOfSanitizationWarning": {
      "member": {
        "shape": "SanitizationWarning"
      },
      "type": "list"
    },
    "__listOfUser": {
      "member": {
        "shape": "User"
      },
      "type": "list"
    },
    "__listOfUserSummary": {
      "member": {
        "shape": "UserSummary"
      },
      "type": "list"
    },
    "__listOf__string": {
      "member": {
        "shape": "__string"
      },
      "type": "list"
    },
    "__long": {
      "type": "long"
    },
    "__mapOf__string": {
      "key": {
        "shape": "__string"
      },
      "type": "map",
      "value": {
        "shape": "__string"
      }
    },
    "__string": {
      "type": "string"
    },
    "__timestampIso8601": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "__timestampUnix": {
      "timestampFormat": "unixTimestamp",
      "type": "timestamp"
    }
  }
}
